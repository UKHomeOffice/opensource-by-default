[{"name":"UKHomeOffice/swappr","private":false,"url":"https://github.com/UKHomeOffice/swappr","license":null,"readme":"swappr\n======\n\nClient / Server app for managing shift swaps\n\n## Running the app\n\nSwappr uses MySQL. Before running for the first time, ensure the database and user exist and have appropriate \npermissions. E.g. by executing the contents of [schema.sql](web/src/db/schema.sql).\n\nStart the MySQL server:\n\n```\nmysql.server start\n```\n\nThen set up the db:\n\n```\nmysql -u root < schema.sql\n```\n\nand run the seed:\n\n```\nmysql -u root < seed.sql\n```\n\n## Smoke tests\n### Requirements\nInstall [PhantomJS](http://phantomjs.org/download.html) eg. using Homebrew on Mac:\n\n```\nbrew update && brew install phantomjs\n```\n\nNavigate to /integration/smoke_tests and run\n\n```\nbundle install\n```\n\n### Running\nTo run the tests locally, ie localhost:8080, use:\n\n```\nrake smoke_test\n```\n\nThis will reset the database and seed it with 2 users, bill and ben, before running the test suite.\n\nTo run the test suite against another instance of the app, pass the hostname of that server as an argument:\n\n```\nrake \"smoke_test['http://www.google.com']\"\n```\n\n### Writing\nThe tests are written in [Capybara](https://github.com/jnicklas/capybara).\n\nShared code for steps is in step_definitions/common_steps.rb\n\n### Debugging\n\nTo aid debugging of tests, open integration/smoke_tests/spec/spec_helper.rb and set\n\n```\nCapybara.default_driver = :selenium\n```\n\nThis will run the tests in Firefox by default so you can see what's going on.\n\nTo set a breakpoint in a test, insert this line into your step definition:\n\n```\nbinding.pry\n```\n\nThis will pause execution in the command prompt and let you examine variables, run Capybara queries etc. You can also step through the test using next / continue. See [pry-nav](https://github.com/nixme/pry-nav)","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/cts-pentaho","private":false,"url":"https://github.com/UKHomeOffice/cts-pentaho","license":null,"readme":"cts-alfresco-tomcat\n===================\n\nAlfresco tailored tomcat\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vcloud-start_stop","private":false,"url":"https://github.com/UKHomeOffice/vcloud-start_stop","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Vcloud::StartStop\n\nTODO: Write a gem description\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n    gem 'vcloud-start_stop'\n\nAnd then execute:\n\n    $ bundle\n\nOr install it yourself as:\n\n    $ gem install vcloud-start_stop\n\n## Usage\n\nTODO: Write usage instructions here\n\n## Contributing\n\n1. Fork it ( https://github.com/[my-github-username]/vcloud-start_stop/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/puppet-runstatus","private":false,"url":"https://github.com/UKHomeOffice/puppet-runstatus","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# Puppet::Runstatus\n\nTODO: Write a gem description\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n```ruby\ngem 'puppet-runstatus'\n```\n\nAnd then execute:\n\n    $ bundle\n\nOr install it yourself as:\n\n    $ gem install puppet-runstatus\n\n## Usage\n\nTODO: Write usage instructions here\n\n## Contributing\n\n1. Fork it ( https://github.com/[my-github-username]/puppet-runstatus/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/adegnanCfTest-","private":false,"url":"https://github.com/UKHomeOffice/adegnanCfTest-","license":null,"readme":"# adegnanCfTest-\nCloud Foundry Testing\n\n## Getting started \n\nAssuming you've already received the email with your credentials in it, you'll want to install the cloudfoundry-cli package; This can be found here https://github.com/cloudfoundry/cli, there are pre-compiled binaries if you scroll down slightly.  Following that, as suggested, login and change your password using the following two commands:-\n\n- cf login\n- cf passwd\n\n## starting an app\n\n- will fill this out later\n\n## Notes on Crippledness\n\nI don't have permission to do the following commands\n- cf create-service-broker -  This, I believe, is how we add more services, We'd need this if we want to actually give people the ability to make their own services\n\n\n## Questions\n\nCF is a PaaS system; it is unclear that we'd get any access to the infrastructure beyond what the APIs give us access to.  \n\n### Security\n\nWe need to know whether our infrastructure is using shared resources and how this affects our security.  Follow up questions may be needed depending on these answers.\n\n- What platform is CF running on?  \n- Is the CF software shared between clients?\n- Are the physical nodes shared?\n- Are the underlying virtual machines shared?\n- Is the compute platform shared?\n- Are any of the storage platforms shared?\n- Are any network components shared?\n- Where is our entry point to said network?\n- Do we have any kind of separation on the network layer?\n- Where do our external SSL connections terminate?\n- Are there any shared resources beyond this point?\n\nWe need to ask any questions about the underlying platform.  This is probably something VMware related and thus it could be useful to ask the similar questions we'd ask regarding the IaaS platform provided by skyscape:\n\n- What are you running on the underlying platform\n- Is there a dedicated security team working on the platform?\n- What hardware is the platform running on.  Switches, routers, servers, etc?\n- How is the underlying platform components patched?\n- How and what is monitored on the platform?\n\nWe need to ask any CF specific questions, particularly on how this pertains to any shared resources which have been disclosed above.\n\n- What's the process on packaging and patch CF itself?\n- How are processed isolated?  Is it possible to isolate at VM level?  CGroup?  User?\n- How does CF persist data?\n- How are process created, destroyed, etc?\n- How are the router end points protected?  How is the router itself protected?\n- Does NATS communication have any encryption?  Does it need it.\n- Are services bound over SSL or isolated someway?\n- Is the blobstore locked down?\n- Lucid is out of support in April; What's happening here?\n- Are we using the recommended VLAN setup from CF docs?  Unsure how this protects from internal shared-server threats?  \n- If VMs themselves are VLANd, are they shared?  If so, what exactly stops an app from snooping the network?\n- How is the BOSH firewall manifest setup?\n- How to connections between host and containers work? Documentation is vague.  http://docs.cloudfoundry.org/concepts/security.html\n- What kind of SSL is used by BOSH, UAA and the router connections?\n- Is BOSH data encrypted?  CF doesn't do this by default.\n- Who has BOSH access?\n- How does the Cloud Controller lock down access?\n- What stops me from attempting to escaping my container when using a ruby command line app?  \n- Is the jumpbox secure?\n- Are VLANS configured as stated.  Does this drill down to container level?  How are these distrubuted, so only nodes needing access to the VLAN get access, or do all nodes get access to all VLANs?\n- What's stopping promiscious interfaces?\n- Application and Datastores connections are over SSL?\n\n\n### Scalability\n\nIt's important to know how CF is scaled in general and in this specific install. http://docs.cloudfoundry.org/concepts/high-availability.html\n\n- How many AZs are there and in how many datacentres?\n- What will our quotas be?\n- We actually going to get org, space, roles and permission control?\n- How exactly are the service-brokers setup?  Do they support HA?  How do we do this?\n\n\n### Features\n\nWe need to have an outline on what the platform offers and where the manual tasks lie.  Specifically I want to figure out which tasks will require us to log a ticket and wait.\n\n- Docs suggests that you have to terminate SSL outwith the platform.  Is this still the case?  If so, how do we setup our own SSLs?\n- How does it handle new versions of an app deploy.  Does it achieve zero-downtime?\n- How do we manage performance?  Does it have a profiler?  \n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/govuk-template-compiler","private":false,"url":"https://github.com/UKHomeOffice/govuk-template-compiler","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-govuk-template\n\nCompiles govuk mustache template into a more usable format and provide middleware for use in apps.\n\nExisting [govuk mustache template](https://www.npmjs.com/package/govuk_template_mustache) has simple mustache placeholders for content sections, which necessitates a two step compile process where sections are compiled individually and then again into the parent template.\n\nCompiling the template to replace these placeholders with variables allows for templates to implement the govuk template as a parent partial.\n\n## Example\n\n```\n{{< govuk-template}}\n\n    {{$main}}\n        <h1>Page Content</h1>\n    {{/main}}\n\n{{/ govuk-template}}\n```\n\n## Installation\n\n```\nnpm install [--save] hmpo-govuk-template\n```\n\n## Usage\n\nThe compilation of the template is performed automatically as an npm postinstall hook.\n\nWhen used as part of an express app, a setup method is provided which will add a static-middleware (using [serve-static](https://www.npmjs.com/package/serve-static)) to serve the template assets without needing to copy them to any other location.\n\nIt will also add the template as a mustache partial with a name of \"govuk-template\".\n\n### To configure express middleware\n```\nrequire('hmpo-govuk-template').setup(app[, { ... options ...}]);\n```\n\n### To only load the partial location but not serve the assets use the template function. The `govukAssetPath` local will need to set to the absolute public asset location.\n```\napp.use(function (req, res, next) {\n    res.locals = res.locals || {};\n    res.locals.govukAssetPath = '/absolute/asset/path'\n});\napp.use(require('hmpo-govuk-template').template);\n```\n\n### To use the mustache partial\n```\n{{< govuk-template}}\n    {{$pageTitle}}An example page{{/pageTitle}}\n    {{$main}}\n        <h1>Page Content</h1>\n    {{/main}}\n{{/ govuk-template}}\n```\n\n## Options\n\nA number of options can be passed with the app into the setup method:\n\n* `path` - Sets the base path for the location of static assets - Default: `/govuk-assets`\n\nOther options are passed onto the [serve-static](https://www.npmjs.com/package/serve-static) configuration, and more details can be found in [the serve-static documentation](https://www.npmjs.com/package/serve-static)\n\n## Example\n\nThere is an example implmentation in '/example'. To run:\n\n```\ncd example\nnpm install\nnpm start\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/express-partial-templates","private":false,"url":"https://github.com/UKHomeOffice/express-partial-templates","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# express-partial-templates\n\nA middleware that will use the `views` path and the `view engine` string that are stored against an [Express](http://expressjs.com) `app` object to generate a key-value object that identifies and makes accessible the file paths of partial templates against `res.locals.partials` on execution.\n\n## Installation\n\n```\nnpm install [--save] express-partial-templates;\n```\n\n## Usage\n\n```\nvar app = require('express')();\n\napp.set('view engine', 'html');\napp.set('views', path.join(__dirname, '/views'));\napp.use(require('express-partial-templates')(app));\n\napp.use(function (req, res, next) {\n    // res.locals.partials has been set.\n\n    next();\n});\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-form-controller","private":false,"url":"https://github.com/UKHomeOffice/passports-form-controller","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-form-controller\n\nImplements a request pipeline for GET and POST of forms, with input cleaning/formatting and validation.\n\n## Usage\n\nBasic usage:\n\n```javascript\nvar Form = require('hmpo-form-controller');\n\nvar form = new Form({\n    template: 'form',\n    fields: {\n        name: {\n            validate: 'required'\n        }\n    }\n});\n\napp.use('/', form.requestHandler());\n```\n\nThis won't really be very useful though, since all it will do is render the \"form\" template on `/` and respond to GET and POST requests.\n\nFor real-world usage you will probably want to extend the Form class to create your own controllers.\n\n```javascript\nvar Form = require('hmpo-form-controller'),\n    util = require('util');\n\nvar MyForm = function (options) {\n    Form.call(this, options);\n};\n\nutil.inherits(MyForm, Form);\n\nmodule.exports = MyForm;\n```\n\nThe Form class allows for a number of insertion points for extended functionality:\n\n* `configure`   Allows for dynamic overwriting of particular points of form configuration based on user session\n* `middlewareMixins`   Allows additional middleware to be added after the configure stage\n* `process`     Allows for custom formatting and processing of input prior to validation\n* `validate`    Allows for custom input validation\n* `getValues`   To define what values the fields are populated with on GET\n* `saveValues`  To define what is done with successful form submissions\n\nAll of these methods take three arguments of the request, the response and a callback. In all cases the callback should be called with a first argument representing an error.\n\n* `getErrors/setErrors` Define how errors are persisted between the POST and subsequent GET of a form step.\n* `locals` Define what additional variables a controller exposes to its template\n\nThese methods are synchronous and take only the request and response obejct as arguments.\n\n### Validators\n\nThe library [supports a number of validators](https://github.com/UKHomeOffice/passports-form-controller/blob/master/lib/validation/validators.js).\n\nBy default the application of a validator is optional on empty strings. If you need to ensure a field is validated as being 9 characters long and exists then you need to use both an `exactlength` and a `required` validator.\n\n#### Custom Validators\n\nCustom validator functions can be passed in field config. These must be named functions and the name is used as the error.type for looking up validation error messages.\n\nfields.js\n```js\n{\n    'field-1': {\n        validate: ['required', function isTrue(val) {\n            return val === true;\n        }]\n    }\n}\n```\n\n### steps config\n\n#### Handles journey forking\n\nEach step definition accepts a `next` property, the value of which is the next route in the journey. By default, when the form is successfully submitted, the next steps will load. However, there are times when it is necessary to fork from the current journey based on a users response to certain questions in a form. For such circumstances there exists the `forks` property.\n\nIn this example, when the submits the form, if the field called 'example-radio' has the value 'superman', the page at '/fork-page' will load, otherwise '/next-page' will be loaded.\n\n```js\n\n'/my-page': {\n    next: '/next-page',\n    forks: [{\n        target: '/fork-page',\n        condition: {\n            field: 'example-radio',\n            value: 'superman'\n        }\n    }]\n}\n```\n\nThe condition property can also take a function. In the following example, if the field called 'name' is more than 30 characters in length, the page at '/fork-page' will be loaded.\n\n```js\n\n'/my-page': {\n    next: '/next-page',\n    forks: [{\n        target: '/fork-page',\n        condition: function (req, res) {\n            return req.form.values['name'].length > 30;\n        }\n    }]\n}\n```\n\nForks is an array and therefore each fork is interrogated in order from top to bottom. The last fork whose condition is met will assign its target to the next page variable.\n\nIn this example, if the last condition resolves to true - even if the others also resolve to true - then the page at '/fork-page-three' will be loaded. The last condition to be met is always the fork used to determine the next step.\n\n```js\n\n'/my-page': {\n    next: '/next-page',\n    forks: [{\n        target: '/fork-page-one',\n        condition: function (req, res) {\n            return req.form.values['name'].length > 30;\n        }\n    }, {\n        target: '/fork-page-two',\n        condition: {\n            field: 'example-radio',\n            value: 'superman'\n        }\n    }, {\n        target: '/fork-page-three',\n        condition: function (req, res) {\n            return typeof req.form.values['email'] === 'undefined';\n        }\n    }]\n}\n```\n\n### Dynamic field options\n\nIf the options for a particular field are dependent on aspects of the user session, then these can be extended on a per-session basis using the `configure` method.\n\nFor example, for a dynamic address selection component:\n\n```js\nMyForm.prototype.configure = function configure(req, res, next) {\n    req.form.options.fields['address-select'].options = req.sessionModel.get('addresses');\n    next();\n}\n```\n\n### Middleware mixins\n\nIf you want to add middleware that uses dynamic field options then you can use the `middlewareMixins` method. This is called after `configure` so after the dynamic field options are set.\n\nFor example, for setting the base url to res locals:\n\n```js\nMyForm.prototype.middlewareMixins = function middlewareMixins(req, res, next) {\n    this.use(this.setBaseUrlLocal).bind(this);\n}\n\nMyForm.prototype.setBaseUrlLocal = function setBaseUrlLocal(req, res, next) {\n    res.locals.baseUrl = req.baseUrl;\n    next();\n}\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-model","private":false,"url":"https://github.com/UKHomeOffice/passports-model","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-model\nSimple model for interacting with http/rest apis.\n\n## Usage\n\nNormally this would be used as an abstract class and extended with your own implementation.\n\nImplementations would normally define at least a `url` method to define the target of API calls.\n\nThere are three methods for API interaction corresponding to GET, POST, and DELETE http methods:\n\n### `fetch`\n\n```javascript\nvar model = new Model();\nmodel.fetch(function (err, data, responseTime) {\n    console.log(data);\n});\n```\n\n### `save`\n\n```javascript\nvar model = new Model();\nmodel.set({\n    property: 'properties are sent as JSON request body by default'\n});\nmodel.save(function (err, data, responseTime) {\n    console.log(data);\n});\n```\n\nThe method can also be overwritten by passing options\n\n```javascript\nvar model = new Model();\nmodel.set({\n    property: 'this will be sent as a PUT request'\n});\nmodel.save({ method: 'PUT' }, function (err, data, responseTime) {\n    console.log(data);\n});\n```\n\n### `delete`\n\n```javascript\nvar model = new Model();\nmodel.delete(function (err, data) {\n    console.log(data);\n});\n```\n\nIf no `url` method is defined then the model will use the options parameter and [Node's url.format method](https://nodejs.org/api/url.html#url_url_format_urlobj) to construct a URL.\n\n```javascript\nvar model = new Model();\n\n// make a GET request to http://example.com:3000/foo/bar\nmodel.fetch({\n    protocol: 'http',\n    hostname: 'example.com',\n    port: 3000,\n    path: '/foo/bar'\n}, function (err, data, responseTime) {\n    console.log(data);\n});\n```\n\n## Events\n\nAPI requests will emit events as part of their lifecycle.\n\n`sync` is emitted when an API request is sent\n```javascript\nmodel.on('sync', function (settings) { });\n```\n\n`success` is emitted when an API request successfully completes\n```javascript\nmodel.on('success', function (data, settings, statusCode, responseTime) { });\n```\n\n`fail` is emitted when an API request fails\n```javascript\nmodel.on('fail', function (err, data, settings, statusCode, responseTime) { });\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-template-mixins","private":false,"url":"https://github.com/UKHomeOffice/passports-template-mixins","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-template-mixins\nA middleware that exposes a series of Mustache mixins on `res.locals` to ease usage of forms, translations, and some other things.\n\nIt takes an optional [options object](#options) argument.\n\n## Installation\n\n```javascript\nnpm install [--save] hmpo-template-mixins;\n```\n\n## Usage\n\n```javascript\nvar express = require('express');\nvar i18n = require('i18n-future');\nvar mixins = require('hmpo-template-mixins');\n\napp.set('view engine', 'html');\napp.set('views', path.join(__dirname, '/views'));\n\napp.use(i18n.middleware());\napp.use(mixins({ sharedTranslationsKey: 'passport.renew' }));\n\napp.use(function (req, res) {\n    // NOTE: res.locals.partials has been set.\n\n    res.render('example-template');\n});\n```\n\nIf rendering as part of an HMPO controller's middleware chain then the field configuration will automatically be set to `res.locals.options.fields` by the controller, and will be loaded from here by the mixins.\n\nAlternatively, if not using HMPO controllers, you can explicitly set field configuration with instantiating the middleware by passing a `fields` option. This should not be used for dynamic field configuration.\n\n## Translation\n\nBy default any function set to `req.translate` will be used for translation if it exists. For example, that generated using [i18n-future](https://npmjs.com/package/i18n-future) middleware.\n\n## Options\n\n### viewsDirectory\n\nAllows you override the directory that the module checks for partials in - Default: the root of this project\n\n### viewEngine\n\nAllows you to alter the file extension of the templates - Default: 'html'\n\n### sharedTranslationsKey\n\nPrefixes keys for translation - Default: '' (empty string)\n\n### translate\n\nDefines a custom translation method - Default: `req.translate`\n\n### fields\n\nStatic field configuration - Default: `{}`\n\n## Mustache mixins available\n\n```\nt\nselected\nlowercase\nuppercase\ncapscase\nhyphenate\ndate\ntime\ncurrency\ncurrencyOrFree\nurl\nselect\ninput-text\ninput-date\ninput-text-compound\ninput-text-code\ninput-number\ninput-phone\nradio-group\ncheckbox\ncheckbox-compound\ncheckbox-required\ncheckbox-group\ninput-submit\ntextarea\n```\n\n## Field options\n\n- `className`: A string or array of string class names.\n- `labelClassName`: A string or array of string class names for the label, hint, and error section.\n- `labelTextClassName`: A string or array of string class names for the label text.\n- `label`: The intended value of the HTML `label` attribute.\n- `type`: The value of the HTML input `type` attribute.\n- `required`: Value applied to `aria-required` HTML attribute.\n- `hint`: This adds context to the label, which it is a part of, for input text, radio groups and textarea. It is used within the input by aria-describedby for screen readers.\n- `maxlength`: Applicable to text-based fields and mapped to the `maxlength` HTML attribute.\n- `options`: Applicable to HTML `select` and `radio` controls and used to generate the items of either HTML element.\n- `selected`: Applicable to `select`, `checkbox`, and `radio` controls. Will render the selected HTML option/element selected or checked.\n- `legend`: Applicable to `radio` button controls, which are wrapped in a HTML `fieldset` with a `legend` element.\n- `legendClassName`: Applied as a class name to HTML `legend` attribute.\n- `toggle`: Can be used to toggle the display of the HTML element with a matching `id`. See [passports-frontend-toolkit](https://github.com/UKHomeOffice/passports-frontend-toolkit/blob/master/assets/javascript/progressive-reveal.js) for details.\n- `attributes`: A hash of key/value pairs applicable to a HTML `textarea` field. Each key/value is assigned as an attribute of the `textarea`. For example `spellcheck=\"true\"`.\n- `child`: Render a child partial beneath each option in an `optionGroup`. Accepts a custom mustache template string, a custom partial in the format `partials/{your-partial-name}` or a template mixin key which will be rendered within a panel element partial.\n\n## `date` mixin\n\nDates should be provided to the date lambda in ISO format\n```\n{{#date}}2017-06-03T12:34:56.000Z{/date}\n3 June 2017\n```\n\nA moment format can be supplied. The default format is D MMMM YYYY.\n```\n{{#date}}2017-06-3T12:34:56.000Z|DD MMM YYYY HH:MMa{/date}\n03 Jun 2017 12:34pm\n```\n\n## `time` mixin\n\nThe time formatter wraps a formatted time to correct for GDS standard:\n```\n{{#time}}3:00pm{{/time}}\n3pm\n\n{{#time}}11 May 2017 at 12:00pm{{/time}}\n11 May 2017 at midday\n\n{{#time}}12:00am{{/time}}\nMidnight\n```\n\nComma separated options can be provided to only do transforms for midday, midnight, or shortened time:\n```\n{{#time}}12:00pm|short,midnight{{/time}}\n12pm\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/payments-service","private":false,"url":"https://github.com/UKHomeOffice/payments-service","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"## Synopsis\n\nThis project separates the concern of handling a payment gateway from the client requiring the integration.\n\nBenefits include ease of financial transaction reporting, payment event and type handling.\n \nFurthermore, although WorldPay is the only current payment gateway implemented the abstraction makes implementing alternative providers easier from the client perspective. \n\n## Code Example\n\nTo learn the features implemented in this project the suggested starting place is the controller tests you can find [here](payments/test/controller/), specifically PaymentControllerSpec, PaymentEventControllerSpec and WorldPayTransactionReportControllerSpec.\n\n## Motivation\n\nThis project exists because it is useful for the Home Office Visa exemplar and payment gateway integration is common to many government projects.\n\n## Installation\n\nThis project is implemented in Scala and uses Mongo for data persistence.\n\nTo build the project execute `./build.sh`, and likewise to run execute `./run.sh` from the project root folder.\n\n## API Reference\n\nThis project is a web application exposing RESTful web services. The expected content-type is `application/json` except from endpoints specific for WorldPay.\n\n### `GET /payment-types/:region`\n\n#### Description\n\nReturns a list of payment types for a given `region`.\n\n#### Header attributes\n\n`X-CLIENT-ID` - to define client id\n\n#### Parameters\n\n* `region` - a `string` parameter for a region name; it has to match one of regions specified in the configuration.\n\n#### Response\n\nA json representing set of payment types.\n\n\n### `POST /payment/start`\n\n#### Description\n\nStarts a new payment by initializing it on both Payments and the WorldPay side and returns a response json with a redirect `url`.\n\n#### Header attributes\n\n`X-CLIENT-ID` - to define client id\n\n#### Payload\n\nA json structure containing all required data.\n\nExample:\n\n```\n{\n  \"externalReference\": \"pnn\",\n  \"internalReference\": \"appId\",\n  \"payee\": {\n    \"title\": \"Mr\",\n    \"givenName\": \"givenName\",\n    \"familyName\": \"familyName\",\n    \"email\": \"lincolnshire.poacher@example.com\",\n    \"phoneNumber\": \"0123456789\",\n    \"billingAddress\": {\n      \"line1\": \"line1\",\n      \"line2\": \"line2\",\n      \"line3\": \"line3\",\n      \"townCity\": \"London\",\n      \"postCode\": \"EC2 2CE\",\n      \"countryCode\": \"CHN\"\n    }\n  },\n  \"description\": \"I am a product\",\n  \"profile\": {\n    \"paymentType\": \"VISA-SSL\",\n    \"region\": \"uk\"\n  },\n  \"paymentItems\": [{\n     \"description\": \"6 months\",\n     \"price\": 234.0\n  }\n  ],\n  \"total\": 234.0,\n  \"currency\": \"GBP\",\n  \"locale\": \"\",\n  \"additionalInformation\": {\n      \"GWF\": \"123\"\n   }\n}\n```\n\n#### Response\n\nA json containing `url` to be used to redirect to payment pages along with payment `externalReference`.\n\n\n### `GET /payment/perform-inquiry/:internalReference`\n\n#### Description\n\nForces to perform inquiry on the WorldPay to check the current status of the latest payment for the given `internalReference`.\n\nAs a result the service may asynchronously send a notification to the client system informing about the change in payment status.\n\n#### Parameters\n\n* `internalReference` - a `string` parameter for internal payment reference.\n\n#### Response\n\nNo specific response body.\n\n\n### `GET /payment-submission/confirmation`\n\n#### Description\n\nAn endpoint to handle synchronous WorldPay callbacks on payment submission. There is number of query parameters WorldPay adds to the query, however the service takes into account only `status` and `externalReference`.\n\nThis main purpose of this endpoint it to handle *APM* payments as the `status` query parameter is added only for them.\n\nAs a result the service may asynchronously send a notification to the client system informing about the change in payment status.\n\n#### Parameters\n\n* `externalReference` - a `string` parameter for external payment reference;\n* `status` - a `string` representing current payment status; there is a set of possible values for that field.\n\n#### Response\n\nResponse body required by WorldPay: `[OK]`\n\n\n### `GET /notify`\n\n#### Description\n\nAn endpoint to receive asynchronous WorldPay notifications about a payment. There is number of query parameters WorldPay adds to the query to both identify the payment and to give information about its current status.\n\nAs a result the service may asynchronously send a notification to the client system informing about the change in payment status.\n\n#### Parameters\n\n* `PaymentCurrency` - a `string` parameter for currency used on the payment;\n* `PaymentStatus` - a `string` representing current payment status;\n* `OrderCode` - a `string` parameter for the payment external reference;\n* `PaymentMethod` - a `string` parameter for payment method used on the payment;\n* `PaymentAmount` - a `number` parameter with the paid amount; value multiplied by 100; contains no commas.\n\n#### Response\n\nResponse body required by WorldPay: `[OK]`\n\n\n### `POST /report`\n\n#### Description\n\nAn endpoint to receive reports from WorldPay. It generates two reports and sends them as email attachments to recipients specified in the config file.\n\nThe endpoint payload is in XML format.\n\n#### Response\n\nResponse body required by WorldPay: `<html> <head>Report Response</head> <body> [OK] </body> </html>`\n\n\n### `POST /migration/payment`\n\n#### Description\n\nThis endpoint creates initial payment data on the service side. It does not initializes payment on WorldPay side, though.\n\nThe endpoint is for a parallel phase when a client system was already integrated with WorldPay and is moving to use the new gateway system.\n\n#### Header attributes\n\n`X-CLIENT-ID` - to define client id\n\n#### Response\n\nNo specific response body.\n\n\n### `GET /healthcheck`\n\n#### Description\n\nAn endpoint to check service's health.\n\n#### Response\n\nReturns `healthy!` along with build number if everything is fine.\n\n\n### Callback urls\n\nThe service requires defining several urls in order to interact with client systems.\n\n#### `payment.report.url`\n\nA client url where generated reports are sent.\n\n#### `payment.notification.url`\n\nA client url where notifications about payment status change are sent.\n\n#### `pending.url`\n\nA client url where payment journey gets redirected for pending payment.\n\n#### `cancel.url`\n\nA client url where payment journey gets redirected in case of payment being cancelled.\n\n\n## Tests\n\nAll tests are executed in the build process.\n\nHowever if you are learning how the service works through running individual tests, this is best done in an IDE such as IntelliJ.\n\n## Contributors\n\nIf you want to contribute to the project you can do it by creating a pull request.\n\n\n## Known issues\n\nThere is no validation of the string fields within the JSON payload which, if not correctly protected by the calling client, could leave the potential for a XML injection attack.\n\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at james@yobriefca.se or rnehru@deloitte.co.uk. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/removals_integration","private":false,"url":"https://github.com/UKHomeOffice/removals_integration","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Removals Integration API\n\n[![Build](https://travis-ci.org/UKHomeOffice/removals_integration.png)](https://travis-ci.org/UKHomeOffice/removals_integration)\n[![Coverage Status](https://coveralls.io/repos/github/UKHomeOffice/removals_integration/badge.svg)](https://coveralls.io/github/UKHomeOffice/removals_integration)\n[![Quality](https://codeclimate.com/github/UKHomeOffice/removals_integration.png)](https://codeclimate.com/github/UKHomeOffice/removals_integration)\n[![Dependencies](https://david-dm.org/UKHomeOffice/removals_integration.png)](https://david-dm.org/UKHomeOffice/removals_integration)\n## Quickstart:\n\n Get [NodeJS](https://nodejs.org) via [nvm](https://github.com/creationix/nvm)\n```sh\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\n```\n\n#### Install NodeJS 4 LTS\n```sh\n$ nvm install 4\n$ nvm use 4\n```\n### Build:\n```sh\n$ npm install\n```\n### Test:\n```sh\n$ npm test\n```\n### CI Test:\n```sh\n$ npm test\n```\n### Start single-threaded unmanaged server:\n```sh\n$ npm start\n```\n### Start in production mode with MySQL server and Redis server:\n\n(set environment variables to whatever you've configured)\n```sh\nNODE_ENV=productionAlter \\\nDBHOST=localhost \\\nDBPORT=3306 \\\nDBUSER=root \\\nDBPASS=root \\\nDBNAME=sails \\\nREDIS_SERVICE_HOST=localhost \\\nREDIS_SERVICE_PORT=6379 \\\nPORT=8080 \\\nnpm start\n```\n\n## Environment variables\n\n| VAR | OPTION | RESULT |\n| --- | ------ | ------ |\n| NODE_ENV | production | start in a production mode, use a mysql db, use redis, no fixtures, **do not run** migrations |\n| NODE_ENV | productionAlter | start in a production mode, use a mysql db, use redis, no fixtures, **do run** migrations |\n| NODE_ENV | development | start in a development mode, use a local in-memory database, no fixtures, no redis |\n| PORT | [integer] | port to run node server on |\n| DBHOST | [string] | mysql db host |\n| DBPORT | [string] | mysql db port |\n| DBUSER | [string] | mysql db user |\n| DBPASS | [string] | mysql db password |\n| REDIS_SERVICE_HOST | [string] | redis host |\n| REDIS_SERVICE_PORT | [string] | redis port |\n\n## Docker\nCan be built and run in the same way with docker for example:\n```sh\n$ docker build -t ibm-backend .\n$ docker run -i -e \"NODE_ENV=development\" ibm-backend\n```\n","travis":true,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.\n","masterBranchProtection":false},{"name":"UKHomeOffice/passports-frontend-toolkit","private":false,"url":"https://github.com/UKHomeOffice/passports-frontend-toolkit","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-frontend-toolkit\nSet of common UI patterns/styles for hmpo projects\n\n## Images\nCopy `assets/images/hmpo` to your image directory. Images are loaded by using the `file-url` function provided by [GOV.UK frontend toolkit](https://github.com/alphagov/govuk_frontend_toolkit). The `file-url` function uses the `$path` variable which is set before the toolkit's modules are loaded.\n\n## Vendor JavaScript\nAdditional vendor JavaScript files are included. These are:\n\n* details.polyfill.js\n* indexof.polyfill.js\n* safari-cachebuster.js\n\nCopy `assets/javascript/vendor` into your javascript directory (ie `hmpo/vendor`) and compile them with your JavaScript.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vcloud_packer_images","private":false,"url":"https://github.com/UKHomeOffice/vcloud_packer_images","license":null,"readme":"## vcloud_packer_images\nHelps you generates an image from an iso ( currently tested using ubuntu 14.04 but should be pretty portable) which we can upload as a skyscape template.  \n\n## Intended use\n### General form \nBuild a new template:\n```./createimage [-p,-u,-o,-t] [build|upload] <template name>```\n\nThe createimage script will upload the template to Skyscape or a vCenter compatible provider.\n\n** Required Fields for upload**\n* -d distro\n* -u username\n* -o org\n* -c catalog\n\nThe upload options will build an ovftool command and the ovftool will in turn prompt you for a password. For the sake of security specifying the\npassword for image uploading is not allowed.\n\n\n### Examples\n```\ngit clone git@github.com:UKHomeOffice/vcloud_packer_images.git\ncd vcloud_packer_images\n./createimage -p p4ssw0rd build centos-66-x64 #_for Centos 66_\n./createimage -p p4ssw0rd build ubuntu-1404-x64 #_for Ubuntu 14.04_\n./createimage -u 123.456.789 -o 1234-456-223a -t centos -c CentOS  upload centos-66-x64\n./createimage build #_you will be prompted for options (distro, vm type, password) during the build run\n```\n\n### Skyscape translation\nTo get API details for skyscape you need to login to the (portal)[https://portal.skyscapecloud.com] and click on your username and then (API)[https://portal.skyscapecloud.com/user/api] . \nThis will give you the API details requried to run the createimage tool. **Note** however that the username as specified by Skyscape is actually your username and the organisation \nseperated by an **@** symbol.\n\n## TODO\n\n- Add to the build command so it runs a fix on any json configs before proceeding.\n- Figure out how to run this without infecting host system. (If you have vagrant running with something else other than virtualbox, you _should_ be able to vagrant up) \n- Double check ruby dependancies are correct.\n- Integrate with local or remote vagrant store to upload vagrant images\n- Move puppet scripts to a share directory used by all images\n- Make the packer build files an ERB template\n- Add PACKER_CACHE_DIR env variable to keep centralised iso cache, if not already.\n\n## Requirements\n\nThe following is what you'll need on a fairly recent debian / ubuntu system.\n\n# Ubuntu\n- aptitude install unzip qemu libxtst6 libxcursor1 libxinerama1 libxi6 wget ruby -y\n- wget -O packer.zip https://dl.bintray.com/mitchellh/packer/packer_0.7.5_linux_amd64.zip && unzip packer.zip && rm packer.zip && cp packer* /usr/local/bin\n- wget -O vmware.bundle https://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-11.0.0-2305329.x86_64.bundle && bash vmware.bundle --required --eulas-agreed --console\n\n# Mac os X\n- Use brew to install the dependencies above i.e. ruby etc. \n- Brew's version of packer isn't updated enough and doesn't understand the hardware version for the vmware-iso \n- wget -O packer.zip https://dl.bintray.com/mitchellh/packer/packer_0.7.5_darwin_amd64.zip && unzip packer.zip && rm packer.zip && sudo cp packer* /usr/local/bin\n- Download VMWARE Fusion for MAC\n\nYou'll also need ovftool if it isn't insalled with vmware-workstation / vmware fusion (MAC).  Currently, this is only available on the vmware website after you signup.\novftool can be downloaded from: [VMWare](https://my.vmware.com/web/vmware/details?downloadGroup=OVFTOOL400&productId=353)\n\n_You'll need to do some work if you want to run this on another type of host._\n\n## Would be nice\n- If this feature request ever happens, we'll update the Vagrantfile so this all works within vbox.\n- [https://www.virtualbox.org/ticket/4032]\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-form-wizard","private":false,"url":"https://github.com/UKHomeOffice/passports-form-wizard","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-form-wizard\n\nCreates routing and request handling for a multi-step form process.\n\nGiven a set of form steps and field definitions, the wizard function will create an express router with routing bound to each step of the form and input validation applied as configured.\n\nAdditional checks are also applied to ensure a user completes the form in the correct order.\n\n## Usage\n\nDefine a set of steps:\n\n```javascript\n// steps.js\nmodule.exports = {\n  '/step1': {\n    next: 'step2'\n  },\n  '/step2': {\n    fields: ['name'],\n    next: 'step3'\n  },\n  '/step3': {\n    fields: ['age'],\n    next: [\n      { field: 'age', op: '<', value: 18, next: 'not-old-enough' },\n      next: 'step4'\n    ]\n  },\n  '/step4': {},\n  '/not-old-enough': {}\n}\n```\n\nDefine field rules:\n\n```javascript\n// fields.js\nmodule.exports = {\n  'name': {\n    validate: 'required'\n  },\n  'age': {\n    validate: 'required'\n  }\n}\n```\n\nCreate a wizard and bind it as middleware to an app:\n\n```javascript\nconst wizard = require('hmpo-form-wizard');\nconst steps = require('./steps');\nconst fields = require('./fields');\n\napp.use(wizard(steps, fields, { name: 'my-wizard' }));\n```\n\n## Sessions\n\nThe wizard expects some kind of session to have been created in previous middleware layers.\n\nFor production use a database backed session store is recommended - such as [connect-redis](https://github.com/tj/connect-redis).\n\nThe wizard stores values and state in a model synchronised to the session. This is made available as `req.sessionModel`. This provides `get()`, `set()`, `unset()`, `toJSON()`, and `reset()` methods.\n\nThe wizard shares journey step history with other wizards through a journey model on the session. The is exposed as `req.journeyModel`. The history is available as `req.journeyModel.get('history')`.\n\n## Error handling\n\nThe app should provide error middleware that redirects to the location specified by the `redirect` property of the error. This is to allow any error to be intercepted before redirection occurs.\n\n\n## Additional step options\n\nThe minimum amount of configuration for a wizard step is the `next` property to determine where the user should be taken after completing a step. A number of additional properties can be defined.\n\nAny of these options can also be provided as a third argument to the wizard to customise aspects of the behaviour for all steps.\n\n* `name` - A namespace identifier for the wizard. This is used to store wizard data on the session. This defaults to a unique value for a wizard.\n* `journeyName` - A namespace identifier for the entire journey. This is used to store journey-wide data such as step history on the session. Defaults to `default`.\n* `entryPoint` - Allows a user to navigate to this step with no journey step history. Defaults to `false`.\n* `checkSession` - Check if the session has expired. Defaults to `true`.\n* `checkJourney` - Check this step is allowed based on the journey step history. If this step is not allowed the user is redirected to the last allowed step, or an error is returned if no step is allowed. Defaults to `true`.\n* `reset` - Reset the wizard `sessionModel` when this step is accessed. Defaults to `false`.\n* `resetJourney` - Reset the journey `journeyModel` when this step is accessed.\n* `skip` - A template is not rendered on a GET request. The `post()` lifecycle is called instead. Defaults to `false`.\n* `noPost` - Don't allow posting to this step. The post method is set to null and the step is completed if there is a next step\n* `editable` - This step is editable. This allows accessing this step with the `editSuffix` and sets the back link and next step to the `editBackStep`. Defaults to `false`.\n* `editSuffix` - Suffix to use for editing steps. Defaults to `/edit`.\n* `editBackStep` - Location to return to after editing a step. Defaults to `confirm`\n* `fields` - specifies which of the fields from the field definition list are applied to this step. Form inputs which are not named on this list will not be processed. Default: `[]`\n* `template` - Specifies the template to render for GET requests to this step. Defaults to the route (without trailing slash)\n*  `templatePath` - provides the location within `app.get('views')` that templates are stored.\n* `backLink` - Specifies the location of the step previous to this one.\n* `backLinks` - Specifies valid referrers that can be used as a back link. If this or `backLink` are not specified then an algorithm is applied which checks the previously visited steps which have the current step set as `next`.\n* `controller` - The constructor for the controller to be used for this step's request handling. The default is an extension of the [hmpo-form-controller](https://www.npmjs.com/package/hmpo-form-controller), which is exported as a `Controller` property of this module. If custom behaviour is required for a particular form step then custom extensions can be defined - see [Custom Controllers](#custom-controllers)\n* `invalidates` - an array of field names that will be 'invalidated' when this field value is set or changed. Any fields specified in the `invalidates` array will be removed from the `sessionModel`. Future steps that have used this value to make a branching decision will also be invalidated, making the user go through those steps and decisions again.\n* `translate` - provide a function for translating validation error codes into usable messages. Previous implementations have used [i18next](https://www.npmjs.com/package/i18next) to do translations.\n* `params` - Define express parameters for the route for supporting additional URL parameters.\n\nRemaining field options documentation can be found in the hmpo-template-mixins [README](https://github.com/UKHomeOffice/passports-template-mixins#options-1).\n\n## Central journey storage\nTo facilitate sharing form values between wizards in the same journey a field can be specified to save into the `journeyModel` instead of the `sessionModel` using the `journeyKey` property:\n\n```javascript\n// fields.js\nmodule.exports = {\n  'localFieldName': {\n    journeyKey: 'centralfieldName',\n  }\n}\n```\n\n## Default field values\nA default value for a field can be specified with the `default` property. This is used if the value loaded from the session is missing or undefined.\n\n```javascript\n// fields.js\nmodule.exports = {\n  'localFieldName': {\n    default: 'defaultValue'\n  }\n}\n```\n\n\n## Next steps\n\nThe next step for each step can be a relative path, an external URL, or an array of conditional next steps. Each condition next step can contain a next location, a field name, operator and value, or a custom condition function:\n\n```javascript\n'/step1': {\n  // next can be a relative string path\n  next: 'step2'\n},\n'/step2': {\n  // next can be an array of conditions\n  next: [\n    // field, op and value. op defaults to '==='\n    { field: 'field1', op: '===', 'foobar', next: 'conditional-next' },\n\n    // an operator can be a function\n    { field: 'field1', op: (fieldValue, req, res, con) => fieldValue === con.value, value: true, next: 'next-step' },\n\n    // next can be an array of conditions\n    { field: 'field1', value: 'boobaz', next: [\n        { field: 'field2', op: '=', 'foobar', next: 'sub-condition-next' },\n        'sub-condition-default-next'\n    ] },\n\n    // a condition can be a function specified by fn\n    { fn: (req, res, con) => true, next: 'functional-condition' },\n\n    // a condition can be a controller method\n    { fn: Controller.prototype.conditionMethod, next: 'functional-condition' },\n\n    // a condition can be a controller method specified by name\n    { fn: 'conditionMethod', next: 'functional-condition' },\n\n    // the next option can be a function to return a dynamic next step\n    { field: 'field1', value: true, next: (req, res, con) => 'functional-next' },\n\n    // use a string as a default next step\n    'default-next'\n  ]\n}\n```\n\n\n## Custom Controllers\n\nCreating a custom controller:\n\n```javascript\n// controller.js\nconst Controller = require('hmpo-form-wizard').Controller;\n\nclass CustomController extends Controller) {\n  /* Custom middleware */\n  middlewareSetup() {\n    super.middlewareSetup();\n    this.use((req, res, next) => {\n      console.log(req.method, req.url);\n      next();\n    });\n  }\n\n  /* Overridden locals lifecycle */\n  locals(req, res) {\n    let locals = super.locals(req, res);\n    locals.newLocal = 'value';\n    return locals;\n  }\n}\n\nmodule.exports = CustomController\n```\n\nExamples of custom controllers can be found in the [example app](./example/controllers)\n\n## Controller lifecycle\nThese controllers can be overridden in a custom controller to provide additional behaviour to a standard controller\n\n### GET lifecycle\n> #### - `configure(req, res, next)`\n> Allows changing of the `req.form.options` controller options for this request.\n> #### - `get(req, res, next)`\n>> #### - `errors = getErrors(req, res)`\n>> Returns an `Object` of `Controller.Error` validation errors indexed by the field name.\n>> #### - `getValues(req, res, callback(err, values))`\n>> Calls `callback` with an error and `Object` of field names and values.\n>> #### - `locals = locals(req, res)`\n>> Returns an `Object` of locals to be used in the rendered template.\n>> #### - `render(req, res, next)`\n>> Renders the template to the user.\n\n### POST lifecycle\n> #### - `configure(req, res, next)`\n> Allows changing of the `req.form.options` controller options for this request.\n> #### - `post(req, res, next)`\n>> #### - `process(req, res, next)`\n>> Allows for processing the `req.form.values` before validation.\n>> #### - `validate(req, res, next)`\n>> Allows for additional validation of the `req.form.values` after the built-in field validation.\n>> #### - `saveValues(req, res, next)`\n>> Saves the values to the session model.\n>> #### - `successHandler(req, res, next)`\n>> Redirects to the next step\n\n### Error handling\n> #### - `errorHandler(err, req, res, next)`\n> Additional error handling can be performed by overriding the `errorHandler`.\n\n## Example app\n\nAn example application can be found in [the ./example directory](./example). To run this, follow the instructions in the [README](./example/README.md).\n\n## Migrating to wizard v6\n\n* The code has been updated to es6 and requires a minimum of Node v4\n* If additional middleware has been added by overriding the `constructor` or `requestHandler` method, this will need to be moved to one of the middleware setup methods (`middlewareSetup`, `middlewareChecks`, `middlewareActions`, or `middlewareLocals`) (see the Custom Controller example above)\n* Custom controllers must be specified using an es6 `class` statement, and not a function.\n* When testing custom controllers the mimimum options that need to be supplied is `route`.\n* `backLink` and `backLinks` must now be paths relative to the wizard base URL, or full HTTP URLs.\n* forks are now unsupported.\n\n\n## Migrating to wizard v7\n\n* Step history has been moved from a `step` array in the `sessionModel` to a structured `history` array in the `journeyModel`.\n* Journey history checking has become stricter. A step will only be allowed if it is an `entryPoint`, it is `next` from an existing step, or a `prereq` is in history. History checking can be disabled with the `checkJourney` option set to false.\n* Steps are completed when they are successfully posted to. If your step only has links, set the `noPost` option for it to be set as completed when rendered.\n* A `skip` option has been added that will run the `post()` lifecycle methods instead of rendering a template.\n* A `reset` option has been added that will reset the wizard `sessionModel`.\n* A `resetJourney` option has been added that will reset the `journeyModel` step history.\n* If a step isn't allowed and the step history is empty, a `MISSING_PREREQ` error will be thrown that must be dealt with. Previously the user was sent back to a 'first' step of the current wizard.\n* Backlinks will automatically populate between wizards on the same journey.\n* `next` links and error redirects are  now relative to the `baseUrl`.\n* Branching is now supported by `next`. See the Example app for details.\n* The app should provide error middleware that redirects to the location specified by the `redirect` property of the error. This is to allow any error to be intercepted before redirection occurs.\n\n## Migrating to wizard v8\n* Options are deep cloned to `req.form.options` on every request. These can be mutated by overriding the `configure(req, res, next)` method. Tests may need to be updated to make sure `req.form.options` is set to the same object as the controller options when not running the whole request lifecycle.\n* The `noPost` option will now set the step as complete if the `render` method is overridden. Previously this was done by `render`.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/i18n-lookup","private":false,"url":"https://github.com/UKHomeOffice/i18n-lookup","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# i18n-lookup\nUtility node module for doing lookups from translation documents\n\n## Install\n\n```\nnpm install [--save] i18n-lookup\n```\n\n## Usage\n\nA lookup function is returned by passing in the translation method as an argument. We normally use [i18next](https://www.npmjs.com/package/i18next).\n\n```javascript\n/**\nLocale: {\n    another: {\n        translation: {\n            key: 'Text'\n        }\n    }\n}\n**/\nvar t = require('i18next').t;\n\nvar lookup = require('i18n-lookup')(t);\n\nvar translated = lookup([\n    'a.translation.key',\n    'another.translation.key'\n]);\n\nconsole.log(translated);\n// This will output the first key which has a corresponding translation defined.\n// => \"Text\"\n```\n\nAdditionally, a template compilation method can be provided for cases where the translated key also includes template syntax.\n\n```javascript\n/**\nLocale: {\n    greeting: 'Hello {{name}}'\n}\n**/\nvar t = require('i18next').t,\n    Mustache = require('mustache');\n\nvar lookup = require('i18n-lookup')(t, Mustache.render);\n\nvar translated = lookup([\n    'greeting'\n], {\n    name: 'John'\n});\n\nconsole.log(translated);\n// This will output the returned lookup compiled with the provided context\n// \"Hello John\"\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/cloud-costs","private":false,"url":"https://github.com/UKHomeOffice/cloud-costs","license":null,"readme":"You will need to log into vcloud before you can use this script. It appears that, as long as you run this frequently, there is no need to keep logging in.\n\nFor this script to work, you will also need to install the vcloud-walk gem. I used rbenv for this, but you could also install it system-wide\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/heiraupdater","private":false,"url":"https://github.com/UKHomeOffice/heiraupdater","license":null,"readme":"# Heiraupdater\n\nTODO: Write a gem description\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n```ruby\ngem 'heiraupdater'\n```\n\nAnd then execute:\n\n    $ bundle\n\nOr install it yourself as:\n\n    $ gem install heiraupdater\n\n## Usage\n\nTODO: Write usage instructions here\n\n## Contributing\n\n1. Fork it ( https://github.com/[my-github-username]/heiraupdater/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/HODHackMicroServices","private":false,"url":"https://github.com/UKHomeOffice/HODHackMicroServices","license":null,"readme":"# HODHackMicroServices\nProduce a micro service proof of concept\n\nhod.hacker@gmail.com    hodhacker1\n\nhttps://twitter.com/HodHacker hodhacker1\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/openid","private":false,"url":"https://github.com/UKHomeOffice/openid","license":null,"readme":"# openid\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/mrz","private":false,"url":"https://github.com/UKHomeOffice/mrz","license":null,"readme":"You will need to create the following folder where you will put your passport image files\n\nsrc/test/resources/passport-images","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/immigration-status-check","private":false,"url":"https://github.com/UKHomeOffice/immigration-status-check","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"This is your new Play application\n=================================\n\nThis file will be packaged with your application, when using `activator dist`.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-io-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-io-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Scala library for IO functionality\n==================================\nGeneral Scala IO functionality such as JSON schema validation\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Json4s\n\nIntroduction\n------------\nTODO\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nTo run integration specs:\n> sbt it:test\n\nPublishing\n----------\nTo publish the jar to artifactory you will need to \n\n1. Copy the .credentials file into your <home directory>/.ivy2/\n2. Edit this .credentials file to fill in the artifactory security credentials (amend the realm name and host where necessary)\n\n> sbt publish\n\nNote that initially this project refers to some libraries held within a private Artifactory. However, those libraries have been open sourced under https://github.com/UKHomeOffice.\n\nExample Usage\n-------------\n- Validate JSON against a JSON schema:\n```scala\n  val json: JValue = getYourJson()\n  val schema: JValue = getYourSchema()\n  \n  val Good(result) = JsonSchema(schema).validate(json) // Assuming successful validation\n```\n\n- Transform JSON from one structure to another:\n```scala\n  val yourJsonTransformer = new JsonTransformer {\n    def transform(json: JValue): JValue Or JsonError = {\n      val JsonTransformation(oldJson, newJson) = (\n        map(\"name\" -> \"superName\") ~\n        mapArray(\"fee\" -> \"payment.feeInPence\", field => JInt(BigInt(field.extract[String])))\n      )(json)\n      \n      Good(newJson)\n    }\n  }\n  \n  val flatJson = parse(\"\"\"\n  {\n    \"name\": \"Batman\",\n    \"fee_1\": \"12\",\n    \"fee_2\": \"15\",\n    \"fee_3\": 18\n  }\"\"\")\n\n  val json = parse(\"\"\"\n  {\n    \"superName\": \"Batman\",\n    \"payment\": [\n      { \"feeInPence\": 12 },\n      { \"feeInPence\": 15 },\n      { \"feeInPence\": 18 }\n    ]\n  }\"\"\")\n\n  // Assuming successful transformation\n  transform(flatJson) mustEqual Good(json) \n```\n\nNote - if required (though not advised) the EmptyJsonSchema can be used to all JSON to be validated successfully.\n\nJSON Schema Validation\n----------------------\nThere are several online JSON schema validation tools such as [JSON Schema Validator](http://www.jsonschemavalidator.net/)\n\nAlternatively, a JSON schema can be validated from the Scala REPL by doing the following:\n\n> sbt\n\n> console\n\n> import uk.gov.homeoffice.json._\n\n> import uk.gov.homeoffice.json.Json._\n\n> jsonFromFilepath(\"src/test/resources/schema-test.json\") map { JsonSchema(_) }\n\nIf you've given a valid file path and the schema is valid, the result will be something like:\n\nres3: scala.util.Try[uk.gov.homeoffice.json.JsonSchema] = Success(uk.gov.homeoffice.json.JsonSchema@7568db95)","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-rabbit-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-rabbit-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Scala publish/subscribe JSON API for RabbitMQ\n=============================================\nScala general functionality to interface with RabbitMQ via JSON protocol.\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- RabbitMQ\n\n- Specs2\n\nIntroduction\n------------\nTODO\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nTo run integration specs:\n> sbt it:test\n\nPublishing\n----------\nTo publish the jar to artifactory you will need to \n\n1. Copy the .credentials file into your <home directory>/.ivy2/\n2. Edit this .credentials file to fill in the artifactory user and password\n\n> sbt publish\n\nNote that initially this project refers to some libraries held within a private Artifactory. However, those libraries have been open sourced under https://github.com/UKHomeOffice.\n\nExample Usage\n-------------\n```scala\n  object ExampleBoot extends App with HasConfig {\n    implicit val json4sFormats = DefaultFormats\n  \n    val system = ActorSystem(\"example-actor-system\", config)\n  \n    // Consume\n    system.actorOf {\n      Props {\n        new ConsumerActor with Consumer[String] with DefaultErrorPolicy with NoJsonValidator with ExampleQueue with Rabbit {\n          def consume(json: JValue) = Future {\n            val message = (json \\ \"message\").extract[String]\n            debug(s\"Congratulations, consumed message '$message'\")\n            message\n          }\n        }\n      }\n    }\n  \n    // Publish\n    val publisher = new Publisher with ExampleQueue with Rabbit\n    publisher.publish(\"message\" -> \"hello world!\")\n  }\n  \n  trait ExampleQueue extends Queue {\n    def queueName = \"rabbit-example\"\n  }\n```\n\nNoting that a \"configuration\" such as application.conf must be provided e.g.\n```scala\n  amqp {\n    addresses = [{\n      host = \"127.0.0.1\"\n      port = 5672\n    }]\n  \n    automatic-recovery = on\n  }\n```\n\nWriting specs (tests) against Rabbit is very easy (integration tests are so easy, they can be regarded as unit tests). Upon running the specs, the SBT build will attempt to start Rabbit (but it is easier to start Rabbit yourself and keep it running, as all specs will create unique, temporary queues, which are removed when examples have finished, and all connections are automatically closed, closing all Rabbit channels).\n\nA spec that consumes valid and error messages, upon publication of said messages. All the plumbing is handled automatically, allowing you to concentrate on writing specs to build your API and subsequently your code.\n\n```scala\nclass WithConsumerSpec(implicit ev: ExecutionEnv) extends Specification with RabbitSpec {\n  \"Consumer\" should {\n    \"consume valid message\" in {\n      val validMessageConsumed = Promise[Boolean]()\n\n      val publisher = new Publisher with WithQueue.Consumer with WithRabbit {\n        def json(json: JValue) = validMessageConsumed success true\n      }\n\n      publisher.publish(JObject())\n\n      validMessageConsumed.future must beTrue.await\n    }\n\n    \"consume error message\" in {\n      val errorMessageConsumed = Promise[Boolean]()\n\n      val publisher = new Publisher with WithQueue.ErrorConsumer with WithRabbit {\n        def jsonError(jsonError: JsonError) = errorMessageConsumed success true\n      }\n\n      publisher.publish(JsonError())\n\n      errorMessageConsumed.future must beTrue.await\n    }\n  }\n}\n```\n\nRabbit MQ\n---------\nWorking on a Mac:\n> brew install rabbitmq\n\nTo enable the Management UI:\n> rabbitmq-plugins enable rabbitmq_management\n\nTo run Rabbit (server)\n> rabbitmq-server\n\nView Management UI in browser at http://localhost:15672\nand login as guest/guest\n\nEven though this is a Scala library to easy test against and use RabbitMQ, underneath it uses the Java RabbitMQ driver.\nTo use Rabbit with other drivers, there is plenty of good documentation at https://www.rabbitmq.com, where the following are a couple of extracts.\n\nExample of connecting to Rabbit to publish to a queue using a Java driver:\n\nhttps://www.rabbitmq.com/api-guide.html\n```java\nConnectionFactory factory = new ConnectionFactory();\nfactory.setUri(\"amqp://userName:password@hostName:portNumber/virtualHost\");\nConnection conn = factory.newConnection();\n\nChannel channel = conn.createChannel();\n\nbyte[] messageBodyBytes = \"Hello, world!\".getBytes();\nchannel.basicPublish(exchangeName, routingKey, null, messageBodyBytes);\n```\n\nExample of using Ruby (maybe for Cucumber testing):\n\nhttps://www.rabbitmq.com/tutorials/tutorial-one-ruby.html\n> gem install bunny --version \">= 1.6.0\"\n\n```ruby\nrequire \"bunny\"\n\nconn = Bunny.new\nconn.start\n\nch = conn.create_channel\n\nq = ch.queue(\"hello\")\nch.default_exchange.publish(\"Hello World!\", :routing_key => q.name)\nputs \" [x] Sent 'Hello World!'\"\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-akka-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-akka-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Akka - Reusable functionality\n=============================\nAkka reusable functionality and Scala Spray functionality/template for general use.\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- Spray\n\n- Specs2\n\nIntroduction\n------------\nBoot a microservice utilising functionality built on top of Spray.\n\nCreate an application and include \"routes\" to expose an API to access via HTTP.\nBuild up your own routes, noting that \"service-statistics\" route is automatically exposed for you and can be accessed as (for example):\n```bash\nhttp://localhost:9100/service-statistics\n```\nwhich would give you something like:\n```javascript\n{\n  statistics: {\n    uptime: \"36663930295 nanoseconds\"\n    total-requests: \"2\"\n    open-requests: \"1\"\n    maximum-open-requests: \"1\"\n    total-connections: \"1\"\n    open-connections: \"1\"\n    max-open-connections: \"1\"\n    request-timeouts: \"0\"\n  }\n}\n```\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nTo run integration specs:\n> sbt it:test\n\nTo run integration specs:\n> sbt it:test \n\nConfiguration\n-------------\nTODO\n\nThe project utilises Artifactory to resolve in-house modules. Do the following:\n1. Copy the .credentials file into your <home directory>/.ivy2/\n2. Edit this .credentials file to fill in the artifactory security credentials (amend the realm name and host where necessary)\n\n> sbt publish\n\nNote that initially this project refers to some libraries held within a private Artifactory. However, those libraries have been open sourced under https://github.com/UKHomeOffice.\n\nTesting\n-------\nNote regarding testing of application that utilises Spray.\nAt the time of writing this, Spray was in maintenance mode because of its migration to Akka HTTP.\nUnfortunately, Spray uses a now out of date Specs2 library. This can be resolved by adding the following class into the package \"spray.testkit\" within the \"test\" directory of your application:\n```scala\npackage spray.testkit\n\nimport org.specs2.execute.{ Failure, FailureException }\nimport org.specs2.specification.core.{ Fragments, SpecificationStructure }\nimport org.specs2.specification.create.DefaultFragmentFactory\n\n/**\n * Spray's built-in support for specs2 is built against specs2 2.x, not 3.x.\n * So you cannot use the Specs2Interface from spray but need to compile one yourself (against specs2 3.x).\n * That is what this code does, taken from https://gist.github.com/gmalouf/51a8722b50f6a9d30404\n * Note that the build has to exclude Specs2 as a transitive dependency from the Spray testkit.\n */\ntrait Specs2Interface extends TestFrameworkInterface with SpecificationStructure {\n  def failTest(msg: String) = {\n    val trace = new Exception().getStackTrace.toList\n    val fixedTrace = trace.drop(trace.indexWhere(_.getClassName.startsWith(\"org.specs2\")) - 1)\n    throw new FailureException(Failure(msg, stackTrace = fixedTrace))\n  }\n\n  override def map(fs: ⇒ Fragments) = super.map(fs).append(DefaultFragmentFactory.step(cleanUp()))\n}\n\ntrait NoAutoHtmlLinkFragments extends org.specs2.specification.dsl.ReferenceDsl {\n  override def linkFragment(alias: String) = super.linkFragment(alias)\n\n  override def seeFragment(alias: String) = super.seeFragment(alias)\n}\n```\n\nSBT - Revolver\n--------------\nsbt-revolver is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nSee https://github.com/spray/sbt-revolver\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nExample Usage\n-------------\n- Actor scheduling:\n```scala\n  class SchedulerSpec extends Specification {\n    \"Actor\" should {\n      \"be scheduled to act as a poller\" in new ActorSystemContext {\n        val exampleSchedulerActor = system.actorOf(Props(new ExampleSchedulerActor), \"exampleSchedulerActor\")\n        exampleSchedulerActor ! Scheduled\n        expectMsg(Scheduled)\n      }\n  \n      \"not be scheduled to act as a poller\" in new ActorSystemContext {\n        val exampleSchedulerActor = system.actorOf(Props(new ExampleSchedulerActor with NoSchedule), \"exampleNoSchedulerActor\")\n        exampleSchedulerActor ! Scheduled\n        expectMsg(NotScheduled)\n      }\n    }\n  }\n  \n  class ExampleSchedulerActor extends Actor with Scheduler {\n    val schedule: Cancellable = schedule(initialDelay = 1 second, interval = 5 seconds, receiver = self, message = Wakeup)\n  \n    def receive = LoggingReceive {\n      case Wakeup => println(\"Hello World!\")\n    }\n  }\n```\n\n- Create some Spray routings - HTTP contract/gateway to your microservice:\n```scala\n  object ExampleRouting1 extends ExampleRouting1\n  \n  trait ExampleRouting1 extends Routing {\n   val route =\n     pathPrefix(\"example1\") {\n       pathEndOrSingleSlash {\n         get {\n           complete { JObject(\"status\" -> JString(\"Congratulations 1\")) }\n         }\n       }\n     }\n  }\n  \n  object ExampleRouting2 extends ExampleRouting2\n    \n  trait ExampleRouting2 extends Routing {\n   val route =\n     pathPrefix(\"example2\") {\n       pathEndOrSingleSlash {\n         get {\n           complete { JObject(\"status\" -> JString(\"Congratulations 2\")) }\n         }\n       }\n     }\n  }\n```\n\n- Create your application (App) utilitising your routings (as well as anything else e.g. booting/wiring Akka actors):\n```scala\n  object ExampleBoot extends App with SprayBoot with ExampleConfig {\n    // You must provide an ActorSystem for Spray.\n    implicit lazy val sprayActorSystem = ActorSystem(\"example-boot-actor-system\")\n  \n    bootRoutings(ExampleRouting1 ~ ExampleRouting2 ~ ExampleRoutingError)(FailureHandling.exceptionHandler)\n  }\n```\n\nNoting that a \"configuration\" such as application.conf must be provided e.g.\n```scala\n  spray.can.server {\n    name = \"example-spray-can\"\n    host = \"0.0.0.0\"\n    port = 9100\n    request-timeout = 1s\n    service = \"example-http-routing-service\"\n    remote-address-header = on\n  }\n```\n\nTo run ExampleBoot:\n```bash\nsbt test:run\n```\n\nAkka Clustering\n---------------\nCluster Singleton:\n\nActors can be managed in a cluster to run as a singleton - an actor will be distributed on multiple nodes, but only one will be running.\n\nYour application.conf for a Cluster Singleton, can use the following template:\n```javascript\nakka {\n  actor {\n    provider = \"akka.cluster.ClusterActorRefProvider\"\n  }\n\n  remote {\n    enabled-transports = [\"akka.remote.netty.tcp\"]\n\n    netty.tcp {\n      hostname = \"127.0.0.1\"\n      port = 0 # To be overridden in code for each running node in a cluster\n    }\n  }\n\n  cluster {\n    seed-nodes = [\n      \"akka.tcp://your-actor-system@127.0.0.1:2551\",\n      \"akka.tcp://your-actor-system@127.0.0.1:2552\",\n      \"akka.tcp://your-actor-system@127.0.0.1:2553\"\n    ]\n\n    roles = [\"your-service\"]\n    min-nr-of-members = 2\n    auto-down-unreachable-after = 30 seconds\n  }\n}\n```\n\nEach node that starts up on the same box would need a different port e.g. 2551, 2552 etc.\nIn production, the nodes would be on different boxes and so can all have the same ports and said port could then also be declared for akka.actor.remote.netty.tcp.port.\n\nThere is an example app showing a makeshift cluster of 3 nodes:\n```scala\nobject ClusterActorSystemExampleApp extends App with Network {\n  withConfig {\n    // Imagine we are starting up 3 nodes on 3 separate boxes (here we will have simply utilise 3 separately configured ports).\n    val actorSystem1 = ClusterActorSystem(1)\n    val actorSystem2 = ClusterActorSystem(2)\n    val actorSystem3 = ClusterActorSystem(3)\n    ...\n  }\n}    \n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-test-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-test-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Test - Scala testing functionality\n==================================\nScala testing functionality for general use (originally written for Registered Traveller UK).\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Specs2\n\nIntroduction\n------------\nTODO\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nTo run integration specs:\n> sbt it:test\n\nPublishing\n----------\nTo publish the jar to artifactory you will need to \n\n1. Copy the .credentials file into your <home directory>/.ivy2/\n2. Edit this .credentials file to fill in the artifactory security credentials (amend the realm name and host where necessary)\n\nSBT - Revolver\n--------------\nsbt-revolver is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nSee https://github.com/spray/sbt-revolver\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nExample Usage\n-------------\nTODO","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/brp_enquiry_forms","private":false,"url":"https://github.com/UKHomeOffice/brp_enquiry_forms","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# BRP Application project for nodejs\n\n[![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/brpapp/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/brpapp) [![Build Status](https://travis-ci.org/UKHomeOffice/brp_app.svg)](https://travis-ci.org/UKHomeOffice/brp_app)\n\n## Quick start\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\nInstall `Redis` and make sure you have a running redis instance in the background.\n\nInitiate the server in development mode (Express is used to serve the static resources in development).\n```bash\n$ npm run dev\n```\n\nThen select one of the following journeys to see the applcation in action\n\n- [Collection](http://localhost:8080/collection)\n- [Someone else](http://localhost:8080/someone-else)\n- [Not arrived](http://localhost:8080/not-arrived)\n- [Correct mistakes](http://localhost:8080/correct-mistakes)\n- [Lost or stolen](http://localhost:8080/lost-stolen)\n\nSee the [development documentation](./documentation/DEVELOPMENT.MD) for a complete description of the application and how to maintain and support BRP.\n\n\n## NPM scripts\n\nStart the application in default mode (production).\nWe use Nginx to serve our static resources in production and ci.\n```bash\n$ npm start\n```\n\nStart the application with [Nodemon](https://www.npmjs.com/package/nodemon) in development mode.\nDebug is switched on and the server restarts when the JS or Sass are recompiled.\n```bash\n$ npm run dev\n```\n\nRun the unit tests\n```bash\n$ npm run test\n```\n\nRun the EcmaScript (ES) linter.  Rules are defined in [.eslintrc](./.eslintrc)\n```bash\n$ npm run lint\n```\n\nRun the jscs style checker. Rules are defined in [.jscsrc.json](./.jscsrc.json)\n```bash\n$ npm run style\n```\n\nAnalyse the quality of the codebase (for results - open [./reports/plato/index.html](./reports/plato/index.html))\n```bash\n$ npm run quality\n```\n\nCompile the Sass to CSS\n```bash\n$ npm run sass\n```\n\n_____________________________________________________________\n\n- For details on [Acceptance tests](https://github.com/UKHomeOffice/brp_app/tree/master/acceptance_tests)\n\n- See the [package.json](./package.json) for a full list of scripts.\n\n- Full list of [environment variables](./documentation/ENVIRONMENT_VARIABLES.md)\n\n","travis":true,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/platform_email_service","private":false,"url":"https://github.com/UKHomeOffice/platform_email_service","license":null,"readme":"# platform_email_service\nEmail Microservice in NodeJS\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/platform_email_service.svg)](https://travis-ci.org/UKHomeOffice/platform_email_service)\n\nGetting started\n\nIf you need a development mail server I suggest [Fake SMTP](https://nilhcem.github.io/FakeSMTP/) no setup, just follow the instructions.\n\nEdit `config/smtp.json` to point to your smtp server (if using FakeSMTP bind this to port 8082 and set that as your port in this file)\nEdit `config/template.json` to point to your template path\n\n`$ npm install`\n\n`$ node app.js`\n\n\n\n## Template API End points\nThese will be deprecated in the future\n\nBoth of the GET methods can take an optional header paramter of templatepath to specify an non standard path\n\nGET template/list to retrieve a list of templates returns 200 or 404\n \nGET template/get/<templateName> to retrieve a specific template returns 200 or 404\n\nPOST template/add with the following body parameters creates a new template returns 201 or 400\n\n```\n  templatePath: <optional>\n  body: <raw html of the template>\n  name: <the templates name for on the filesystem>\n```\n\nPUT template/update/<templatename> with the following body parameters creates a new template returns 200 or 400\n\n```\n  templatePath: <optional>\n  body: <raw html of the template>\n  name: <the templates name for on the filesystem>\n```\n\nDELETE template/delete/<templatename> removes a template from the filesystem returns 204 or 400 with an empty body\n\n## Email API End points\n\nThese will be deprecated in the future\n\nPOST email/send with the following payload as a JSON string to send an email will return a 201 or 400 \n\n```\n  dataModel = {\n    \"sender\": \"test@localhost\", \n    \"recipient\": \"recipient@localhost\",\n    \"subject\": \"<message subject>\",\n    \"template\": \"<template name>\",\n    \"data\": {\n      //Template data in key value pairs                     \n    }\n```\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/platform_queue_service","private":false,"url":"https://github.com/UKHomeOffice/platform_queue_service","license":null,"readme":"# platform_queue_service\nQueuing Micro Service in Node.js\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/platform_queue_service.svg)](https://travis-ci.org/UKHomeOffice/platform_queue_service)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vcloud_ipsec-vpn","private":false,"url":"https://github.com/UKHomeOffice/vcloud_ipsec-vpn","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Vpnconfig\nA command line tool to allow use of a yaml VPN configuration file to push this config to Skyscape\n\n## Installation\nAdd this line to your application's Gemfile:\n\n```ruby\ngem 'vcloud_ipsec-vpn'\n```\n\nAnd then execute:\n\n    $ bundle install\n\nOr install it yourself as:\n\n    $ gem install vcloud_ipsec-vpn\n    \nRequire it in your ruby code using:\nrequire 'vcloud_ipsec-vpn'\n\n## Usage\nRun with option --help to show command line help.\n\nExample command line with gem installed:\nvcloud_ipsec-vpn -d DataCentre1 -u JohnSmith -w vpn-configuration.yaml\n\nExample command line if you have cloned the repository without installing as a gem:\nbundle exec ./bin/vcloud_ipsec-vpn -d DataCentre1 -u JohnSmith -w vpn-configuration.yaml\n\nExample yaml input is provided in test/vpn-configuration-example.yaml\n\nThe yaml schema is provided in lib/vpn-configuration-schema.yaml\n\n## Development\n\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `bin/console` for an interactive prompt that will allow you to experiment.\n\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the version number in `version.rb`, and then run `bundle exec rake release` to create a git tag for the version, push git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\n\n## Contributing\n\n1. Fork it ( https://github.com/UKHomeOffice/vcloud_ipec-vpn/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vcloudToolsGenerator","private":false,"url":"https://github.com/UKHomeOffice/vcloudToolsGenerator","license":null,"readme":"# vcloudToolsGenerator\nAn attempt at abstracting the vcloud-tools format to quickly generate and launch a cluster.  Has some coreos/kubernetes stuff in here, but you don't need to be using that for this to be useful.\n\nwhat works.\n==\n- vapps\n- networks\n- uploading iso's\n- lanching everything (assuming you don't need nat, firewall or vpn rules first)\n\nwhat doesn't work\n==\n- vpn\n- firewall\n- nat\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-rpm-builder-ords","private":false,"url":"https://github.com/UKHomeOffice/lev-rpm-builder-ords","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Oracle REST Data Services RPM Builder\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/lev-rpm-builder-ords.svg?branch=master)](https://travis-ci.org/UKHomeOffice/lev-rpm-builder-ords)\n\nThis project contains a Dockerfile for a container that will build an Oracle REST Data Service RPM package with SystemV script.\n\n## Getting Started\n\nThese instructions will tell you how to use this container to build an RPM.\n\n### Prerequisities\n\nYou'll need some form of docker that can have a volume mounted where it'll put the RPM. \n\n[Boot2docker](http://boot2docker.io/) works if you want to test it on your local machine. The following commands once you run boot2docker will get it up an running. It mounts the \"/Users\" directory in the VM, we'll use this as the output path for the RPM to get it on our hosts directory.  \n\n```\nboot2docker init \nboot2docker up \neval \"$(boot2docker shellinit)\"\n```\n\nFor licensing reasons we can't distribute the ORDs zip file. [Download it](http://www.oracle.com/technetwork/developer-tools/rest-data-services/ords-30-downloads-2373781.html) and store it somewhere wget-able before we start.\n\n### Running\n\nAssuming you have a docker instance to communicate with\n\n```shell\ndocker build -t rpm-builder-ords . && docker run -e \"ORDS_ZIP=http://example.com/path/to/zip\" -v $(pwd):/rpmbuild rpm-builder-ords \n```\n\nWill cause an RPM to fall out at ```$(pwd)``` named ```ords-3.0.0.121.10.23-1.x86_64.rpm```\n\nYou can customise the RPM output directory in the container by setting the ```$RPM_OUTPUT_DIR``` environment variable.\n\n## RPM Details\n\n* The RPM will install to `/opt/ords.3.0.0/`\n* The RPM comes with a SystemV script\n* The SystemV script will configure ORDs from the `/opt/ords.3.0.0/params/ords_params.properties`. If this file is updated ORDs will be reconfigured when restarted. \n* The config file can have the parameters defined in the [documentation for ORDs](https://docs.oracle.com/cd/E56351_01/doc.30/e56293/config_file.htm#AELIG7204).\n\n## Testing the RPM\n\nThere is bundled a [vagrant](https://www.vagrantup.com/) file that starts a CentOS 6 machine, that can be used for testing the RPM.\n\nIt has a base image for [VirtualBox](https://www.virtualbox.org/).\n\n## Built With\n\n* [ORDs](http://www.oracle.com/technetwork/developer-tools/rest-data-services) - Great for avoiding connecting to Oracle directly.\n* [FPM](https://github.com/jordansissel/fpm) - Makes making RPMs very easy.\n* [Docker](https://www.docker.com) - So we can statically link to RedHat compatible binaries even if we're not running on RedHat.\n\n# Find us\n\n##  Docker repository\n[ukhomeofficedigital/lev-rpm-builder-ords](https://registry.hub.docker.com/u/ukhomeofficedigital/lev-rpm-builder-ords)\n\n## GitHub\n[UKHomeOffice/lev-rpm-builder-ords](https://github.com/UKHomeOffice/lev-rpm-builder-ords)\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](https://github.com/UKHomeOffice/lev-rpm-builder-ords/blob/master/code_of_conduct.md). By participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Authors\n\n* **Billie Thompson** - *Developer* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/lev-rpm-builder-ords/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](https://github.com/UKHomeOffice/lev-rpm-builder-ords/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* jordansissel for writing FPM and saving my santity trying to build RPMs\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-rpm-builder-openresty","private":false,"url":"https://github.com/UKHomeOffice/lev-rpm-builder-openresty","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Centos 6 OpenResty with Naxsi RPM Builder\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/lev-rpm-builder-openresty.svg?branch=master)](https://travis-ci.org/UKHomeOffice/lev-rpm-builder-openresty)\n\nThis project contains a Dockerfile for a container that will build an OpenResty RPM package with Naxsi and Lua included, statically linked to CentOS 6 packages.\n\n## Getting Started\n\nThese instructions will tell you how to use this container to build an RPM.\n\n### Prerequisities\n\nYou'll need some form of docker that can have a volume mounted where it'll put the RPM. \n\n[Boot2docker](http://boot2docker.io/) works if you want to test it on your local machine. The following commands once you run boot2docker will get it up an running. It mounts the \"/Users\" directory in the VM, we'll use this as the output path for the RPM to get it on our hosts directory.  \n\n```\nboot2docker init \nboot2docker up \neval \"$(boot2docker shellinit)\"\n```\n\n### Running\n\nAssuming you have a docker instance to communicate with\n\n```shell\ndocker build -t rpm-builder-waf . && docker run -v $(pwd):/rpmbuild rpm-builder-waf  \n```\n\nWill cause an RPM to fall out at ```$(pwd)``` named ```ngx_openresty-1.7.10.1-1.x86_64.rpm```\n\nYou can customise the RPM output directory in the container by setting the ```$RPM_OUTPUT_DIR``` environment variable.\n\n## RPM Details\n\n* The RPM will install to `/usr/local/openresty/`\n* The RPM comes with a SystemV script\n* The RPM will install example HTTPS certificate at ```/usr/local/openresty/nginx/conf/example.crt``` and ```/usr/local/openresty/nginx/conf/example.key```\n* The nginx configuration file to set which servers it connects to can be found at ```/usr/local/openresty/nginx/conf/nginx.conf```\n\n## Testing the RPM\n\nThere is bundled a [vagrant](https://www.vagrantup.com/) file that starts a CentOS 6 machine, that can be used for testing the RPM.\n\nIt has a base image for [VirtualBox](https://www.virtualbox.org/).\n\n## Built With\n\n* [OpenResty](http://openresty.org/) - It's very suitable for making WAF firewalls.\n* [FPM](https://github.com/jordansissel/fpm) - Makes making RPMs very easy.\n* [Docker](https://www.docker.com) - So we can statically link to RedHat compatible binaries even if we're not running on RedHat.\n* [Naxsi](https://github.com/nbs-system/naxsi) - Framework for writing Web Application Firewalls\n\n# Find us\n\n##  Docker repository\n[ukhomeofficedigital/lev-rpm-builder-openresty](https://registry.hub.docker.com/u/ukhomeofficedigital/lev-rpm-builder-openresty)\n\n## GitHub\n[UKHomeOffice/lev-rpm-builder-openresty](https://github.com/UKHomeOffice/lev-rpm-builder-openresty)\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](https://github.com/UKHomeOffice/lev-rpm-builder-openresty/blob/master/code_of_conduct.md). By participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Authors\n\n* **Billie Thompson** - *Developer* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/lev-rpm-builder-openresty/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](https://github.com/UKHomeOffice/lev-rpm-builder-openresty/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* jordansissel for writing FPM and saving my santity trying to build RPMs\n* The Naxsi team for writing an awesome module\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kb8or","private":false,"url":"https://github.com/UKHomeOffice/kb8or","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# kb8or\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/kb8or.svg?branch=master)](https://travis-ci.org/UKHomeOffice/kb8or)\n\nContinuous Deployment Tool for deploying with [Kubernetes](http://kubernetes.io/).\n\n## Features\n1. Will deploy any Kubernetes YAML files by creating / re-creating or do rolling update as required\n2. Monitors for success (including restarts) of applications (where [kubectl client](http://kubernetes.io/v1.0/docs/getting-started-guides/aws/kubectl.html) doesn't). \n3. Reports on failures and display logs and errors for failing resources\n3. Container images AND resource version management\n4. Application environment specific variables (for deployments to dev, pre-prod, production)\n\n## Pre-requisites\n1. A running Kubernetes cluster\n2. Either  \n   1. [Ruby](https://www.ruby-lang.org/en/documentation/installation/) 2.x, bundler, [kubectl client](http://kubernetes.io/v1.0/docs/getting-started-guides/aws/kubectl.html) client.  \n   2. [Docker](#docker-prerequisites).\n\n## Install (if not using Docker)\n   \n1. Download the [kubectl client](http://kubernetes.io/v1.0/docs/getting-started-guides/aws/kubectl.html).\n2. `bundle install`\n   \n## Usage\n\n### Schema\n\nAll features and configurable options are described in the [Schema Documentation](./docs/schema.md).\n\n### As a container:\n`docker run -it --rm -v ${PWD}:/var/lib/deploy quay.io/ukhomeofficedigital/kb8or --help`\n\n### Locally:\n`./kb8or.rb --help`\n\n### Deploy an 'environment':\n\nDeploy to \"default\" environment (usually vagrant):\n`./kb8or.rb mydeploy.yaml`\n\nDeploy to specific environment:\n`./kb8or.rb mydeploy.yaml --env pre-production`\n\nA deployment will do the following:\n\n1. Any (defaults.yaml) will be loaded (from the same directory as the deployment)\n2. Any environment data will then be parsed (based on EnvFileGlobPath set in config)\n3. Each deploy will be loaded and settings will be updated\n4. kubectl will be used to setup the Kb8or specific context settings (typically set per environment)\n4. Any Kubernetes .yaml files in the path specified will be parsed and deployed / updated as required.\n\n### Examples:\n\n* For a walk through of features see [docs/example/Example.md](docs/example/Example.md).\n* Example of creation of multiple ResourceControllers from a [templated Elasticsearch](docs/example/elasticsearch/Example.md) resource.\n\n## Docker-prerequisites\n\nIn order to run this in a container you'll need docker installed:\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nIt is currently hosted here: https://quay.io/repository/ukhomeofficedigital/kb8or\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](CONTRIBUTING.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\nTo create a new version:\n\n1. update the [version](version) file.\n2. Push a tag of the same version name to build Docker image at https://quay.io/repository/ukhomeofficedigital/kb8or\n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/lewismarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/kb8or/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\n* [Kubernetes](http://kubernetes.io/)\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-oracle-database-express-edition-11g","private":false,"url":"https://github.com/UKHomeOffice/docker-oracle-database-express-edition-11g","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Oracle Database Express Edition 11g Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-oracle-database-express-edition-11g.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-oracle-database-express-edition-11g)\n\nThis provides a docker container for Oracle XE 11g.\n\n## Usage\n\n### Basic Usage\n\nDue to licensing problems we cannot distribute the oracle RPM.\n\nHowever this doesn't mean the setup process has to be horribly complicated. Simply create a new docker file that extends this docker file, place the [zip from oracle with the RPM in](http://www.oracle.com/technetwork/database/database-technologies/express-edition/downloads/index.html) a ```docker_files``` directory, and build it.\n\nYour Dockerfile will be tiny and look like this:\n\n```Dockerfile\nFROM ukhomeofficedigital/oracle-xe-11g:2.0.2\n```\n\nSee [/example](https://github.com/UKHomeOffice/docker-oracle-database-express-edition-11g/tree/master/example) if you're not sure what I mean.\n\n### Volumes\n\nData is stored to the volume ```/u01/app/oracle```\n \n### Customise the database on first run\n\nThe container will try to run ```/init_only.sh``` before running Oracle XE if there aren't any data files. You can use this script to initialise your database, simply add it in the container you have created which extends this one.\n\n## Version Compatibility\n\nThis was built for oracle-xe-11.2.0-1.0, however with minor tweaks it would probably work for other versions.\n\n# Docker tags\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n# Find us\n\n##  Docker repository\n[ukhomeofficedigital/oracle-xe-11g](https://registry.hub.docker.com/u/ukhomeofficedigital/oracle-xe-11g)\n\n## GitHub\n[UKHomeOffice/docker-oracle-database-express-edition-11g](https://github.com/UKHomeOffice/docker-oracle-database-express-edition-11g)\n\n\n# Contributing\n\nFeel free to create pull requests or issues. \n\nPlease note that this project is released with a [Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-oracle-database-express-edition-11g/blob/master/code_of_conduct.md). By participating in this project you agree to abide by its terms.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-aws-drupal","private":false,"url":"https://github.com/UKHomeOffice/docker-aws-drupal","license":null,"readme":"","travis":"","contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/application-container-platform","private":false,"url":"https://github.com/UKHomeOffice/application-container-platform","license":null,"readme":"# Application Container Platform\n\nThis page will give you an overview of HOD DSP, the services it entails and the ways to get access to them. This is a general overview. Developers should check out the [Developer Docs](https://github.com/UKHomeOffice/application-container-platform/tree/master/developer-docs).\n\n## Service Status\n\nFor an overview of the platform services we provide and their current status i.e. Alpha, Beta, Live; please refer to the [platform service status page](docs/platform_service_status.md). This is to give consumers of the platform a single reference point on the services we are providing and where each service is in the lifecycle. For definitions on each phase of the lifecycle and the criteria for production-ready, please refer [here](docs/service_lifecycle.md).\n\n## **Must Read**\nEveryone using our platform **MUST** adhere to [technical service standards](https://github.com/UKHomeOffice/technical-service-requirements/blob/master/docs/ci.md).\nAll Services will be under a review process\n\n## Services\nThese are the core services which we provide across our platform.\n\n* [Hosting](docs/hosting.md)\n* [VPN](docs/authd.md)\n* [Code Management](docs/code.md)\n* [Artifact Storage](docs/artifacts.md)\n* [CI](docs/ci.md)\n* [Application Composition](docs/application.md)\n* [Platform Composition](docs/platformcomp.md)\n* [Logging](docs/logging.md)\n* [Monitoring](docs/metrics.md)\n\n## Accessing the Services\nWhen trying to get onto the platform for the first time you will need to get access to a various things that will allow you to get to other things. The full flow for this can be found [here](docs/newuser.md)\n\n## Support\n[You can find more information about support here](sla.md)\nIf you require support you can talk to us on our Slack Channel or raise an issue on our [bau board](https://github.com/UKHomeOffice/application-container-platform-bau).\n\n## How-to-docs\nWe have a bunch of handy how-to guides located in this repository, find the list of them [here](how-to-docs/README.md)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-gateway","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-gateway","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"\n\n##### **NGINX Gateway**\n\nThe NGINX Gateway (version 1.9.2 with stream module) is a small container service used to provision TCP and HTTP[S] service from kubernetes (tested on version 0.18.2). Essetially we're not running in proper cloud provider but needed a dynamic means of provisioning external load balanced / exposed services. The data, i.e. services and minions is consumed the etcd cluster kubernetes is running via confd (note: confd is purely being used as a trigger to pull down the data and push into json arrays of services: [] and minions: [], the reason being that templating in go is hideous. \n\n    [template]\n    src   = \"nginx.conf.tmpl\"\n    dest  = \"/etc/nginx/config.json\"\n    keys  = [ \n      \"/registry/services/specs/\",\n      \"/registry/minions\",\n    ]\n    owner = \"root\"\n    mode  = \"0444\"\n    \n    reload_cmd = \"/usr/sbin/nginx -s reload\"\n    check_cmd  = \"/bin/nginx_check {{ .src }}\"\n\nOnce the data is in the config file: /bin/nginx_check is used to generate the nginx config, with in ruby erb. At the moment the container is pushed out via fleet and mapped to the docker host network (--net=host) so we don't have to preconfigure ports. \n\n##### **Services**\n\nThe load balancer config is store in the annontation of the service descriptor. Note, due to the fact that kubernetes wont allow complex types in annotation, i.e. will only support simple key values, I encode the content as a yaml string.\n\n    apiVersion: v1beta3\n    kind: Service\n    metadata:\n      labels:\n        name: gitlab-redis\n        role: service\n      name: gitlab-redis\n      annotations:\n        loadbalancer: |\n          6379:\n            # port: PORT  \n            type: tcp  \n    spec:\n      portalIP: 10.101.100.100\n      ports:\n        - port: 6379\n          targetPort: 6379\n      selector:\n        name: gitlab-redis\n\nBy default services use 'port' from the spec as the externally exposed spec, though this can be override using 'port' in the loadbalacer section. For websites\n  \n    apiVersion: v1beta3\n    kind: Service\n    metadata:\n      labels:\n        name: gitlab-web\n      name: gitlab-web\n      annotations:\n        loadbalancer: |\n          80:\n            type: http\n            vhost: gitlab.example.com\n            # paths: [] # optional nginx locations\n          443:\n            type: http\n            vhost: gitlab.example.com\n            ssl:\n              key: <filename>\n              cert: <filename>\n\nNote: at the moment the virtualhost on the same port are not consolidated, i.e say you have site X and you have Y backends which you wish to serve on different locations | url's; so / goes to default, /admin goes to backend 1 etc etc. At the moment, i'm not preprocessing the vhosts to perform this, a hash of vhost:port is maintained to ensure you dont try and add the same vhost on the same port.\n\n##### **Flannel & Service Ports** \n \nBy passing the -e FLANNEL_ENABLED=true flag into the container, the config generated assumed the docker host it's running on is a member or at the very least mapped into the flannel network and will thus use the portalIP / clusterIP to access the services. If the flag is not enabled we assume the service is being exposed via the NodePort or PublicIPs and use the minion ip addresses at the upstream backends in nginx.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-gradle","private":false,"url":"https://github.com/UKHomeOffice/docker-gradle","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Gradle\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-gradle.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-gradle)\n\nGradle in a docker image, the version of the image / tag will match the version of gradle\n\n## Getting Started\n\nThis is to provide the gradle tool as part of a CI pipeline / local delivery development pipeline\nfor a service. It's to make sure that CI can operate in a complete containerised world.\n\nCode is mounted into the container under /code where that becomes the WORKDIR and then gradle is run\nfrom that directory on the code\n\n### Environment Variables\n\n* `GRADLE_VERSION` - the version of gradle to pull down and install into the docker image\n* `GRADLE_ROOT` - the root of gradle\n* `GRADLE_HOME` - the home directory for gradle\n* `GRADLE_BIN`  - the bin directory for gradle\n\n### Volumes\n\n*  `/root/.gradle/caches` - this is where gradle is holding the cached files\n* `/code` - This is where the code is mounted and is also the WORKDIR\n\n### Other\n\n## Contributing\n\nContributions are most certainly welcome. If you want to introduce a breaking\nchange or any other major change, please raise an issue first to discuss.\n\n## License\n\n[MIT](LICENSE)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/s3secrets","private":false,"url":"https://github.com/UKHomeOffice/s3secrets","license":null,"readme":"### **S3SECRETS**\n\nIs a command line utility for retrieving, uploading and view files encryted via the AWS KMS service.\n\n```shell\n[jest@starfury s3secrets]$ bin/s3secrets help\nNAME:\n   s3secrets - is a utility for interacting to s3 and kms encrypted files\n\nUSAGE:\n   s3secrets [global options] command [command options] [arguments...]\n   \nVERSION:\n   v0.0.1\n   \nAUTHOR(S):\n   Rohith <gambol99@gmail.com> \n   \nCOMMANDS:\n    kms\t\tprovide a listing of the kms key presently available to us\n    buckets\tprovides a list of the buckets available to you\n    list\tproviding a file listing of the files currently in there\n    get\t\tretrieve one or more files from the s3 bucket\n    cat\t\tretrieves and displays the contents of one or more files to the stdout\n    put\t\tupload one of more files, encrypt and place into the bucket\n    edit\tperform an inline edit of a file either locally or from s3 bucket\n\nGLOBAL OPTIONS:\n   -p, --profile \t\t\t\t\tthe aws profile to use for static credentials [$AWS_DEFAULT_PROFILE]\n   -c, --credentials \"/home/jest/.aws/credentials\"\tthe path to the credentials file container the aws profiles [$AWS_SHARED_CREDENTIALS_FILE]\n   --access-key \t\t\t\t\tthe aws access key to use to access the resources [$AWS_ACCESS_KEY_ID]\n   --secret-key \t\t\t\t\tthe aws secret key to use when accessing the resources [$AWS_SECRET_ACCESS_KEY]\n   -o, --output-dir \"./secrets\"\t\t\t\tthe path to the directory in which to save the files [$KMSCTL_OUTPUT_DIR]\n   --session-token \t\t\t\t\tthe aws session token to use when accessing the resources [$AWS_SESSION_TOKEN]\n   -r, --region \"eu-west-1\"\t\t\t\tthe aws region where the resources are located [$AWS_DEFAULT_REGION]\n   -f, --format \"text\"\t\t\t\t\tthe format of the output to generate (accepts json, yaml or default text)\n   --help, -h\t\t\t\t\t\tshow help\n   --version, -v\t\t\t\t\tprint the version\n```\n\n- **Viewing the KMS keys**\n\n```shell\n[jest@starfury s3secrets]$ bin/s3secrets -p profile_name kms\n74cc9f02-7795-4fe4-888e-2aae97e3eff5     alias/aws/ebs           \n62c6abc6-d1d7-4203-ac3e-5733580dd4eb     alias/dev-kms-eu-west-1\n75430871-d667-4fa5-bfb1-54c832f1d973     alias/prod-kms-eu-west-1\n```\n\n- **Create a bucket and upload the files**\n\n```shell\n[jest@starfury s3secrets]$ export AWS_DEFAULT_PROFILE=profile_name\n[jest@starfury s3secrets]$ bin/s3secrets buckets create -n this-is-my-test-bucket-11991\nsuccessfully created the bucket: this-is-my-test-bucket-11991\n\n[jest@starfury s3secrets]$ ls\nbin  buckets.go  cmd.go  doc.go  files.go  formater.go  Godeps  keys.go  kmscli.iml  LICENSE  main.go  Makefile  release  utils.go\n\n[jest@starfury s3secrets]$ bin/s3secrets put -k 62c6abc6-d1d7-4203-ac3e-5733580dd4eb -b this-is-my-test-bucket-11991 *.go\nsuccessfully pushed the file: buckets.go to s3://this-is-my-test-bucket-11991/buckets.go\nsuccessfully pushed the file: cmd.go to s3://this-is-my-test-bucket-11991/cmd.go\nsuccessfully pushed the file: doc.go to s3://this-is-my-test-bucket-11991/doc.go\nsuccessfully pushed the file: files.go to s3://this-is-my-test-bucket-11991/files.go\nsuccessfully pushed the file: formater.go to s3://this-is-my-test-bucket-11991/formater.go\nsuccessfully pushed the file: keys.go to s3://this-is-my-test-bucket-11991/keys.go\nsuccessfully pushed the file: main.go to s3://this-is-my-test-bucket-11991/main.go\nsuccessfully pushed the file: utils.go to s3://this-is-my-test-bucket-11991/utils.go\n\n[jest@starfury s3secrets]$ bin/s3secrets ls -b this-is-my-test-bucket-11991 -l \nsome.user 2793       26 Apr 16 13:50 UTC  buckets.go\nsome.user 10237      26 Apr 16 13:50 UTC  cmd.go\nsome.user 687        26 Apr 16 13:50 UTC  doc.go\nsome.user 9610       26 Apr 16 13:50 UTC  files.go\nsome.user 1614       26 Apr 16 13:50 UTC  formater.go\nsome.user 1452       26 Apr 16 13:50 UTC  keys.go\nsome.user 661        26 Apr 16 13:50 UTC  main.go\nsome.user 1445       26 Apr 16 13:50 UTC  utils.go\n\n[jest@starfury s3secrets]$ bin/s3secrets cat -b this-is-my-test-bucket-11991 buckets.go | head\n/*\nCopyright 2015 All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\n\n[jest@starfury s3secrets]$ bin/s3secrets buckets delete -n this-is-my-test-bucket-11991 \n[error] operation failed, error: the bucket is not empty, either force (--force) deletion or empty the bucket\n\n[jest@starfury s3secrets]$ bin/s3secrets buckets delete -n this-is-my-test-bucket-11991 --force\nsuccessfully deleted the bucket: this-is-my-test-bucket-11991\n```\n* **Retrieve the files from the bucket**\n\n```shell\n[jest@starfury s3secrets]$ bin/s3secrets get -b this-is-my-test-bucket-11991 -r -d ./secrets /\nretrieved the file: buckets.go and wrote to: ./secrets/buckets.go\nretrieved the file: cmd.go and wrote to: ./secrets/cmd.go\nretrieved the file: doc.go and wrote to: ./secrets/doc.go\nretrieved the file: files.go and wrote to: ./secrets/files.go\nretrieved the file: formater.go and wrote to: ./secrets/formater.go\nretrieved the file: keys.go and wrote to: ./secrets/keys.go\nretrieved the file: main.go and wrote to: ./secrets/main.go\n```\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)","masterBranchProtection":false},{"name":"UKHomeOffice/docker-fedora-baseservices","private":false,"url":"https://github.com/UKHomeOffice/docker-fedora-baseservices","license":null,"readme":"# docker-fedora-baseservices\nDocker base services fedora image\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/check_byod","private":false,"url":"https://github.com/UKHomeOffice/check_byod","license":null,"readme":"# check_byod\nScript to check OS is compliant with CESG guidelines\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/aws_usersync","private":false,"url":"https://github.com/UKHomeOffice/aws_usersync","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# aws_usersync\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/aws_usersync.svg?branch=master)](https://travis-ci.org/UKHomeOffice/aws_usersync)\n\nThis is used for syncing users from AWS to the local machine as well as their user key. It runs as a daemon and polls with whatever interval you define. By default it is set to run only once and exit, but this can be overriden.\n\nThe default group people are added to is sudo, but this can be overriden to add users to an alternative group.\n\nThis was written primarily to only work with AWS and also CoreOS. The user keys are really for AWS CodeCommit service, however, as they are\nassociated with the IAM account, they become accessible through IAM. It isn't particularly obvious that you need to place your key there but this is where it needs to go. \n\n### AWS IAM\n\nIf a user logs in to AWS Console and goes to AWS IAM Identity Access Management and then their own user, there is the codecommit section at the bottom. Users can paste in their public key in there, or multiple and make them active. This tool will only sync active keys, if you make a key inactive, then it will replace the keys on the box with only the active ones. \n\n#### IAM POLICY\n\nBelow is the policy that needs to be associated with the instances you are provisioning. Once you have created this, you can assign this to instances to give the relevant access to the instance to get the keys / users / groups.\n\n```\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n       {\n           \"Sid\": \"Stmt1442396947000\",\n           \"Effect\": \"Allow\",\n           \"Action\": [\n               \"iam:GetGroup\",\n               \"iam:GetSSHPublicKey\",\n               \"iam:GetUser\",\n               \"iam:ListSSHPublicKeys\"\n           ],\n           \"Resource\": [\n               \"arn:aws:iam::*\"\n           ]\n       }\n   ]\n}\n```\n\n\n### How to use this\n\nYou can build the go application by running:\n```\ngit clone git@github.com:UKHomeOffice/aws_usersync.git\ncd aws_usersync\ndocker run --rm -it -v \"$PWD\":/go -w /go quay.io/ukhomeofficedigital/go-gb:1.0.0 gb build all\n```\n\nThis will build the application in the current directory creating a bin/aws_usersync binary\n\nTo run the application you need to set environment variables or have relevant access to IAM:\n\n```\nexport AWS_ACCESS_KEY_ID=12345678893\nexport AWS_SECRET_ACCESS_KEY=30302499439434\n./bin/aws_usersync -g=\"group1,group2,group3\"\n```\n\nThis will grab all the users within that group and add them locally with relevant keys as a one time run, to run this at an interval of 5 minutes\n\n```\nexport AWS_ACCESS_KEY_ID=12345678893\nexport AWS_SECRET_ACCESS_KEY=30302499439434\n./bin/aws_usersync -o=false -i=5 -g=\"group1,group2,group3\"\n```\n\nFor debugging issues you can run it in debug mode\n```\n./bin/aws_usersync -o=false -i=5 -g=\"group1,group2,group3\" -L=debug\n```\n\n##### Notes\nThis is new and needs some cleanup on the code really and improving as it's a bit jumbled together in areas, but there are retrospective\nissues raised for things, to clean things up. \n\n\n","travis":true,"contributing":"# Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n","masterBranchProtection":false},{"name":"UKHomeOffice/brp-maintenance","private":false,"url":"https://github.com/UKHomeOffice/brp-maintenance","license":null,"readme":"# brp-maintenance\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-centos-base","private":false,"url":"https://github.com/UKHomeOffice/docker-centos-base","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Base Image for the Home Office\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-centos-base.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-centos-base)\n\nThis is a base image to ensure that all home office containers are starting from a known state. This allows us to \nmonitor for security problems in only one operating system, rather than 5 or 6. It also gives us a place to insert \nfixes.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nThis container has no entrypoint.\n\nThis will run bash (or anything else if you replace bash).\n\n```shell\ndocker run -it quay.io/ukhomeofficedigital/centos-base bash\n```\n\n## Built With\n\n* CentOS 7\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-centos-base)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/centos-base)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting\npull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-centos-base/tags). \n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-centos-base/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-dropwizard","private":false,"url":"https://github.com/UKHomeOffice/docker-dropwizard","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Dropwizard\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-dropwizard.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-dropwizard)\n\nThis is an onbuild container for Dropwizard.\n\n## Assumptions\n\n* You are using Maven 3 to build\n\n### Getting started\n\nCreate a Dockerfile in your project and extend this one with the additional ports you app expose. \nAlso specify the command to run the server including the jar file.\n\n```docker\nFROM ukhomeofficedigital:dropwizard\n\nCMD [\"target/my-java-app.jar\", \"server\", \"maybe-a-config.yml\"]\n\nEXPOSE 8080\nEXPOSE 8081\n```\n\nThen build!\n\nYou can change the CMD if you want to pass more than `server configuration.yml` to the jar.\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to \ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-dropwizard/blob/master/code_of_conduct.md).\n By participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [Semantic Versioning](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-dropwizard/graphs/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](https://github.com/UKHomeOffice/docker-dropwizard/blob/master/LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/ff","private":false,"url":"https://github.com/UKHomeOffice/ff","license":null,"readme":"# dsp-frontend-boilerplate\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-redis","private":false,"url":"https://github.com/UKHomeOffice/docker-redis","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# docker-redis\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-redis.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-redis)\n\nDocker image for redis. This image is designed to be used with kubernetes, it\nmay work outside kubernetes as well.\n\nIt is highly recommended to read through [redis sentinel\ndocumentation](http://redis.io/topics/sentinel).\n\n## Launching it in kubernetes\n\nFirst of all create a single replica pod of redis and redis-sentinel. Both\ncontainers will notice that `${REDIS_SENTINEL_SERVICE_HOST}` and\n`${REDIS_SENTINEL_SERVICE_PORT}` are empty and assume that this is an initial\nbootstrap of redis. Redis sentinel will connect to the master at `$(hostname\n-i)` and start monitoring it.\n\n```\nkubectl create -f kube/redis-controller.yaml\n```\n\nThen you need to create redis sentinel service, which will become your redis\nsentinel endpoint for the following redis pods.\n\n```\nkubectl create -f kube/redis-sentinel-service.yaml\n```\n\nOnce the service is up and running, you can check whether it is working\nproperly. Run the following command in some temporary container.\n\n```\nredis-cli -h ${REDIS_SENTINEL_SERVICE_HOST} -p 26379 INFO\n```\n\nNext, we can start scaling our redis out. It is recommended to add redis and\nredis-sentinel replicas one by one.\n\n```\nkubectl scale rc redis --replicas=2\n```\n\nWait a minute and check on the sentinel service `redis-cli -h\n${REDIS_SENTINEL_SERVICE_HOST} -p 26379 INFO`, then scale to `--replicas=3`.\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker MySQL Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql)\n\nDocker MySQL Container that extends the official home office docker base image.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nParameters passed to the container will be passed onto `mysqld`\n\n```shell\ndocker run \\\n       -e 'MYSQL_ROOT_PASSWORD=my-password' \\\n       quay.io/ukhomeofficedigital/mysql:v0.5.0 \\\n       -yr --param=eters\n```\n\nPassing MySQLd  will start MySQLd without any parameters.  \n\n```shell\ndocker run \\\n    -e 'MYSQL_ROOT_PASSWORD=my-password' \\\n    quay.io/ukhomeofficedigital/mysql:v0.5.0 \\\n    mysqld\n```\n\nStarting MySQLd without any parameters is also the default behaviour.\n\n```shell\ndocker run \\\n    -e 'MYSQL_ROOT_PASSWORD=my-password' \\\n    quay.io/ukhomeofficedigital/mysql:v0.5.0 \\\n```\n\nYou can also run arbitrary stuff\n\n```shell\ndocker run quay.io/ukhomeofficedigital/mysql:v0.5.0 bash\n```\n\n#### Environment Variables\n\n* `MYSQL_ROOT_PASSWORD` - The password you want to set as the root password\n* `MYSQL_ROOT_PASSWORD_PATH` - Alternatively, you can put the password at a path and read it from \n  there\n* `MYSQL_ALLOW_EMPTY_PASSWORD` - Set this to true if you want to be able to set a blank password\n\n#### Volumes\n\n* `/var/lib/mysql` - MySQL Data Files\n\n#### Useful File Locations\n\n* `/docker-entrypoint-initdb.d/*.sql` - Any SQL file in that location will be loaded into the \n  database on container init \n  \n* `/healthcheck.sh` - You can execute this file to check the health of the mysql installation. It \n  does `SELECT 1+1` on the database.\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql/tags). \n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mysql/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* Large portions of this container are taken from the \n  [official mysql docker container](https://hub.docker.com/_/mysql/).\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-openjdk8-gradle","private":false,"url":"https://github.com/UKHomeOffice/docker-openjdk8-gradle","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"#docker-openjdk8-gradle\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-openjdk8-gradle.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-openjdk8-gradle)\n\nBuilds upon ukhomeofficedigital/centos-base by adding openjdk8 and running gradlew.\n\n##Assumptions\n\n* you use the installApp plugin to generate your Build\n\n##Usage\n\nBase your application on this image like so:\n\n###Dockerfile\n```\nFROM quay.io/ukhomeofficedigital/openjdk8-gradle:v0.1.0\n\nCMD [\"build/install/myapp/bin/myapp\", \"server\", \"src/main/resources/myconfiguration.yaml\"]\n\nEXPOSE 8080\nEXPOSE 8081\n```\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-nodejs","private":false,"url":"https://github.com/UKHomeOffice/docker-nodejs","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Node.JS On Build Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-nodejs.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-nodejs)\n\nThis is an onbuild container for Node.JS Projects. \n\n## Usage  \n\nThis docker container is an `ONBUILD`. Simply extend the Dockerfile in your application with this Dockerfile and your \nproject will be copied into the `/app` directory and have `npm install` run on it.  You must ensure that your \ndownstream images sets USER nodejs and additionally in rare cases any required permission beyond read. You must also ensure that your application will listen on port 8080.\n\nPlease note, storing state on this container is not recommended, and logs should be written to stdout, thus adding further \npermissions isn't something we'd normally envision.\n\n### Container Parameters\n\n* `start`, `test` or `run` will run `npm COMMAND`\n\nThe following command will run `npm start` on the code within the container\n\nSo if your Dockerfile looks like this\n```shell\nFROM quay.io/ukhomeofficedigital/nodejs:v3.0.0\n\nUSER nodejs\nCMD [\"start\"]\n```\n\nThe following will run `npm start`:\n\n```shell\ndocker run your-docker-container:latest\n```\n\nYou can also run arbitrary commands such as:\n\n```shell\ndocker run your-docker-container:latest /opt/nodejs/bin/npm run \n```\n\nHowever, we'd prefered there was a standard way to start your app and thus,\nhave settled on `npm start` being the canonical way to run your app.\n\n\n### Useful Directories\n\n* `/app` - Where you app will be copied to on build\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to \ndiscuss it in an issue first.\n\nPlease note that this project is released with a \n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-nodejs/blob/master/CODE_OF_CONDUCT.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Build With\n\n* Node v4.4.2\n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of \n[contributors](https://github.com/UKHomeOffice/docker-nodejs/graphs/contributors) who participated \nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the \n[LICENSE.md](https://github.com/UKHomeOffice/docker-nodejs/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* [NodeJS](https://nodejs.org/)\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-proxy","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-proxy","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# OpenResty Docker Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-nginx-proxy.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-nginx-proxy)\n\nThis container aims to be a generic proxy layer for your web services. It includes OpenResty with\nLua and NAXSI filtering compiled in.\n\n## Getting Started\n\nIn this section I'll show you some examples of how you might run this container with docker.\n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n## Usage\n\n### Environment Variables\n\n#### Multi-location Variables\n\nVariables to control how to configure the proxy (can be set per location, see\n[Using Multiple Locations](#using-multiple-locations)).\n\n* `PROXY_SERVICE_HOST` - The upstream host you want this service to proxy.\n* `PROXY_SERVICE_PORT` - The port of the upstream host you want this service to proxy.\n* `NAXSI_RULES_URL_CSV` - A CSV of [Naxsi](https://github.com/nbs-system/naxsi) URL's of files to download and use.\n(Files must end in .rules to be loaded)\n* `NAXSI_RULES_MD5_CSV` - A CSV of md5 hashes for the files specified above\n* `EXTRA_NAXSI_RULES` - Allows NAXSI rules to be specified as an environment variable. This allows one or two extra\nrules to be specified without downloading or mounting in a rule file.\n* `NAXSI_USE_DEFAULT_RULES` - If set to \"FALSE\" will delete the default rules file.\n* `ENABLE_UUID_PARAM` - If set to \"FALSE\", will NOT add a UUID url parameter to all requests. The Default will add this\n for easy tracking in down stream logs e.g. `nginxId=50c91049-667f-4286-c2f0-86b04b27d3f0`.\n If set to `HEADER` it will add `nginxId` to the headers, not append to the get params.\n* `CLIENT_CERT_REQUIRED` - if set to `TRUE`, will deny access at this location, see [Client Certs](#client-certs).\n* `VERIFY_SERVER_CERT` - if set to `TRUE`, will verify the upstream server's TLS certificate is valid and signed by the CA, see [Verifying Upstream Server](#verifying-upstream-server).\n* `USE_UPSTREAM_CLIENT_CERT` - if set to `TRUE`, will use the set of upstream client certs when connecting upstream, see [Upstream Client Certs](#upstream-client-certs).\n* `ERROR_REDIRECT_CODES` - Can override when Nginx will redirect requests to its own error page. Defaults to\n\"`500 501 502 503 504`\". To support a new code, say `505`, an error page must be provided at\n`/usr/local/openresty/nginx/html/505.shtml`, see [Useful File Locations](#useful-file-locations).\n* `ADD_NGINX_LOCATION_CFG` - Arbitrary extra NGINX configuration to be added to the location context, see\n[Arbitrary Config](#arbitrary-config).\n* `PORT_IN_HOST_HEADER` - If FALSE will remove the port from the http `Host` header.\n* `BASIC_AUTH` - Define a path for username and password file (in `username:password` format), this will turn the file into a .htpasswd file.\n* `REQS_PER_MIN_PER_IP` - Will limit requests based on IP e.g. set to 60 to allow one request per second.\n* `CONCURRENT_CONNS_PER_IP` - Will limit concurrent connections based on IP e.g. set to 10 to allow max of 10 connections per browser or proxy!\n* `REQS_PER_PAGE` - Will limit requests to 'bursts' of x requests at a time before terminating (will default to 20)\n* `DENY_COUNTRY_ON` - Set to `TRUE` to deny access to countries not listed in ALLOW_COUNTRY_CSV with 403 status for a location (set location for 403 with ADD_NGINX_LOCATION_CFG).\n* `VERBOSE_ERROR_PAGES` - Set to TRUE to display debug info in 418 error pages.\n\n#### Single set Variables\n\nNote the following variables can only be set once:\n\n* `ADD_NGINX_SERVER_CFG` - Arbitrary extra NGINX configuration to be added to the server context, see\n[Arbitrary Config](#arbitrary-config)\n* `ADD_NGINX_HTTP_CFG` - Arbitrary extra NGINX configuration to be added to the http context, see\n[Arbitrary Config](#arbitrary-config)\n* `LOCATIONS_CSV` - Set to a list of locations that are to be independently proxied, see the example\n[Using Multiple Locations](#using-multiple-locations). Note, if this isn't set, `/` will be used as the default\nlocation.\n* `LOAD_BALANCER_CIDR` - Set to preserve client IP addresses. *Important*, to enable, see\n[Preserve Client IP](#preserve-client-ip).\n* `NAME_RESOLVER` - Can override the *default* DNS server used to re-resolve the backend proxy (based on TTL).\nThe *Default DNS Server* is the first entry in the resolve.conf file in the container and is normally correct and\nmanaged by Docker or Kubernetes.\n* `CLIENT_MAX_BODY_SIZE` - Can set a larger upload than Nginx defaults in MB.\n* `HTTPS_REDIRECT_PORT` - Only required for http to https redirect and only when a non-standard https port is in use.\nThis is useful when testing or for development instances or when a load-balancer mandates a non-standard port.\n* `LOG_FORMAT_NAME` - Can be set to `text` or `json` (default).\n* `NO_LOGGING_URL_PARAMS` - Can be set to `TRUE` if you don't want to log url params. Default is empty which means URL params are logged\n* `NO_LOGGING_BODY` - Defaults to true `TRUE`.  Set otherwise and nginx should log the request_body.\n* `NO_LOGGING_RESPONSE` - Defaults to true `TRUE`.  Set otherwise and nginx should log the response_body\n* `SERVER_CERT` - Can override where to find the server's SSL cert.\n* `SERVER_KEY` - Can override where to find the server's SSL key.\n* `SSL_CIPHERS` - Change the SSL ciphers support default only AES256+EECDH:AES256+EDH:!aNULL\n* `SSL_PROTOCOLS` - Change the SSL protocols supported default only TLSv1.2\n* `HTTP_LISTEN_PORT` - Change the default inside the container from 10080.\n* `HTTPS_LISTEN_PORT` - Change the default inside the container from 10443.\n* `INTERNAL_LISTEN_PORT` - Change the default inside the container from 10418. Note: This is used for internal processing and is not available externally.\n* `HTTPS_REDIRECT` - Toggle whether or not we force redirects to HTTPS.  Defaults to true.\n* `ALLOW_COUNTRY_CSV` - List of [country codes](http://dev.maxmind.com/geoip/legacy/codes/iso3166/) to allow.\n* `STATSD_METRICS_ENABLED` - Toggle if metrics are logged to statsd (defaults to true)\n* `STATSD_SERVER` - Server to send statsd metrics to, defaults to 127.0.0.1\n* `DISABLE_SYSDIG_METRICS` - Set to any non-empty string to disable support for Sysdig's metric collection\n\n### Ports\n\nThis container exposes\n\n* `10080` - HTTP\n* `10443` - HTTPS\n\nN.B. see HTTP(S)_LISTEN_PORT above\n\n### Useful File Locations\n\n* `nginx.conf` is stored at `/usr/local/openresty/nginx/conf/nginx.conf`\n* `/etc/keys/crt` & `/etc/keys/key` - A certificate can be mounted here to make OpenResty use it. However a self\n  signed one is provided if they have not been mounted.\n* `/etc/keys/client-ca` If a client CA is mounted here, it will be loaded and configured.\nSee `CLIENT_CERT_REQUIRED` above in [Environment Variables](#environment-variables).\n* `/etc/keys/upstream-server-ca` A CA public cert must be mounted here when verifying the upstream server's certificate is required.\nSee `VERIFY_SERVER_CERT` above in [Environment Variables](#environment-variables).\n* `/etc/keys/upstream-client-crt` A public client cert must be mounted here when when the upstream server requires client cert authentication.\nSee `USE_UPSTREAM_CLIENT_CERT` above in [Environment Variables](#environment-variables).\n* `/etc/keys/upstream-client-key` A private client key must be mounted here when when the upstream server requires client cert authentication.\nSee `USE_UPSTREAM_CLIENT_CERT` above in [Environment Variables](#environment-variables).\n* `/usr/local/openresty/naxsi/*.conf` - [Naxsi](https://github.com/nbs-system/naxsi) rules location in default\nnginx.conf.\n* `/usr/local/openresty/nginx/html/$CODE.shtml` - HTML (with SSI support) displayed when a the status code $CODE\nis encountered upstream and the proxy is configured to intercept. See ERROR_REDIRECT_CODES to change this.\n* `/usr/local/openresty/nginx/html/418-request-denied.shtml` - HTML (with SSI support) displayed when NAXSI\nblocks a request.\n\n### Examples\n\n#### Self signed SSL Certificate\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Custom SSL Certificate\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -p 8443:443 \\\n           -v /path/to/key:/etc/keys/key:ro \\\n           -v /path/to/crt:/etc/keys/crt:ro \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Preserve Client IP\n\nThis proxy supports [Proxy Protocol](http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt).\n\nTo use this feature you will need:\n\n* To enable [proxy protocol](http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt) on your load balancer.\n  For AWS, see [Enabling Proxy Protocol for AWS](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-proxy-protocol.html).\n* Find the private address range of your load balancer.\n  For AWS, this could be any address in the destination network. E.g.\n  if you have three compute subnets defined as 10.50.0.0/24, 10.50.1.0/24 and 10.50.2.0/24,\n  then a suitable range would be 10.50.0.0/22 see [CIDR Calculator](http://www.subnet-calculator.com/cidr.php).\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'LOAD_BALANCER_CIDR=10.50.0.0/22' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Extra NAXSI Rules from Environment\n\nThe example below allows large documents to be POSTED to the /documents/uploads and /documents/other_uploads locations.\nSee [Whitelist NAXSI rules](https://github.com/nbs-system/naxsi/wiki/whitelists) for more examples.\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://myapp.svc.cluster.local' \\\n           -e 'PROXY_SERVICE_PORT=8080' \\\n           -e 'EXTRA_NAXSI_RULES=BasicRule wl:2 \"mz:$URL:/documents/uploads|BODY\";\n               BasicRule wl:2 \"mz:$URL:/documents/other_uploads|BODY\";' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Using Multiple Locations\n\nWhen the LOCATIONS_CSV option is set, multiple locations can be proxied. The settings for each proxy location can be\ncontrolled with the use of any [Multi-location Variables](#multi-location-variables) by suffixing the variable name with\n both a number, and the '_' character, as listed in the LOCATIONS_CSV variable.\n\n##### Two servers\n\nThe example below configures a simple proxy with two locations '/' (location 1) and '/api' (location 2):\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST_1=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT_1=80' \\\n           -e 'PROXY_SERVICE_HOST_2=https://api.svc.cluster.local' \\\n           -e 'PROXY_SERVICE_PORT_2=8888' \\\n           -e 'LOCATIONS_CSV=/,/api' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nFor more detail, see the [generated config](./docs/GeneratedConfigs.md#two-separate-proxied-servers).\n\n##### One Server, Multiple locations\n\nThe example below will proxy the same address for two locations but will disable the UUID (nginxId) parameter for the\n/about location only.\n\nSee the [generated config](./docs/GeneratedConfigs.md#same-server-proxied) for below:\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'LOCATIONS_CSV=/,/about' \\\n           -e 'ENABLE_UUID_PARAM_2=FALSE' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Client Certs\n\nIf a client CA certificate is mounted, the proxy will be configured to load it. If a client has the cert, the client CN\nwill be set in the X-Username header and logged.\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -v \"${PWD}/client_certs/ca.crt:/etc/keys/client-ca\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nThe following example will specifically deny access to clients without a cert:\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://serverfault.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'LOCATIONS_CSV=/,/about' \\\n           -e 'CLIENT_CERT_REQUIRED_2=TRUE' \\\n           -v \"${PWD}/client_certs/ca.crt:/etc/keys/client-ca\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\nSee [./client_certs](./client_certs) for scripts that can be used to generate a CA and client certs.\n\n#### Upstream Client Certs\n\nIf the environment variable `USE_UPSTREAM_CLIENT_CERT` is set to `TRUE`\nthen the client certs at `/etc/keys/upstream-client-crt` and\n`/etc/keys/upstream-client-key` will be used to authenticate with the\nupstream HTTPS service.\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=https://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=443' \\\n           -e 'USE_UPSTREAM_CLIENT_CERT=TRUE' \\\n           -v \"/path/to/client-public.crt:/etc/keys/upstream-client-crt\" \\\n           -v \"/path/to/client-private.key:/etc/keys/upstream-client-key\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v2.1.0\n```\n\n#### Verifying Upstream Server\n\nIf the environment variable `VERIFY_SERVER_CERT` is set to `TRUE` then\nthe upstream server's certificate will be validated against the CA\npublic cert at `/etc/keys/upstream-server-ca`.\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=https://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=443' \\\n           -e 'VERIFY_SERVER_CERT=TRUE' \\\n           -v \"/path/to/ca.crt:/etc/keys/upstream-server-ca\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v2.1.0\n```\n\n#### Arbitrary Config\n\nThe example below will return \"ping ok\" for the URL /ping.\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'ADD_NGINX_LOCATION_CFG=if ($uri = /proxy-ping) return 200 \"ping ok\";' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nThe example below will return \"404\" for the URL /notfound.\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'ADD_NGINX_SERVER_CFG=location /notfound { return 404; };' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nThe example below enables proxy_cache_path directive.  Allows you to define where cached files are stored.\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'ADD_NGINX_HTTP_CFG=proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=static:10m;' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Basic Auth\n\nTo add basic auth to your server you need to define the username and password by mounting a file and defining that file in the `BASIC_AUTH` variable, then add the location config to you config.\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'ADD_NGINX_LOCATION_CFG='auth_basic \"Restricted\"; auth_basic_user_file /etc/secrets/.htpasswd;' \\\n           -e BASIC_AUTH='/etc/secrets/basic-auth'\n           -p 8443:443 \\\n           -v ~/Documents:/etc/secrets/\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nThe basic auth file will look like this.\n```shell\nadmin:testing\nusername:password\n```\n##### Basic Auth on mutliple Locations\n\nIf you're using multiple locations then we need to define the location that basic_auth will be set in relation to the `LOCATIONS_CSV`\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://serverfault.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'LOCATIONS_CSV=/,/about' \\\n           -e 'CLIENT_CERT_REQUIRED_2=TRUE' \\\n           -e BASIC_AUTH_2=/etc/secrets/basic-auth \\\n           -v \"${PWD}/client_certs/ca.crt:/etc/keys/client-ca\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nthis will setup basic-auth for the the `/about` location or simply swap the 2 for a 1 to setup basic auth for the root location.\n\n\n\n## Built With\n\n* [OpenResty](https://openresty.org/) - OpenResty (aka. ngx_openresty) is a full-fledged web\n  application server by bundling the standard Nginx core, lots of 3rd-party Nginx modules, as well\n  as most of their external dependencies.\n* [Nginx](https://www.nginx.com/resources/wiki/) - The proxy server core software.\n* [ngx_lua](http://wiki.nginx.org/HttpLuaModule) - Embed the power of Lua into Nginx\n* [Naxsi](https://github.com/nbs-system/naxsi) - NAXSI is an open-source, high performance, low\n  rules maintenance WAF for NGINX\n* [GeoLite data](http://www.maxmind.com\">http://www.maxmind.com) This product includes GeoLite data created by MaxMind.\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-nginx-proxy)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/nginx-proxy)\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n## Authors\n\n* **Lewis Marshal** - *Initial work* - [lewismarshall](https://github.com/lewismarshall)\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/docker-nginx-proxy/graphs/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/dropwizard-sample-gradle","private":false,"url":"https://github.com/UKHomeOffice/dropwizard-sample-gradle","license":null,"readme":"#Dropwizard Sample Application with Gradle\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/dropwizard-sample-gradle.svg?branch=master)](https://travis-ci.org/UKHomeOffice/dropwizard-sample-gradle)\n\nThis is a sample application using Gradle for the build and package\n\n##Building\n\n```\n./gradlew installApp\n```\n\n##Running\n\n```\nbuild/install/dropwizard-gradle-sample/bin/dropwizard-gradle-sample server\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/jenkins-docker-aws","private":false,"url":"https://github.com/UKHomeOffice/jenkins-docker-aws","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# DOCKER JENKINS\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/jenkins-docker-aws.svg?branch=master)](https://travis-ci.org/UKHomeOffice/jenkins-docker-aws)\n\nThis folder contains the build for a docker image of jenkins with given plugins. Features include:\n- Backing up and restoring of config from Amazon S3\n- Includes docker, git, awscli\n- Includes kubectl and restoration of corresponding config from encrypted file in Amazon S3\n- Includes restoration of encrypted config for docker logins from encrypted file in Amazon S3\n\nTo automatically build and push a new version to your chosen docker repository from this folder run:\n```bash\n$ ./build_and_push.sh <repositoryname>/<username>/<reponame>:<tag>\n```\ne.g.\n```bash\n./build_and_push.sh quay.io/timgent/aws-jenkins:v0.5\n```\n\n# Syncing config from S3 bucket\nJenkins docker image. Jenkins configuration can be synced from AWS S3 bucket at\nstartup.\n\nBy default there is only one-way configuration sync, but you can set up a jenkins\njob which syncs `${JENKINS_HOME}` to the same S3 bucket, so next time you start\nthis container you will have all your config loaded at startup time.\n\nIf `JENKINS_HOME_S3_BUCKET_NAME` is set, bucket config will be written out to\n`/etc/jenkins-bucket-config`, which is used by\n`/srv/jenkins/jenkins_backup.sh`. So you can just simply create a jenkins job\nwhich runs the backup script.\n\nConfiguration is done using environment variables.\n\nAuthentication to S3 bucket can be passed in via `AWS_SECRET_ACCESS_KEY` and\n`AWS_ACCESS_KEY_ID` or EC2 instance IAM role.\n\n- `JENKINS_HOME` Default: `/var/lib/jenkins`. If you decide to change this,\n  make sure you run docker container with `-v <new_jenkins_home>` set\n- `JENKINS_HOME_S3_BUCKET_NAME` Default: unset. If unset, config sync will not run\n- `JAVA_OPTS` Default: unset.\n- `JENKINS_OPTS` Default: unset. Any valid jenkins parameter is supported\n\n# Secrets for kubeconfig and dockercfg\n## Option 1 - getting secrets from S3\nkubeconfig and docker login config syncing to S3 bucket are supported. You will need to encrypt and upload dockercfg and kubeconfig files to your chosen S3 buckets to enable this. For example to encrypt:\n\n`aws kms encrypt --key-id xxxxxxx --plaintext \"$(cat dockercfg)\" --query CiphertextBlob --output text | base64 -d > dockercfg.encrypted`\n\nThen upload to s3. The bucket name will need to be set as an environment variable SECRETS_BUCKET when the container is run.\n## Option 2 - map secrets in using volumes\nUsing plain docker you can map secrets in with the -v command when running this container.\n- Kube config needs to be mapped in to /root/.kube/config\n- Docker config needs to be mapped in to /root/.docker/config.json\nIf you are running this container using kubernetes then kubernetes secrets can be used to map these in as volumes as usual. Documentation is available [here](https://github.com/kubernetes/kubernetes/tree/master/docs/user-guide/secrets)\n\n# Enabling docker in docker\nThis container containers docker which enables it to execute docker commands using the host machines docker daemon. To enable this the docker socket will need to be mapped in as a volume to the container like:\n-v /var/run/docker.sock:/var/run/docker.sock\n\n# Running\n\n```bash\ndocker run \\\n  -e AWS_SECRET_ACCESS_KEY=xxx \\\n  -e AWS_ACCESS_KEY_ID=xxx \\\n  -e JENKINS_HOME_S3_BUCKET_NAME=example-jenkinsconfig-us-east-1 \\\n  -e SECRETS_BUCKET=my_secrets_bucket \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -p 8080:8080 state/jenkins\n```\n\n# Useful Paths\n\nYou may choose to mount your Amazon secrets in a file that looks like this at\n`/root/.aws/credentials`\n\n```\n[default]\naws_access_key_id = xxx\naws_secret_access_key = xxx\n```\n\nRather than via your environment variables.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mongonodejava8","private":false,"url":"https://github.com/UKHomeOffice/docker-mongonodejava8","license":null,"readme":"# docker-mongonodejava8\nImage that has Sun Java 8, mongodb and node installed.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/registered-traveller-devops","private":false,"url":"https://github.com/UKHomeOffice/registered-traveller-devops","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-logstash-s3","private":false,"url":"https://github.com/UKHomeOffice/docker-logstash-s3","license":null,"readme":"# docker-logstash-s3\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-logstash-s3.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-logstash-s3)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-s3-backup","private":false,"url":"https://github.com/UKHomeOffice/docker-s3-backup","license":null,"readme":"# docker-archive\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-archive.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-archive)\n\nSo this is how we do backups.\n\nIt looks at the share dir for a configureable named file; \"*.tar.gz\" by default.\nGPG the file\nUploads to s3.\n\nRuns in a cruddy while loop.\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-go-gb","private":false,"url":"https://github.com/UKHomeOffice/docker-go-gb","license":null,"readme":"# docker-go-gb\nFor using gb build and fetch for go applications\n\n# Build the image\ndocker build -t <user>/<repo>:<version> .\n\n# Example use case if the image is built and pushed into a repo\ncd \"$GO_REPO\"\ndocker run --rm -it -v \"$PWD\":/go -w /go quay.io/ukhomeofficedigital/go-gb:1.0.0 gb build all\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vaultconf","private":false,"url":"https://github.com/UKHomeOffice/vaultconf","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"[![Build Status](https://travis-ci.org/UKHomeOffice/vaultconf.svg)](https://travis-ci.org/UKHomeOffice/vaultconf)\n\n# Vaultconf\nA command line tool to allow mass configuration updates in vault with support included for kubernetes. Functions include:\n- update of policies in vault\n- update of users in Vault\n \nFor more context please see this [blog post](http://timturnstechie.blogspot.co.uk/2015/10/vaultconf-managing-vault-logins-for.html).\n\n## Installation\nThis tool has not yet been setup as a Ruby gem, though it would be easy to do so. Instead we recommend running using docker to ensure no dependency issues:\n\ne.g. docker run --net=host -v policies:/policies -ti quay.io/ukhomeofficedigital/vaultconf policies -c /policies -u user -p password -a http://localhost:8200 --nokube\nNB: In this example --net=host is needed as we are accessing a local vault server. This is not required for accessing remote vault servers.\n\n## Usage\nRun with option --help to show command line help.\n\nExample usage is included in vaultconf.feature.\nExample policies directory structure is provided in test/resources/policies.\nExample users yaml structure is provided in test/resources/users/users/yaml\n\nIn order to not need to define password in the command line vaultconf can read login details from a file called \"login\" in the .vaultconf directory in your home directory. The format for this file is as follows:\n``` yaml\n---\nusername: myusername\npassword: mypassword\n```\n\n## Development\n\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `bin/console` for an interactive prompt that will allow you to experiment.\n\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the version number in `version.rb`, and then run `bundle exec rake release` to create a git tag for the version, push git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\n\n## Contributing\n\n1. Fork it ( https://github.com/UKHomeOffice/vaultconf/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-confluence","private":false,"url":"https://github.com/UKHomeOffice/docker-confluence","license":null,"readme":"# docker-confluence\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-confluence.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-confluence)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-sonarqube","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-sonarqube","license":null,"readme":"# docker-mysql-sonarqube\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql-sonarqube.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql-sonarqube)\n\nThe docker MySQL container plus a single SQL file that creates a sonar db. For use with the sonarqube docker container\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-sonarqube","private":false,"url":"https://github.com/UKHomeOffice/docker-sonarqube","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Sonar Qube\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-sonarqube.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-sonarqube)\n\nThis is a [Sonar Qube](http://www.sonarqube.org/) Docker container.\n\n## Getting Started\n\nThese instructions will get the container running.\n\nThere is a H2 Database included in Sonar Qube, which you may choose to use, however it is not \nsuitable for production\n\n### Prerequisities\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nYou'll also need a database you can connect to.\n\n### Usage\n\n#### Container params\n\nIf the arguments passed to the container begin with `-` for example `-something` All those arguments\nwill be passed to Sonar Qube.\n\n```bash\ndocker run quay.io/ukhomeofficedigital/sonarqube:v0.2.0 -something\n```\n\nLikewise, no arguments will also start Sonar Qube.\n\n```bash\ndocker run quay.io/ukhomeofficedigital/sonarqube:v0.2.0\n```\n\nOtherwise it'll run what you passed in. So for example `bash` would run bash\n\n```bash\ndocker run quay.io/ukhomeofficedigital/sonarqube:v0.2.0 bash\n```\n\n#### Backups\n\nThis container will attempt to backup and restore itself on start and stop. You can also trigger the process manually by running\n\n* `/opt/sonarqube/backup.sh`\n* `/opt/sonarqube/restore.sh`\n\n#### Environment Variables\n\n* `SONARQUBE_JDBC_USERNAME` Database username for Sonar Qube. Defaults to `sonar`\n* `SONARQUBE_JDBC_PASSWORD` Database password for Sonar Qube. Defaults to `sonar`\n* `$SONARQUBE_JDBC_PASSWORD_PATH` Path to file with database password for Sonar Qube. Overwrites \n  `SONARQUBE_JDBC_PASSWORD` if present.\n* `SONARQUBE_JDBC_URL` The JDBC url to the database for Sonar Qube. Defaults to \n  `jdbc:h2:tcp://localhost:9092/sonar`\n\nIf you want to back things up, then you'll need to set these too.\n\n* `AWS_ACCESS_KEY_ID` AWS Access Key to use for backups\n* `AWS_SECRET_ACCESS_KEY` AWS Secret Key to use for backups\n* `SONAR_QUBE_BACKUP_S3_BUCKET_NAME` Bucket to backup to\n\n#### Exposed Ports\n\n* `9000` Web Interface\n* `9092` H2 if you choose to use that database\n\n#### Volumes\n\n* `/opt/sonarqube/extensions` - Installed Extensions\n\n## Built With\n\n* Sonar Qube 5.1.2\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-sonarqube/tags). \n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-sonarqube/contributors) \nwho participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* Lots of this code comes from the official \n  [Sonar Qube Docker image](https://github.com/SonarSource/docker-sonarqube).\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-java","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-java","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker MySQL Java Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql-java.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql-java)\n\nDocker MySQL Container that also includes Open Java 8 *JRE* install.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\nThis is intended as a base image that would extended mysql so Java code maybe run along with mysql tools installed e.g.\n\n\n```\nFROM quay.io/ukhomeofficedigital/mysql-java:v0.1.2\n\n# Customisations to allow for schema updates using liquidbase Java file\n# =====================================================================\n\nENV TERM dumb\n\nCOPY docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n```\n\nIt was created to run a simple bash mysql users script and then run a Java \n[Liquidbase](http://www.liquibase.org/) schema install.\n\nIt extends the mysql only repository and as such, most of the documentation is available here:\n[Docker MySQL](https://github.com/UKHomeOffice/docker-mysql/blob/v0.5.1/README.md)\n\n \n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql-java/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mysql-java/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* This container is taken from the \n  [UKHomeOffice mysql docker container](https://quay.io/repository/ukhomeofficedigital/mysql).\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-crond","private":false,"url":"https://github.com/UKHomeOffice/docker-crond","license":null,"readme":"# docker-cron\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-crond.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-crond)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-selenium-standalone-server","private":false,"url":"https://github.com/UKHomeOffice/docker-selenium-standalone-server","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker: Selenium Server with Firefox and Google Chrome\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-selenium-standalone-server.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-selenium-standalone-server)\n\nDocker container containing Selenium Server\n\n> Selenium automates browsers. That's it! What you do with that power is entirely up to you. \n> Primarily, it is for automating web applications for testing purposes, but is certainly not \n> limited to just that. Boring web-based administration tasks can (and should!) also be automated as\n> well.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nParameters passed to the container will be passed onto Selenium Server.\n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/selenium-standalone-server:v0.1.2 \\\n       -your --param=eters\n```\n\nPassing no parameters will start Selenium Server\n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/selenium-standalone-server:v0.1.2\n```\n\nYou can also run arbitrary stuff\n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/selenium-standalone-server:v0.1.2 \\\n       bash\n```\n\n### Exposes\n\n* `4444` Selenium Server \n\n## Kubernetes\n\nFor example Kubernetes files see [/kb8](/kb8)\n\n## Built With\n\n* Chrome Stable\n* Firefox\n* Selenium Chrome Driver 2.18\n* Selenium Server Standalone 2.47.1\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository][tags]. \n\n[tags]: https://github.com/UKHomeOffice/docker-selenium-standalone-server/tags\n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors][contrib] who participated in this project.\n\n[contrib]: https://github.com/UKHomeOffice/docker-selenium-standalone-server/contributors\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\n* Lots of this code was stolen from the \n  [official Selenium container](https://github.com/SeleniumHQ/docker-selenium).\n","travis":true,"contributing":"# Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to \ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mediawiki","private":false,"url":"https://github.com/UKHomeOffice/docker-mediawiki","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# docker-mediawiki\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mediawiki.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mediawiki)\n\nFor this to work, PHP will be running in another container separate to mediawiki\nThis will be handled currently as a sidekick container in a pod for Kubernetes, but also could be\njust a bound container also.\n\nFor additional extensions, modify the extensions.txt with the git hash. These can be found at https://extdist.wmflabs.org/dist/extensions/ .\nThe contents of the file will look like\n\n```\nTwoFactorAuthentication:3e8f4ce\n```\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nParameters passed to the container will be passed onto Selenium Server.\n\n```shell\ndocker run -e MEDIAWIKI_VERSION=<version> \\\n       quay.io/ukhomeofficedigital/mediawiki:v0.5.1 \\\n       \n```\n\nPassing no parameters will start mediawiki \n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/mediawiki:v0.5.1\n```\n\nYou can also run arbitrary stuff\n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/mediawiki:v0.5.1 \\\n       bash\n```\n\n## Kubernetes\n\nFor example Kubernetes files see [/kb8](/kb8)\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the\n[tags on this repository][tags].\n\n[tags]: https://github.com/UKHomeOffice/docker-mediawiki/tags\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-php-fpm","private":false,"url":"https://github.com/UKHomeOffice/docker-php-fpm","license":null,"readme":"# docker-php-fpm\n\nThis container is for running PHP apps in kubernetes.  It doesn't contain composer as that's only required at the build step which this isn't intended to offer.\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-php-fpm.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-php-fpm)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-s3registry","private":false,"url":"https://github.com/UKHomeOffice/docker-s3registry","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Trusted Private Registry Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-s3registry.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-s3registry)\n\nDocker Trusted Private Registry Container. Requires fully trusted certs \n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nStarting the registry without any parameters is also the default behaviour.\n\n```shell\ndocker run \\\n    -v ${PWD}/secrets:/etc/secrets \\\n    -p 5000:5000\n    quay.io/ukhomeofficedigital/s3registry:v2.0.0 \\\n```\n\n#### Required secrets files\n\nThe yaml file below represents the secret files required to run the registry.\n\nAll the files are required to be present and mounted at /etc/secrets \n\n```yaml\n---\nkind: \"Secret\"\napiVersion: \"v1\"\nmetadata:\n  name: \"registry-secrets\"\ntype: \"Opaque\"\ndata:\n  s3-accesskey: bG9vayBpbiBhd3MgZm9yIGNyZWRzCg==\n  s3-secretkey: bG9vayBpbiBhd3MgZm9yIGNyZWRzCg==\n  s3-region: bG9vayBpbiBhd3MgZm9yIGNyZWRzCg==\n  s3-bucket: bG9vayBpbiBhd3MgZm9yIGNyZWRzCg==\n  key: dXNlIGEgcmVhbCBrZXkK\n  crt: dXNlIGEgcmVhbCBjZXJ0Cg==\n  docker_user: bXJkb2NrZXJ1c2VyCg==\n  docker_pass: YmFkcGFzcwo=\n\n```\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-s3registry/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [lewismarshall](https://github.com/lewismarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-s3registry/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* Large portions of this container are taken from the \n  [official registry docker container](https://hub.docker.com/_/registry/).\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-openjdk8","private":false,"url":"https://github.com/UKHomeOffice/docker-openjdk8","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Java JDK Container\n\nDocker container that also includes Open Java 8 *JDK* install for running containerized builds.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container\n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the\n[tags on this repository](https://github.com/UKHomeOffice/docker-openjdk8/tags).\n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-openjdk8/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* [OpenJDK8](http://openjdk.java.net/projects/jdk8/)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-gitlab-tools","private":false,"url":"https://github.com/UKHomeOffice/docker-gitlab-tools","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-openjdk8-jre","private":false,"url":"https://github.com/UKHomeOffice/docker-openjdk8-jre","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Java JRE Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-openjdk8-jre.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-openjdk8-jre)\n\nDocker container that also includes Open Java 8 *JRE* install for running production applications.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\nNormally, this would be used as a base image for a Java application.\nThe example Dockerfile below will add custom artefacts and an entrypoint to run them.\nThere is an onbuild trigger which will calls the downstream (child) docker images to upgrade the java-openjdk on each iteration\n\n```\n# Use this repo\nFROM quay.io/ukhomeofficedigital/openjdk8-jre:v0.2.0\n\n# Add application artefacts\nENV app_deploy_path=/var/lib/myapp\nCOPY my_jars/* ${app_deploy_path}/\nENTRYPOINT [\"java -jar ${app_deploy_path}/myapp.jar\"]\n\n```\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-openjdk8-jre/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-openjdk8-jre/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* [OpenJDK8](http://openjdk.java.net/projects/jdk8/)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rotm","private":false,"url":"https://github.com/UKHomeOffice/rotm","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# Report Online Terrorist Material (ROTM)\n\n[![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/rotm/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/rotm) [![Build Status](https://travis-ci.org/UKHomeOffice/rotm.svg?branch=master)](https://travis-ci.org/UKHomeOffice/rotm)\n\nThis project is built with [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap) and uses [Docker](https://www.docker.com/).\n\n## Getting started\n\nGet the project from Github\n```bash\n$ git clone git@github.com:UKHomeOffice/rotm.git && cd rotm\n```\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\n[Install Docker Compose](https://docs.docker.com/compose/install/)\n\nRun the services locally with Docker Compose\n```bash\n$ docker-compose up\n```\n\nGetting your hands dirty (You'll need [Redis](http://redis.io/) for this)\n```bash\n$ npm run dev\n```\n\nFor anything else ROTM-related, look in [package.json](./package.json) for a full list of scripts etc, and\n[config.js](./config.js) for environment variables.\n\nOtherwise, see [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap).\n","travis":true,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/scala-futures-demo","private":false,"url":"https://github.com/UKHomeOffice/scala-futures-demo","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"Scala Futures Demo\n==================\nDemo of Scala Futures at a high level - Get the basics of using Futures correctly.\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Specs\n\nIntroduction\n------------\nTODO\n\nBuild\n-----\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nHow Not to use Futures\n----------------------\nThe original Registered Traveller Customer application is a prime example of how not to use Scala Futures.\nAt the time of writing, there are some issues in the Registered Traveller Caseworker application, and we shall highlight some examples here that have been fixed.\n\nIn \"corecaseworker\" WICrossCheckDownloadServiceSpec, there was the following code:\n\n```scala\nwiCrossCheckDownloadService.generateDownload(\"tester@tester.com\")\nthere was one(crossCheckService).setCheckToInProgress(casesReadyForTravelHistory)\n\n```\n\nWhere generateDownload results in a Future[ProcessingStatus]\n\nThis was subsequently changed to:\n\n```scala\nwiCrossCheckDownloadService.generateDownload(\"tester@tester.com\") must beLike[ProcessingStatus] {\n  case ProcessingStatus(ProcessingStatus.SUCCESS, 5, 3, Nil) =>\n    there was one(crossCheckService).setCheckToInProgress(casesReadyForTravelHistory)\n}.awaitFor(10 seconds)\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ReportTerroristMaterialPrototype","private":false,"url":"https://github.com/UKHomeOffice/ReportTerroristMaterialPrototype","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# ReportTerroristMaterialPrototype\nReport Terrorist Material UX Prototype\n","travis":false,"contributing":"# Contribution guidelines\n\nWe really like contributions and bug reports, in fact the project wouldn't have got to this stage without them. \nWe do have a few guidelines to bear in mind.\n\n## GOV.UK Elements\n\nThe project contains code taken from the [GOV.UK Elements](https://github.com/alphagov/govuk_elements/) project.\nPlease check that any issues related to that code are raised with that project, not this one.\n\n## Raising bugs\n\nWhen raising bugs please explain the issue in good detail and provide a guide to how to replicate it. \nWhen describing the bug it's useful to follow the format:\n\n- what you did\n- what you expected to happen\n- what happened\n\n## Suggesting features\n\nPlease raise feature requests as issues before contributing any code.\nThis is just to ensure they are discussed properly before any time is spent on them.\n\n## Contributing code\n\n### Indentation and whitespace\n\n2-space, soft-tabs only please. No trailing whitespace.\n\n### Versioning\n\nWe use [semantic versioning](http://semver.org/), and bump the version\non master only. Please don't submit your own proposed version numbers.\n\n### Commit hygiene\n\nPlease see our [git style guide](https://github.com/alphagov/styleguides/blob/master/git.md)\nwhich describes how we prefer git history and commit messages to read.\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-selenium-local-server","private":false,"url":"https://github.com/UKHomeOffice/docker-selenium-local-server","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Selenium Server in the Background\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-selenium-local-server.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-selenium-local-server)\n\nThis docker container extends selenium server and allows you to run \nprocesses which require it locally. This is useful for tests that require \nfile uploads, which can only be done locally from the selenium server.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nThis will run anything you pass after the container. The example below will run a java application mounted from the \ncurrent directory:\n\n```shell\ndocker run -v ${PWD}:/code quay.io/ukhomeofficedigital/selenium-local-server:v0.1.2 java -jar /code/myjar.jar\n```\n\n#### Environment Variables\n\n* `LOCAL_HOSTS_ENTRY` - An entry point to a hosts file (Supports browser endpoint testing without complex whitelisting \nrules).  \n  Example: LOCAL_HOSTS_ENTRY='127.0.0.1 mywebsite.prod.gov.uk'\n\n#### Volumes\n\n* `/code` - Mount any dependencies you want to send as files to Selenium as a volume.\n* `/root/.gradle/caches` - Speeds up gradle builds when this data is mounted. \n\n## Built With\n\n* [quay.io/ukhomeofficedigital/selenium-standalone-server:v0.1.2](https://github.com/UKHomeOffice/docker-selenium-standalone-server)\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-selenium-local-server)\n* [Quay.io](https://quay.io/ukhomeofficedigital/selenium-local-server)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-selenium-local-server/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/lewismarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-selenium-local-server/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/UKHomeOffice.github.io","private":false,"url":"https://github.com/UKHomeOffice/UKHomeOffice.github.io","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# UKHomeOffice.github.io\n\nGitHub pages site for the Home Office Digital team summarising what has been open sourced.\n\nIt uses [Jekyll](https://jekyllrb.com/), see there for more usage documentation\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisities\n\nYou'll need ruby, and bundler.\n\nDownload ruby through however you prefer for you system. Bundler can be installed by gem.\n\n```\ngem install bundler\n```\n\n### Installing\n\nSimply install the dependencies\n\n```\nbundle install\n```\n\nAnd run the server\n\n```\nbundle exec jekyll serve\n```\n\nEnd with an example of getting some data out of the system or using it for a little demo\n\n## Deployment\n\nThis is deployed using [Github Pages](https://help.github.com/articles/using-jekyll-with-pages/)\n\n## Built With\n\n* jekyll\n* Github Pages\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/UKHomeOffice/UKHomeOffice.github.io/tags). \n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you \ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-java-jdk","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-java-jdk","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker MySQL Java JDK Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql-java-jdk.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql-java-jdk)\n\nDocker MySQL Container that also includes Open Java 8 *JDK* install.\nIt will start mysql in the background then run any parameters provided. \n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\nThe example below, starts the mysql instance then runs a Java (gradle) build:\n\n```\ndocker run -i --rm=true \\\n        -v ${BUILD_HOME_DIR}:/code \\\n        -e BUILD_NUMBER=${BUILD_NUMBER} \\\n        -e MYSQL_ROOT_PASSWORD=password \\\n        -v ${GRADLE_CACHE}:/root/.gradle/caches \\\n        quay.io/ukhomeofficedigital/mysql-java-jdk:v0.1.1 \\\n        ./gradlew -Dspring.datasource.username=root \\\n            -Dspring.datasource.password=${MYSQL_ROOT_PASSWORD} \\\n            -Dspring.datasource.url=jdbc:mysql://127.0.0.1/mydb \\\n            -Dliquibase.url=jdbc:mysql://127.0.0.1/mydb \\\n            -Dliquibase.user=root \\\n            -Dliquibase.password=${MYSQL_ROOT_PASSWORD} \\\n            \"$@\"\n    exit 0\nfi\n```\n\nIt extends the mysql only repository and as such, additional relevant documentation is available here:\n[Docker MySQL](https://github.com/UKHomeOffice/docker-mysql/blob/v0.5.1/README.md)\n \n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql-java/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mysql-java/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* This container is taken from the \n  [UKHomeOffice mysql docker container](https://quay.io/repository/ukhomeofficedigital/mysql).\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-maintenance","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-maintenance","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker MySQL Maintenance Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql-maintenance.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql-maintenance)\n\nThis is a one shot docker container that change your MySQL root password from the default. Optionally it can also run \nscripts and SQL after it has done this to do basic DB initialisation.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nProvide no parameters and the container will ensure the root password is set correctly and run any SQL or shell scripts \nin the directory and exit\n\n```shell\ndocker run quay.io/ukhomeofficedigital/mysql-maintenance:v0.1.0\n```\n\nProvide any other parameter and it'll execute it\n\n```shell\ndocker run quay.io/ukhomeofficedigital/mysql-maintenance:v0.1.0 echo hello\n```\n\nwill echo `hello`\n\n#### Environment Variables\n\n* `MYSQL_HOST` - Host of MySQL server\n* `MYSQL_PORT` - MySQL Port (defaults to `3306`)\n* `DEFAULT_PW` - Default password your MySQL server is started up with (defaults to `changeme`)\n* `MYSQL_PASSWORD_PATH` - Path to file with new password in\n\n#### Useful File Locations\n\n* `/docker-entrypoint-initdb.d/*.sh` - Will be executed. MySQL password and user root is already set.\n* `/docker-entrypoint-initdb.d/*.sql` - Will be ran as root mysql user\n\n#### Kubernetes Example\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    db: mysql\n    type: oneshot\n    maintenance: true\n  name: mysql-maintenance\nspec:\n  containers:\n  - image: quay.io/ukhomeofficedigital/mysql-maintenance:v0.1.0\n    name: mysql-maintenance\n    env:\n    - name: MYSQL_HOST\n      value: mymysqlserver\n    - name: MYSQL_PASSWORD_PATH\n      value: /secrets/password.txt\n    volumeMounts:\n    - mountPath: /secrets\n      name: mysql-password\n  imagePullPolicy: Always\n  restartPolicy: Never\n  volumes:\n    -\n      name: mysql-password\n      secret:\n        secretName: \"mysql-password\"\n```\n\n\n## Built With\n\n* [ukhomeofficedigital/mysql v0.5.0](https://github.com/UKHomeOffice/docker-mysql/releases/tag/v0.5.0)\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-mysql-maintenance)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/mysql-maintenance)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql-maintenance/tags). \n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/docker-mysql-maintenance/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/vault-sidekick","private":false,"url":"https://github.com/UKHomeOffice/vault-sidekick","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"[![Build Status](https://travis-ci.org/UKHomeOffice/vault-sidekick.svg?branch=master)](https://travis-ci.org/UKHomeOffice/vault-sidekick)\n[![GoDoc](http://godoc.org/github.com/UKHomeOffice/vault-sidekick?status.png)](http://godoc.org/github.com/UKHomeOffice/vault-sidekick)\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/vault-sidekick/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/vault-sidekick)\n[![GitHub version](https://badge.fury.io/gh/UKHomeOffice%2Fvault-sidekick.svg)](https://badge.fury.io/gh/UKHomeOffice%2Fvault-sidekick)\n\n### **Vault Side Kick**\n\n**Summary:**\nVault Sidekick is a add-on container which can be used as a generic entry-point for interacting with Hashicorp [Vault](https://vaultproject.io) service, retrieving secrets\n(both static and dynamic) and PKI certs. The sidekick will take care of renewal's and extension of leases for you and renew the credentials in the specified format for you.\n\n**Usage:**\n\n```shell\n[jest@starfury vault-sidekick]$ bin/vault-sidekick --help\nUsage of bin/vault-sidekick:\n  -alsologtostderr=false: log to standard error as well as files\n  -auth=\"\": a configuration file in a json or yaml containing authentication arguments\n  -cn=: a resource to retrieve and monitor from vault (e.g. pki:name:cert.name, secret:db_password, aws:s3_backup)\n  -ca-cert=\"\": a CA certificate to use in order to validate the vault service certificate\n  -delete-token=false: once the we have connected to vault, delete the token file from disk\n  -dryrun=false: perform a dry run, printing the content to screen\n  -log_backtrace_at=:0: when logging hits line file:N, emit a stack trace\n  -log_dir=\"\": If non-empty, write log files in this directory\n  -logtostderr=false: log to standard error instead of files\n  -output=\"/etc/secrets\": the full path to write the protected resources (VAULT_OUTPUT if available)\n  -stats=5m0s: the interval to produce statistics on the accessed resources\n  -stderrthreshold=0: logs at or above this threshold go to stderr\n  -tls-skip-verify=false: skip verifying the vault certificate\n  -token=\"\": the token used to authenticate to teh vault service (VAULT_TOKEN if available)\n  -v=0: log level for V logs\n  -vault=\"https://127.0.0.1:8200\": the url the vault service is running behind (VAULT_ADDR if available)\n  -vmodule=: comma-separated list of pattern=N settings for file-filtered logging\n```\n\n**Building**\n\nThere is a Makefile in the base repository, so assuming you have make and go:\n\n`$ make`\n\n**Example Usage**\n\nThe below is taken from a [Kubernetes](https://github.com/kubernetes/kubernetes) pod specification;\n\n```YAML\nspec:\n      containers:\n      - name: vault-side-kick\n        image: gambol99/vault-sidekick:latest\n        args:\n          - -output=/etc/secrets\n          - -cn=pki:project1/certs/example.com:common_name=commons.example.com,revoke=true,update=2h\n          - -cn=secret:secret/db/prod/username:file=.credentials\n          - -cn=secret:secret/db/prod/password:retries=true\n          - -cn=aws:aws/creds/s3_backup_policy:file=.s3_creds\n        volumeMounts:\n          - name: secrets\n            mountPath: /etc/secrets\n```\n\nThe above equates to:\n\n - Write all the secrets to the /etc/secrets directory\n - Retrieve a dynamic certificate pair for me, with the common name: 'commons.example.com' and renew the cert when it expires automatically\n - Retrieve the two static secrets /db/prod/{username,password} and write them to .credentials and password.secret respectively\n - Apply the IAM policy, renew the policy when required and file the API tokens to .s3_creds in the /etc/secrets directory\n - Read the template at /etc/templates/db.tmpl, produce the content from Vault and write to /etc/credentials file\n\n**Authentication**\n\nAn authentication file can be specified in either yaml of json format which contains a method field, indicating one of the authentication\nmethods provided by vault i.e. userpass, token, github etc and then followed by the required arguments for that plugin.\n\nIf the required arguments for that plugin are not contained in the authentication file, fallbacks from environment variables are used.\nEnvironment variables are prefixed with `VAULT_SIDEKICK`, i.e. `VAULT_SIDEKICK_USERNAME`, `VAULT_SIDEKICK_PASSWORD`.\n\n**Secret Renewals**\n\nThe default behaviour of vault-sidekick is **not** to renew a lease, but to retrieve a new secret and allow the previous to\nexpire, in order ensure the rotation of secrets. If you don't want this behaviour on a resource you can override using resource options. For exmaple,\nyour using the mysql dynamic secrets, you want to renew the secret not replace it\n\n```shell\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=mysql:mysql/creds/my_database:fmt=yaml,renew=true\nor an iam policy renewed every hour\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=aws:aws/creds/policy:fmt=yaml,renew=true,update=1h\n\n```\n\nOr you want to rotate the secret every **1h** and **revoke** the previous one\n\n```shell\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=aws:project/creds/my_s3_bucket:fmt=yaml,update=1h,revoke=true\n\nThe format is;\n\n-cn=RESOURCE_TYPE:PATH:OPTIONS\n```\n\nThe sidekick supports the following resource types: mysql, postgres, pki, aws, secret, cubbyhole, raw, cassandra and transit\n\n**Environment Variable Expansion**\n\nThe resource paths can contain environment variables which the sidekick will resolve beforehand. A use case being, using a environment\nor domain within the resource e.g -cn=secret:secrets/myservice/${ENV}/config:fmt=yaml\n\n**Output Formatting**\n\nThe following output formats are supported: json, yaml, ini, txt, cert, csv, bundle, env\n\nUsing the following at the demo secrets\n\n```shell\n[jest@starfury vault-sidekick]$ vault write secret/password this=is demo=value nothing=more\nSuccess! Data written to: secret/password\n[jest@starfury vault-sidekick]$ vault read secret/password\nKey            \tValue\nlease_id       \tsecret/password/7908eceb-9bde-e7de-23da-96131505214a\nlease_duration \t2592000\nlease_renewable\tfalse\ndemo           \tvalue\nnothing        \tmore\nthis           \tis\n```\n\nIn order to change the output format:\n\n```shell\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=secret:secret/password:fmt=ini -logtostderr=true -dry-run\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=secret:secret/password:fmt=json -logtostderr=true -dry-run\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=secret:secret/password:fmt=yaml -logtostderr=true -dry-run\n```\n\nFormat: 'cert' is less of a format of more file scheme i.e. is just extracts the 'certificate', 'issuing_ca' and 'private_key' and creates the three files FILE.{ca,key,crt}. The\nbundle format is very similar in the sense it similar takes the private key and certificate and places into a single file.\n\n**Resource Options**\n\n- **file**: (filaname) by default all file are relative to the output directory specified and will have the name NAME.RESOURCE; the fn options allows you to switch names and paths to write the files\n- **mode**: (mode) overrides the default file permissions of the secret from 0664\n- **create**: (create) create the resource\n- **update**: (update) override the lease time of this resource and get/renew a secret on the specified duration e.g 1m, 2d, 5m10s\n- **renew**: (renewal) override the default behavour on this resource, renew the resource when coming close to expiration e.g true, TRUE\n- **delay**: (renewal-delay) delay the revoking the lease of a resource for x period once time e.g 1m, 1h20s\n- **revoke**: (revoke) revoke the old lease when you get retrieve a old one e.g. true, TRUE (default to allow the lease to expire and naturally revoke)\n- **fmt**: (format) allows you to specify the output format of the resource / secret, e.g json, yaml, ini, txt\n- **exec** (execute) execute's a command when resource is updated or changed\n- **retries**: (retries) the maximum number of times to retry retrieving a resource. If not set, resources will be retried indefinitely\n* **jitter**: (jitter) an optional maximum jitter duration. If specified, a random duration between 0 and `jitter` will be subtracted from the renewal time for the resource\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)","masterBranchProtection":false},{"name":"UKHomeOffice/docker-vault-sidekick","private":false,"url":"https://github.com/UKHomeOffice/docker-vault-sidekick","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-tls","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-tls","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"#### **Nginx TLS Sidekick**\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-nginx-tls.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-nginx-tls)\n\nA small utility container which is responsible to rotating the certificates on a nginx proxy.\n\n```shell\nUsage: run.sh\n  -c|--confd DIRECTORY      : the path of the nginx conf.d directory (default /etc/nginx/conf.d)\n  -d|--dir DIRECTORY        : the directory which contains the certificates (default /etc/secrets)\n  -p|--proxy SPEC           : the specification for a proxy\n  -h|--help                 : display this usage menu\n```\n\n##### **Usage**\n\n```shell\n[jest@starfury docker-nginx-tls]$ make demo\nsudo docker run -ti  --name nginx-tls --rm -v /home/jest/scm/github/UKHomeOffice/docker-nginx-tls/tests:/etc/secrets gambol99/nginx-tls /run.sh -p 443:127.0.0.1:80:demo.example.com\n[v] proxy spec: '443:127.0.0.1:80:demo.example.com' is valid\n[v] reconfiguring the nginx service\n[v] configuring the nginx proxy: 443:127.0.0.1:80:demo.example.com\n[v] starting the nginx service\n[v] watching the directory: /etc/secrets for changes\n[v] /etc/secrets/ CLOSE_WRITE,CLOSE demo.example.com.crt has changed, reconfiguring the service now\n[v] reconfiguring the nginx service\n[v] configuring the nginx proxy: 443:127.0.0.1:80:demo.example.com\n[v] nginx config passed validation, reloading service\n```\n\nA proxy specification takes the form for: LISTENING_PORT:PROXY_IPADDRESS:PROXY_PORT:CERTIFICATE. Multiple endpoints can be defined by repeating the -p|--proxy command line option.\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/AlfrescoAuditAnalysis","private":false,"url":"https://github.com/UKHomeOffice/AlfrescoAuditAnalysis","license":null,"readme":"# AlfrescoAuditAnalysis\nAlfresco Audit Analysis\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/OSX-Provisioning","private":false,"url":"https://github.com/UKHomeOffice/OSX-Provisioning","license":null,"readme":"# OSX-Provisioning\n\n**Admin-setup.sh**\n\nThis script is designed to be run on a mac that is brand new, or had been rebuilt from a usb image. The script assumes the inital stages of first boot have been completed and that you have created a local admin account, are logged on and know the password for that. There should be no other accounts present, so runt his prior to creating any user accounts.\n\nThis will apply a number of security hardening settings, including applying full disk encryption wiht file vault. PLEASE make sure you make a note of the key that is shown on screen during this script running.\n\n**byod-check.sh**\n\nThis script, must be run as admin, and will check to see if a device has the required security applied. It does not change settings, only reports on them.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-sonar-mysql-maintenance","private":false,"url":"https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Sonar Maintenance Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-sonar-mysql-maintenance.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-sonar-mysql-maintenance)\n\nThis is a one shot container that will create the missing Sonar DB in your database, and also ensure the password is up \nto date (and not the default one).\n\nIf you are looking for a container that has a MySQL server running within it, that has the sonar database, see \n[UKHomeOffice/docker-mysql-sonarqube](https://github.com/UKHomeOffice/docker-mysql-sonarqube).\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nProvide no parameters and the container will ensure the root password is set correctly and create the Sonar database.\nin the directory and exit\n\n```shell\ndocker run quay.io/ukhomeofficedigital/sonar-mysql-maintenance:v0.1.0\n```\n\nProvide any other parameter and it'll execute it\n\n```shell\ndocker run quay.io/ukhomeofficedigital/sonar-mysql-maintenance:v0.1.0 echo hello\n```\n\nwill echo `hello`\n\n#### Environment Variables\n\n* `MYSQL_HOST` - Host of MySQL server\n* `MYSQL_PORT` - MySQL Port (defaults to `3306`)\n* `DEFAULT_PW` - Default password your MySQL server is started up with (defaults to `changeme`)\n* `MYSQL_PASSWORD_PATH` - Path to file with new password in\n\n#### Kubernetes Example\n\nSee the [kb8 directory](kb8)\n\n## Built With\n\n* [UKHomeOffice/docker-mysql-maintenance v0.1.0](https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance/releases/tag/v0.1.0)\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance)\n* [Quay.io](https://quay.io/ukhomeofficedigital/sonar-mysql-maintenance/docker-repository)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance/tags). \n\n## Authors\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-logstash-kubernetes","private":false,"url":"https://github.com/UKHomeOffice/docker-logstash-kubernetes","license":null,"readme":"# docker-logstash-kubernetes\n\nLogstash container for pulling docker logs with kubernetes metadata support.\nAdditionally logs are pulled from systemd journal too.\n\nLogstash tails docker logs and extracts `pod`, `container_name`, `namespace`,\netc. The way this works is very simple. Logstash looks at an event field which\ncontains full path to kubelet created symlinks to docker container logs, and\nextracts useful information from a symlink name. No access to Kubernetes API\nis required.\n\nOther outputs can be added in the future.\n\n## Requirements\n\nYou need to have kubelet process running on the host. Normally kubelet creates\nsymlinks to container logs from `/var/log/containers/` to\n`/var/lib/docker/containers/`. So for that you need to make sure that logstash\nhas access to both directories.\n\nFor logstash to be able to pull logs from journal, you need to make sure that\nlogstash can read `/var/log/journal`.\n\nAlso, logstash writes `sincedb` file to its home directory, which by default is\n`/var/lib/logstash`. If you don't want logstash to start reading docker or\njournal logs from the beginning after a restart, make sure you mount\n`/var/lib/logstash` somewhere on the host.\n\n## Configuration\n\nAs usual, configuration is passed through environment variables.\n\n- `LS_HEAP_SIZE` - logstash JVM heap size. Defaults to `500m`.\n- `LS_LOG_LEVEL` - Logstash log level. Default: `error`.\n- `LS_PIPELINE_BATCH_SIZE` - Size of batches the pipeline is to work in. Default: `125`\n- `INPUT_JOURNALD` - Enable logs ingestion from journald. Default: `true`.\n- `INPUT_KUBERNETES_AUDIT` - Enable kubernetes audit logs ingestion. Default: `true`.\n- `OUTPUT_ELASTICSEARCH` - Enable logs output to ElasticSearch. Default `true`.\n- `ELASTICSEARCH_FLUSH_SIZE` - Bulk index flush size. Default: `500`\n- `ELASTICSEARCH_IDLE_FLUSH_TIME` - Bulk index idle flush time in seconds. Default: `1`\n- `ELASTICSEARCH_HOST` - ElasticSearch host, can be comma separated. Default: `127.0.0.1:9200`.\n- `ELASTICSEARCH_SSL_ENABLED` - Elasticsearch SSL flag. Default: `false`.\n- `ELASTICSEARCH_CA_CERTIFICATE_PATH` - The path to the .pem file that contains the Certificate Authority’s certificate.\n- `ELASTICSEARCH_CERTIFICATE_VERIFICATION` - Elasticsearch SSL cerificate verification. Default: `true`.\n- `ELASTICSEARCH_USER` - Elasticseach basic auth username. Default: `\"\"`.\n- `ELASTICSEARCH_PASSWORD` - Elasticsarch basic auth password. Default: `\"\"`.\n- `ELASTICSEARCH_INDEX_SUFFIX` - ElasticSearch index suffix. Default: `\"\"`.\n- `LOGSTASH_ARGS` - Sets additional logstash command line arguments.\n\n\n## Running\n\n```\n$ docker run -ti --rm \\\n    -v /var/lib/logstash-kubernetes:/var/lib/logstash:z \\\n    -v /var/log/journal:/var/log/journal:ro \\\n    -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n    -v /var/log/containers:/var/log/containers:ro \\\n    -e ELASTICSEARCH_HOST=my-est-host.local:9200 \\\n    quay.io/ukhomeofficedigital/logstash-kubernetes:v0.4.0\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-landscaper-server","private":false,"url":"https://github.com/UKHomeOffice/docker-landscaper-server","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Ubuntu LandScape Docker Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-landscape-server.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-landscape-server)\n\nThis container runs the Ubuntu landscape server components\n\n#Requirements\n\n- Landscape requires a postgres 9.3/9.4 server with plpython and the debversion modules installed\n- A rabbitmq server is also required as the message bus between the various components\n\n#TLS\n\nThere is a placeholer certificate in the files/certs directory which gets added to the container and used by apache for the SSL endpoint.\n\nThis has a common name of 'landscape-server'.\nThis should be replaced with a valid certificate and key\n\n#Running locally\n\nThere is a docker compose file which will bring up a landscape server,\nthis will bring up the landscape server on port 80/443 on your docker host\n```\ndocker-compose build\ndocker-compose up\n```\n\nIt does the following:\n## Postgres database server\nCreate a postgres container based off of the official 9.4 version with plpython and debversion installed\n\n```\ndocker build -t postgres .\ndocker run -d --name postgres -e POSTGRES_PASSWORD=password postgres\n```\n\n## Rabbitmq server\nCreate a rabbitmq container that will be linked in, which has the management module enables so you can \naccess it via a web console\n\n```\ndocker run -d --name rabbitmq -p 15672:15672 rabbitmq:3-management\n```\n\n## Landscape container creation\nThen it build the landscape container, this container is based on ubuntu:14.04, this will link the postgres container into the landscape container and use that, if you have an external postgres instance you would just set the variables that are required\n\n```\ndocker build -t landscape-server\ndocker run -d --link postgres:postgres --link rabbitmq:rabbitmq -e INITIALIZE_SCHEMA=yes -e DB_USER=postgres -e DB_PASS=password -e DB_LANDSCAPE_PASS=password -p 80:80 -p 443:443 landscape-server\n```\n\n### Valid commands for the landscape container\n- app:schema - This will create the landscape user and schema but not start the application\n- app:start - This starts the application, this is also the default action\n\n#Variables that can be set\n\n| Variable             | Default   | Usage  |\n| -------------------- | --------- | ------ |\n| STARTUP_WAIT_TIME    | empty     | Wait number of seconds before starting process, useful for waiting for other services to come up |\n| INITIALIZE_SCHEMA    | empty     | If set this will create the database schema or confirm it is valid |\n| DB_HOST              | empty     | The postgres server hostname |\n| DB_PORT              | 5432      | The postgres server port |\n| DB_LANDSCAPE_PASS    | password  | The landscape user password |\n| DB_USER              | landscape | The postgres super user, this user is used for schema creation|\n| DB_PASS              | landscape | The postgres super user password |\n| DB_NAME              | postgres  | The default database name for testing connectivity |\n| RMQ_HOST             | empty     | The rabbitmq server hostname |\n| RMQ_PORT             | 5672      | The rabbitmq server amqp port |\n| RMQ_USER             | guest     | The rabbitmq user |\n| RMQ_PASS             | guest     | The rabbitmq password |\n| RMQ_VHOST            | default   | The vhost to be used by the message broker |\n","travis":true,"contributing":"# Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-elasticsearch","private":false,"url":"https://github.com/UKHomeOffice/docker-elasticsearch","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# ElasticSearch on Kubernetes\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-elasticsearch.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-elasticsearch)\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/elasticsearch/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/elasticsearch)\n\nElasticSearch 5.5.1 with kubernetes discovery plugin for simple deployment and\ndiscovery.\n\n### Configuration\nConfiguration is done via environment variables.\n\nThe following configuration defaults may not necessarily be set to the same\nvalues in [kube/](kube/) example files.\n\n* `CLUSTER_NAME`: ElasticSearch cluster name. Default: `elasticsearch`.\n* `NODE_NAME`: Node name. Default: `${HOSTNAME}` (kubernetes assigned pod name by default).\n* `NODE_LOCAL`: If set to true it will prevent the elasticsearch node from discovering other nodes on the network. Default: `false`.\n* `PATH_DATA`: Path where ES stores its data. Default: `/data`.\n* `ELASTIC_SEARCH_HEAP_SIZE`: JVM heap size. Default: `450m`. If you adjust this parameter,\n  make sure to increase container limits as well.\n* `INDEX_AUTO_EXPAND_REPLICAS`: Whether to automatically expand index replicas\n  across data nodes. Default: `false`.\n* `INDEX_NUMBER_OF_SHARDS`: The default number of primary shards for each index. Default: `5`.\n* `INDEX_NUMBER_OF_REPLICAS`: The number of replicas per shard that an index should create. Default `1`.\n* `INDEX_REFRESH_INTERVAL`: How often to refresh indexes. Default: `1s`.\n* `GATEWAY_EXPECTED_MASTER_NODES` - See https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html\n* `GATEWAY_EXPECTED_DATA_NODES` - See https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html\n* `NODE_MASTER`: Whether this node can be a master node. Default: `true`.\n* `NODE_DATA`: Whether this node can be a data node. Default: `true`.\n* `NODE_INGEST`: Whether this node can be a data ingesting node. Default: `true`.\n* `HTTP_ENABLE`: Whether this node can be a client (HTTP) node. Default: `true`.\n* `HTTP_BIND_HOST`: http bind address.. Default: `0.0.0.0`.\n* `KUBERNETES_SERVICE`: kubernetes service name for master nodes. Default `elasticsearch-master`.\n* `ENABLE_TRANSPORT_SSL`: whether to enable search-guard transport SSL. Default: `false`.\n* `DISCOVERY_TYPE`: The type of discovery for your cluster to use. Default `kubernetes`.\n* `DISCOVERY_ZEN_FD_PING_INTERVAL` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#fault-detection\n* `DISCOVERY_ZEN_FD_PING_TIMEOUT` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#fault-detection\n* `DISCOVERY_ZEN_FD_PING_RETRIES` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#fault-detection\n* `DISCOVERY_ZEN_PUBLISH_TIMEOUT` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#_cluster_state_updates\n* `DISCOVERY_ZEN_MINIMUM_MASTER_NODES` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#master-election. Default: `1`\n* `THREAD_POOL_BULK_QUEUE_SIZE` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-threadpool.html\n* `INDEX_BUFFER_SIZE` - see https://www.elastic.co/guide/en/elasticsearch/reference/5.1/indexing-buffer.html\n* `XPACK_SECURITY_ENABLE` - Whether X-Pack security plugin is enabled. Default: `false`\n* `XPACK_SECURITY_AUDIT_ENABLE` - Whether to enable auditing to keep track of attempted and successful interactions with Elasticsearch cluster. Default: `false`.\n* `XPACK_SECURITY_AUDIT_OUTPUT` - The output for audit data. Default: `logfile`. Possible options: `index`, 'logfile'.\n* `XPACK_SECURITY_TRANSPORT_SSL_ENABLE` - Whether to enable transport SSL. Default: `false`\n* `XPACK_SECURITY_HTTP_SSL_ENABLE` - Whether to enable HTTP SSL. Default: `false`\n* `XPACK_SSL_KEY_PATH` - The full path to the node key file. This must be a location within the Elasticsearch configuration directory. \n* `XPACK_SSL_CERT_PATH` - The full path to the node certificate. This must be a location within the Elasticsearch configuration directory.\n* `XPACK_SSL_CA_CERT_PATH` -  Path to the CA certificate that should be trusted. This path must be a location within the Elasticsearch configuration directory.\n* `XPACK_MONITORING_ENABLE` - Whether to enable X-Pack monitoring features. Default: `false`.\n* `XPACK_ML_ENABLE` - Whether to enable X-Pack machine learning features. Default: `false`.\n* `XPACK_WATCHER_ENABLE` - Whether to enable X-Pack Watcher. Default: `false`.\n\n\n### Plugins\n#### Kubernetes Discovery\nFor more kubernetes discovery plugin related options, see\nhttps://github.com/fabric8io/kubernetes-client. Our examples use just a\nstandard kubernetes auth token to authenticate against the kubernetes API for\ndiscovery.\n\n#### Search Guard SSL\nIf you want to use transport TLS, please take a look at their documentation\nhttps://github.com/floragunncom/search-guard-ssl.\n\nElasticSearch expects `truststore.jks` and `keystore.jks` files to be placed in\n`/elasticsearch/config/certs`. Keystore cert/key alias must be `cert` and\ntruststore alias - `ca`. Bare in mind that certs need to be signed by the same\nCA. If you use vault, then take a look at\nhttps://github.com/UKHomeOffice/vaultjks, which could help you to get your\ncerts from vault and create keystore files.\n\n\n### Deployment\nBy default if you start the docker container, ElasticSearch will start in\nstandalone mode.\n\nDeploying onto a Kubernetes cluster is fairly easy. There are example\nkubernetes controller and service files in [kube/](kube/) directory.\n\n\n#### Deploy Master Node\nFirst of all we need to deploy master service for ES master nodes to find each\nother and other communications between nodes. Then we can create the master\nreplication controller.\n\n```bash\n$ kubectl create -f kube/es-master-svc.yaml\n$ kubectl create -f kube/es-master-rc.yaml\n```\n\nWait a few seconds and verify whether it is up and running. You can also scale\nthe master nodes to 3.\n\n```bash\n$ kubectl logs -f es-master-fdfw -c elasticsearch\n$ kubectl scale --replicas=3 rc/es-master\n```\n\n#### Deploy Client and Data Nodes\nOnce the master node is up and running, you can start deploying the rest of the cluster.\n\n```bash\n$ kubectl create -f kube/es-svc.yaml\n$ kubectl create -f kube/es-client-rc.yaml\n$ kubectl create -f kube/es-data-rc.yaml\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-proxy-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-proxy-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"RTP Proxy Library\n=================\n\nScala Spray library to proxy request/response between client and server\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- Spray\n\nIntroduction\n------------\n![alt text](docs/your-service.png \"Your service\")\n\nYou want to call another service either securely or not, but you've been told you cannot do this directly - you need a proxy in the middle.\n\nrtp-proxy-lib acts as either a proxy - it could be a dumb proxy or maybe one that makes SSL connections.\n\nLet's take the example of communicating with another service over SSL.\n\n![alt text](docs/your-service-with-proxy.png \"Your service with proxy\")\n\nApplication\n-----------\nThis module is configured as per any Akka application, where the default configuration file is \"application.conf\".\nThis default file can be overridden with other \"conf\" files or system properties and then given to the application upon boot with the following example Java option:\n```bash\n-Dconfig.file=test-classes/application.test.conf\n```\n\nIndividual configuration properties can be overridden again by Java options e.g. to override which Mongodb to connect e.g.:\n```bash\n-Dmy.foo=blah\n```\n\nwhere this overrides the default in application.conf.\n\nBooting the application (uk.gov.homeoffice.rtp.proxy.Boot) exposes a RESTful API to act as a proxy to the real API e.g. the following URL could be given in a browser, a browser's REST client plugin or curl:\n```bash\nhttp://localhost:9300/blah\n```\n\nthis would get back some appropriate response for some existing API.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```bash\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```bash\nbrew install typesafe-activator\n```\n\nTo compile:\n```bash\nsbt compile\n```\n\nor\n```bash\nactivator compile\n```\n\nTo run the specs:\n```bash\nsbt test\n```\n\nTo actually run the application, first \"assemble\" it:\n```bash\nsbt assembly\n```\n\nThis packages up an executable JAR - Note that \"assembly\" will first compile and test.\n\nThen just run as any executable JAR, with any extra Java options for overriding configurations.\n\nFor example, to use a config file (other than the default application.conf) which is located on the file system (in this case in the boot directory)\n```bash\njava -Dconfig.file=test-classes/my-application.conf -jar <jar name>.jar\n```\n\nNote that the log configuration file could also be included e.g.\n```bash\n-Dlogback.configurationFile=path/to/my-logback.xml\n```\n\nAnd other examples:\n\nbooting from project root:\n```bash\njava -Dspray.can.server.port=8080 -jar target/scala-2.11/<jar name>.jar\n```\n\nand running from directory of the executable JAR using a config that is within said JAR:\n```bash\njava -Dconfig.resource=application.uat.conf -jar <jar name>.jar\n```\n\nFinally you can perform a quick test of the application by calling one of the monitor API e.g. making a cURL call to the application:\n```bash\ncurl http://localhost:9300/proxy-server \n```\n\nExample Usage\n-------------\nProxying can be just a dumb proxy or it can use certificates to create a SSL connection.\nThere are examples in the code e.g. regarding SSL the application configuration would be similar to:\n```scala\nspray {\n  can {\n    server {\n      name = \"your-service-spray-can\"\n      host = \"0.0.0.0\"\n      port = 9300\n      request-timeout = 5 minutes\n      idle-timeout = 10 minutes\n      service = \"http-routing-service\"\n      remote-address-header = on\n      ssl-tracing = on\n    }\n\n    client {\n      ssl-tracing = on\n      request-timeout = 5 minutes\n    }\n  }\n}\n\nproxied {\n  server {\n    host = \"localhost\"\n    port = 8443\n  }  \n}\n\nssl {\n  keystore {\n    type = \"jks\"\n    path = \"classpath:test.keystore\"\n    password = \"password\"\n  }\n\n  truststore {\n    type = \"jks\"\n    path = \"classpath:test.keystore\"\n    password = \"password\"\n  }\n}\n```\nThe \"proxied.server\" is the host and port of the service that you would normally connected to, but now that service will be proxied.\nIf the proxy is to make SSL connections to \"some service\" then you must configure where this proxy will acquire the necessary certificates and you must \"boot\" the proxy using SSLProxying instead of the default Proxying.\n\nAnd a \"boot\" object would be required for your proxy such as:\n```scala\nobject ExampleBootSSL extends App {\n  val config = ConfigFactory.load(\"application.example.ssl.conf\")\n\n  val proxiedServer = ProxiedServer(config.getString(\"proxied.server.host\"), config.getInt(\"proxied.server.port\"))\n\n  val server = Server(config.getString(\"spray.can.server.host\"), config.getInt(\"spray.can.server.port\"))\n\n  implicit val system = ActorSystem(\"rtp-proxy-ssl-example-spray-can\", config)\n\n  sys.addShutdownHook {\n    system.terminate()\n  }\n\n  SSLProxying(sslContext(config)).proxy(proxiedServer, server)\n}\n```\n\nWe can cURL the application (assuming that some service is being proxied) e.g.\n```bash\ncurl -ki http://localhost:9300\n```\nwhere -k command line argument turns off SSL certificate verification.\n\nOr where the certificate is passed along with the cURL command so a complete SSL certificate verification takes place:\n```bash\ncurl -i --cacert src/main/resources/test-certificate.crt https://localhost:9300\n```\n\nNote, that there is a built in health endpoint for the proxy itself:\n```\ncurl -ki http://localhost:9300/proxy-server\n```\n\nNOTE about timeouts.\nTimeout of requests defaults to 30 seconds. To override this in an application.conf, declare something like:\n````\nproxied.request-timeout = 1 minute\n```\n\nwhere you can use the likes of second, seconds, minute, minutes, hour etc.\n\nSSL\n---\nGenerate x509 certificate and private key:\n```bash\nopenssl req \n        -x509 \n        -sha256 \n        -newkey rsa:2048 \n        -keyout test-certificate.key \n        -out test-certificate.crt \n        -days 100000 \n        -nodes\n```\n\nOn JVM platform the goal is to have a Java keystore (JKS), a repository of security certificates.\nTo import our newly generated certificate into JKS, we have to export it in PKCS12 format and then create keystore out of it:\n```bash\nopenssl pkcs12 \n        -export \n        -in test-certificate.crt \n        -inkey test-certificate.key \n        -out test-keystore.p12 \n        -name test-keystore \n        -password pass:password\n\nkeytool -importkeystore \n        -srcstorepass password \n        -destkeystore test.keystore \n        -deststorepass password \n        -srckeystore test-keystore.p12 \n        -srcstoretype PKCS12 \n        -alias test-keystore\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/removals_wallboard","private":false,"url":"https://github.com/UKHomeOffice/removals_wallboard","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Removals Wallboard\n\n[![Build](https://travis-ci.org/UKHomeOffice/removals_wallboard.png)](https://travis-ci.org/UKHomeOffice/removals_wallboard)\n\n## Quickstart:\n\n Get [NodeJS](https://nodejs.org) via [nvm](https://github.com/creationix/nvm)\n```sh\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\n```\n\n#### Install NodeJS 4 LTS\n```sh\n$ nvm install 4\n$ nvm use 4\n```\n### Build:\n```sh\n$ npm install\n```\n### Test:\n```sh\n$ npm test\n```\n### CI Test:\n```sh\n$ npm test\n```\n### Start development service using localhost keycloak and localhost backend\n```sh\n$ npm start\n```\n### Build service to localhost\n```sh\n$ npm run build\n```\n## Environment variables\n\n| VAR | OPTION | RESULT |\n| --- | ------ | ------ |\n| BACKEND | [string] | backend to use |\n| KEYCLOAKURL | [string] | keycloak login url |\n| CLIENTID | [string] | keycloak client id |\n| KEYCLOAKACCOUNTSERVICE | [string] | url to use for managing the user's keycloak account |\n| PORT | [integer] | port to run nginx server on |\n\n## Docker\nCan be built and run in the same way with docker for example:\n```sh\n$ docker build -t ibm-frontend .\n$ docker run -i -e \"BACKEND=localhost:8000\" ibm-frontend\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/removals_schema","private":false,"url":"https://github.com/UKHomeOffice/removals_schema","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Bed Space Management Interface Control Document and schema\n\n[![Build](https://travis-ci.org/UKHomeOffice/removals_schema.png)](https://travis-ci.org/UKHomeOffice/removals_schema)\n\n## Purpose and Scope\nThis document describes the interface between IRC Bed Management and its data providers\nThe purpose of the document is to detail the interactions available between each IRC platform and the Home Office dashboard for Bed Allocation by DEPMU and describes the metadata and security arrangements for the data.\n\n## OWNERSHIP AND CONTROL\n\n### ICD Ownership\nThis ICD is currently owned by Home Office Digital on behalf of the IDP.\n\n### ICD Maintenance Policy\nProposed changes to this ICD and schema will be managed via [Github pull requests](https://help.github.com/articles/using-pull-requests/)\nAny material change to this ICD will need to be approved by the HO change control process.\nNon-material changes such as spelling mistakes of clarifications of existing capabilities do not require the HO change control process.\n\n\n## Interface Context\n\n### Business Context\nThe aim of this interface is to support the processing of updates of bed occupancy and events logged in the IRCs that DEPMU operate.\nThe business require a technology that will aggregate, store and display data in a secure manner that is highly resilient and available.\n\n### Conceptual Architecture Diagram\n\nProgramming interactions between IRCs and the DEPMU Bed Management Dashboard will be through a common API. \n\n[diagram]\n![Conceptual Architecture Diagram](./assets/architecture_diagram.png)\n\nThe API presents the following HTTP endpoints:\n- `/irc_entry/event`\n- `/irc_entry/heartbeat`\n\n## Event API\nInvoked on the following events by the IRC:\n\n1. When a detainee checked in IRC.\n1. When a detainee checked out IRC.\n1. When a bed becomes out of operation.\n1. When a bed returns into operation.\n1. When a detainee is moved between moved between two sites by the IRC.\n1. When a detainee is reinstated.\n1. When a detainee cid/gender/nationality is updated.\n\n##### Process flow:\n- Capture the data required as described in the schema\n- Validate data with the [schema](./event.json)\n- Submit to the correct endpoint (as provided to the provider) over HTTPS/TLS\n- Should an error occur submitting, queue the event, and retry the queue at `1 minute` intervals raising exceptions to the relevant support party so that it can be addressed and monitored\n  - timeout should be set to 5 seconds\n  - `3xx` redirects should be followed\n  - should a `4xx` or `5xx` error occur, \n  - consider ultimately anything (after any redirects) that result in a non `2xx` status code to be an error\n\n## Heartbeat API\nThe purpose of this is to provide always up to date bed occupation and out of commission information.\n\nInvoked at `1 minute` intervals.\n##### Process flow:\n- Capture the data required as described in the schema\n- Validate data with the [schema](./heartbeat.json)\n- Submit to the correct endpoint (as provided to the provider) over HTTPS/TLS\n- Should an error occur submitting *do not queue* and raise the exception to the relevant support party so that it can be addressed and monitored.\n  - Timeout should be set to 5 seconds\n  - `3xx` redirects should be followed\n  - Consider ultimately anything (after any redirects) that result in a non `2xx` status code to be an error\n\n# Utilities\nIn this repository you will also find a tool that can be used to generate fake data which can be useful for testing and exploring the schema.\n### To output 10 events to stdout\n```shell\nnode generate.js event.json 10\n```\n### To output 10 heartbeats to stdout\n```shell\nnode generate.js heartbeat.json 10\n```\nYou can also include tagged releases of the repository in your application.\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ges-proxy-service","private":false,"url":"https://github.com/UKHomeOffice/ges-proxy-service","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"GES Proxy Service\n=================\n\nScala Spray service to proxy request/response between client and server\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- Spray\n\nIntroduction\n------------\nTODO\n\nApplication\n-----------\nThe application is configured as per any Akka application, where the default configuration file is \"application.conf\".\nThis default file can be overridden with other \"conf\" files and then given to the application upon boot with the following example Java option:\n```bash\n-Dconfig.file=test-classes/application.test.conf\n```\n\nIndividual configuration properties can be overridden again by Java options e.g. to override which Mongodb to connect (if Mongo required configuring):\n```bash\n-Dmongo.db=some-other-mongo\n```\n\nwhere this overrides the default in application.conf.\n\nBooting the application (uk.gov.homeoffice.rtp.proxy.Boot) exposes a RESTful API to act as a proxy to the real API e.g. the following URL could be given in a browser, a browser's REST client plugin or curl:\n```bash\nhttp://localhost:9300/blah\n```\n\nthis would get back some appropriate response for some existing API.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```bash\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```bash\nbrew install typesafe-activator\n```\n\nTo compile:\n```bash\nsbt compile\n```\n\nor\n```bash\nactivator compile\n```\n\nTo run the specs:\n```bash\nsbt test\n```\n\nNote: Do not turn off the CONSOLE logging in test/resources/logback.xml as there are Specs that rely on this\n\nTo actually run the application, first \"assemble\" it:\n```bash\nsbt assembly\n```\n\nThis packages up an executable JAR - Note that \"assembly\" will first compile and test.\n\nThen just run as any executable JAR, with any extra Java options for overriding configurations.\n\nFor example, to use a config file (other than the default application.conf) which is located on the file system (in this case in the boot directory)\n```bash\njava -Dconfig.file=test-classes/my-application.conf -jar <jar name>.jar\n```\n\nNote that the log configuration file could also be included e.g.\n```bash\n-Dlogback.configurationFile=path/to/my-logback.xml\n```\n\nSo a more indepth startup with sbt itself could be:\n```bash\nsbt run -Dconfig.file=target/scala-2.11/test-classes/application.test.conf -Dlogback.configurationFile=target/scala-2.11/test-classes/logback.test.xml\n```\n\nAnd other examples:\n\nbooting from project root:\n```bash\njava -Dspray.can.server.port=8080 -jar target/scala-2.11/<jar name>.jar\n```\n\nand running from directory of the executable JAR using a config that is within said JAR:\n```bash\njava -Dconfig.resource=application.uat.conf -jar <jar name>.jar\n```\n\nFinally you can perform a quick test of the application by calling one of the monitor API e.g. making a cURL call to the application:\n```bash\ncurl http://localhost:9300/proxy-server \n```\n\nand to check the connection between the proxy and SOAP service:\n```bash\ncurl -X GET localhost:9300/soapservice/GesService?wsdl\n```\n\nSBT - Revolver\n--------------\nsbt-revolver is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nSee https://github.com/spray/sbt-revolver\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nGatling - Performance (Integration) Testing\n-------------------------------------------\nPerformance tests are under src/it, and test reports are written to the \"target\" directory.\n\nTo execute Gatling performance integration tests from withing SBT:\n```bash\ngatling-it:test\n```\n\nNote that as Gatling tests are integration tests, then a ges-proxy-service must be running.\nWhen running the proxy locally, the global-entry-stub should be started, where both applications run in either SSL or non-SSL mode.","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-clamav","private":false,"url":"https://github.com/UKHomeOffice/docker-clamav","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker ClamAV\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-clamav.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-clamav)\n\nDocker container for starting a [ClamAV](http://www.clamav.net/) daemon.\n\n## Getting Started\n\nThese instructions will cover how to start a container both in Docker and within a [Kubernetes](http://kubernetes.io/) cluster.\n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nOptionally:\n\n* A [Kubernetes](http://kubernetes.io/) cluster to enable Kubernetes api discovery of other nodes.\n\n### Usage\n\nThe example below will start a single ClamAV instance.\n\n```\ndocker run --name clamav -d -p 3310:3310 quay.io/ukhomeofficedigital/clamav:v0.1.0\n```\n\nTo use with [Kubernetes](http://kubernetes.io/) see the [kubernetes examples](examples/kubernetes.md).\n\n\n#### Environment Variables\n\nThe variables and the defaults are shown below.\nBy default, the container does not depend on [Kubernetes](http://kubernetes.io/). \n\n* `CLAMD_SETTINGS_CSV=\"LogVerbose yes,VirusEvent /custom_alert.sh\"` See [clamd.conf](http://linux.die.net/man/5/clamd.conf) for more details  \n  and see [./clamd.conf](./clamd.conf) for the default settings.  \n  To use specify a CSV of settings as they would apear in the config file e.g. `\"CLAMD_SETTINGS_CSV=Setting value\"`\n  Note, clamd has already been configured appropriately for a container but some useful settings include:    \n  * `VirusEvent /path/to/alert_script.sh` If mounted in the container, will provide a custom alert facility\n  * `LogClean yes` Will log every scan performed\n* `FRESHCLAM_SETTINGS_CSV=\"LogVerbose yes\"` See [freshclam.conf](http://linux.die.net/man/5/freshclam.conf) for more details  \n  and see [./freshclam.conf](freshclam.conf) for the default settings. See above for how this works.  \n* `UPDATE=true` (default) will start freshclam daemon in background to watch for update antivirus definitions  \n  `UPDATE=false` will watch for first successful update from separate sidecar container before starting\n* `UPDATE_ONLY=true` configure as a sidecar container and run the update process in the foreground  \n  `UPDATE_ONLY=false` (default) will run clamd and freshclam as normal.  \n  \n#### Ports\n\nThis container exposes:\n\n* `3310` - Access the [Clam AV API](http://linux.die.net/man/8/clamd).\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-clamav/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-clamav/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* http://www.clamav.net/\n\n## TODO:\n\n* Ensure the DB access doesn't need to be for user 999 (so the volume can be mounted)...\n* Long startup time, see point above.\n* Add testing for Travis","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-static-haproxy","private":false,"url":"https://github.com/UKHomeOffice/docker-static-haproxy","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Static HAProxy Docker Container\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/static-haproxy/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/static-haproxy)\n\nThis container aims to be a generic and very basic tcp proxy service with static backends, i.e. not fancy service discovery here :-). You can specify\nvia the command line multiple proxies\n\n## Getting Started\n\nIn this section I'll show you some examples of how you might run this container with docker.\n\n### Prerequisities\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n## Usage\n\n```shell\nUsage: haconfig [options]\n    -p, --proxy SPEC                 a proxy specification for the haproxy\n    -d, --dryrun                     perform dryrun, i.e. just show the resulting configuration\n    -t, --template TEMPLATE          the path to the haproxy template erb\n    -h, --help                       display this usage menu\n```\n\nSo to create a load balancer on 127.0.0.1:8080 going to endpoints 10.50.10.100:3499,10.50.10.101:3499\n\n```shell\n[jest@starfury docker-static-haproxy]$ \tdocker run -ti --rm --net=host ukhomeofficedigital/static-haproxy -p 127.0.0.1:6443,10.50.10.100:3499,10.50.10.101:3499\n```\n\nNote: you can specify multiple proxies by repeating the -p switch.\n\n### Useful File Locations\n\n* `haproxy.conf.erb` is stored at `/etc/haproxy/haproxy.conf.erb`\n\n### Examples\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-static-haproxy)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/docker-static-haproxy)\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n## Authors\n\n* **Rohith Jayawardene** - *Initial work* - [gambol99](https://github.com/gambol99)\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/docker-static-haproxy/graphs/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/myproject","private":false,"url":"https://github.com/UKHomeOffice/myproject","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/email-api","private":false,"url":"https://github.com/UKHomeOffice/email-api","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Email API\n\n[![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Femail-api.svg)](https://badge.fury.io/gh/ukhomeoffice%2Femail-api) [![Build Status](https://travis-ci.org/UKHomeOffice/email-api.svg?branch=master)](https://travis-ci.org/UKHomeOffice/email-api) [![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/email-api/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/email-api) [![Codacy Badge](https://api.codacy.com/project/badge/grade/8fad759d912b4a5793dfd101e71861f8)](https://www.codacy.com/app/purplebooth/email-api)\n\nThis is an service that will allow you to send templated emails via a RESTful API. \n\n## Getting Started\n\nThese instructions will cover usage information for developing stand alone, and running the docker container.\n\n### Clients\n\n#### Java Email Api Client\n\nClient Generated from the swagger file from this API.\n\nIncludes MVN and Gradle imports, for easy inclusion\n\n[[github](https://github.com/UKHomeOffice/email-api-client-java)] [[jitpack](https://jitpack.io/#UKHomeOffice/email-api-client-java)]\n\n#### JavaScript swagger-client (Swagger JS library)\n\nThis is the official Swagger javascript client for use with swagger enabled APIs (such as this one). Simply provide is the swagger.json ('yourhost:8080/swagger.json' on this project), to have a working client.\n\n[[npm](https://www.npmjs.com/package/swagger-client)]\n\n### Usage\n\nThe first step to using this API is to create some templates for it to use. To do this we use \n[freemarker](http://freemarker.org/). An example of this is below.\n\n```freemarker\nHello ${user},\n\nYou have received a test email.\n\nFrom\nThe Email API.\n```\n\nThe location that this application looks for templates is set in the `TEMPLATE_PATH` environment variable. \n\nThe template is then referred to by the filename when we try to load it. If we were to put it as \"test-text\" in the \ndirectory referred to by that environment variable, we could use it like below.\n\nIt's worth mentioning that this email service will send an MIME email with both text and html sections. The Html \ntemplates work in the exact same way, and you could even use the same template for both if you really wanted to. Below \nis an example of that.\n\n\n\nTo send the email, send a http `POST` request to the email service `http://localhost:8080/outbound` (assuming you're \nrunning the service at localhost on the default port).\n\n```json\n{\n  \"sender\": \"example@example.org\",\n  \"subject\": \"Subject of the email\",\n  \"htmlTemplate\": \"test-html\",\n  \"textTemplate\": \"test-text\",\n  \"variables\": {\"user\":\"user\"},\n  \"recipients\": [\n    \"test@example.com\"\n  ]\n}\n```\n\nThis will send an email.\n\nMost of these are self explanatory, however I just want to mention that the \"variables\" parameter can contain any JSON,\ndata, including objects, and arrays (on top of normal things like Numbers and Strings).\n\nIf you had made your email template the same as the one below, you should get an email which looks like the one below.\n\n```\nto: test@example.com\nfrom: example@example.org\nSubject: Subject of the email\n\nHello ${user},\n\nYou have received a test email.\n\nFrom\nThe Email API.\n```\n\nFor further documentation and a test client see the swagger documentation at `http://localhost:8080/swagger` \n\n### Running Stand Alone\n\nYou can run this application as a stand alone Java application\n\n#### Building\n\nThe tests will be automatically ran.\n\n```shell\n./gradlew install\n```\n\n#### Running\n\nWe configure the application through environment variables. See below.\n\n```shell\nSMTP_REQUIRE_TSL=false \\\nSMTP_START_TSL_ENABLED=false \\\nSMTP_ON_SSL_CONNECT=false \\\nSMTP_PASSWORD=\"\" SMTP_USERNAME=\"\" \\\nSMTP_PORT=1025 \\\nSMTP_HOSTNAME=localhost \\\nTEMPLATE_PATH=/tmp \\\n./build/install/email-api/bin/email-api server src/main/resources/configuration.yaml \n```\n\nMore details on these environment variables can be found in the docker section.\n\n#### Tests\n\n```shell\n./gradlew test\n```\n\n### Docker\n\n#### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n#### Usage\n\n##### Kubernetes Examples\n\nYou can find Kubernetes examples in the [k8s directory](k8s).\n\n##### Container Parameters\n\nIf you run the application without parameters it'll start the application.\n\n```shell\ndocker run quay.io/ukhomeofficedigital/email-api:v2.0.0\n```\n\nOtherwise it'll run the command you provide. For example the command below will run bash.\n\n```shell\ndocker run quay.io/ukhomeofficedigital/email-api:v2.0.0 bash\n```\n\n##### Environment Variables\n\n* `SMTP_HOSTNAME` The hostname of the SMTP server to use.\n* `SMTP_PORT` Server port (Default: 25)\n* `SMTP_REQUIRE_TSL` Require TSL (Default: false)\n* `SMTP_START_TSL_ENABLED` Start TSL Enabled (Default: false)\n* `SMTP_ON_SSL_CONNECT` SSL On Connect (Default: false)\n* `SMTP_USERNAME` If this is populated we will attempt to authenticate with the SMTP server (Default: \"\")\n* `SMTP_PASSWORD` Used if SMTP_USERNAME is set (Default: \"\")\n* `SMTP_PASSWORD_PATH` If used this will overwrite SMTP_PASSWORD with the contents of this file.\n* `TEMPLATE_PATH` Where to look for templates to use (Default: \"/templates\")\n\n##### Useful File Locations\n\n* `/templates` - Where to put your Freemarker templates\n\n## Built With\n\n* Dropwizard 0.8.2\n* Freemarker 2.3.23\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/email-api)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/email-api)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/email-api/tags). \n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/email-api/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure you have discussed any large changes in an issue first, and reference that issue in the PR.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of one other developer, or if you \n   do not have permission to do that, you may request the reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)","masterBranchProtection":false},{"name":"UKHomeOffice/email-api-client-java","private":false,"url":"https://github.com/UKHomeOffice/email-api-client-java","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Email API Client\n\n[![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Femail-api-client-java.svg)](https://badge.fury.io/gh/ukhomeoffice%2Femail-api-client-java) [![Build Status](https://travis-ci.org/UKHomeOffice/email-api-client-java.svg?branch=master)](https://travis-ci.org/UKHomeOffice/email-api-client-java)\n\nThis is a client for the [Email API](https://github.com/UKHomeOffice/email-api)\n\n## Getting Started\n\nThis documents how to get started using Maven or Gradle.\n\nThis repository is generated using [swagger-codegen](https://github.com/swagger-api/swagger-codegen). The command used is as follows:\n\n```shell\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate   \\\n    -i http://localhost:8080/swagger.json \\\n    -l java \\\n    --library jersey2 \\\n    --group-id uk.gov.homeoffice.emailapi \\\n    --artifact-id email-api-client \\\n    --api-package uk.gov.homeoffice.emailapi.client \\\n    --artifact-version v2.0.0  \\\n    -o ../email-api-client/ \n```\n\n### Adding to your project\n\n#### Gradle\n\nAdd JetPack as a repository\n\n```gradle\n repositories {\n        // ...\n        maven { url \"https://jitpack.io\" }\n    }\n```\n\n\n\n```gradle\n    dependencies {\n            compile 'com.github.UKHomeOffice:email-api-client:v2.0.0'\n    }\n```\n\n#### Maven\n\n```xml\n    <repository>\n        <id>jitpack.io</id>\n        <url>https://jitpack.io</url>\n    </repository>\n```\n\n```xml\n    <dependency>\n        <groupId>com.github.UKHomeOffice</groupId>\n        <artifactId>email-api-client</artifactId>\n        <version>v2.0.0</version>\n    </dependency>\n```\n\n### Using it\n\n```java\nimport io.swagger.client.ApiClient;\nimport io.swagger.client.model.TemplatedEmail;\nimport uk.gov.homeoffice.emailapi.client;\n```\n\n```java\nApiClient client = new ApiClient(\"localhost\");\nOutboundApi outboundEmailApi = new OutboundApi(client);\n\nTemplatedEmail email = TemplatedEmail();\n\n// Set some parameters on the email\n// email.setSender(\"annie@example.com\");\n// etc.\n\noutboundEmailApi.sendEmail(email);\n```\n\n## Built With\n\n* swagger-codegen\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/email-api-client-java)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nThe version of this repository tracks the [Email API](https://github.com/UKHomeOffice/email-api). For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/email-api-client-java/tags). \n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/email-api-client-java/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure you have discussed any large changes in an issue first, and reference that issue in the PR.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of one other developer, or if you \n   do not have permission to do that, you may request the reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)","masterBranchProtection":false},{"name":"UKHomeOffice/docker-stacks","private":false,"url":"https://github.com/UKHomeOffice/docker-stacks","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Stacks\n\n[Stacks](https://github.com/State/stacks) it's an Aws CloudFormation stacks management tool.\nIt can generate templates, list, create, delete and update stacks.\n\nTo use the docker image\n\n        -> % docker run -it --rm -v $(HOME)/.aws:/root/.aws:ro \\\n            quay.io/ukhomeofficedigital/stacks stacks --profile default --region eu-west-1 list\n\n            ukhomeofficedigital-guestbook-elb        CREATE_COMPLETE\n            ukhomeofficedigital-kubernetes-elb       CREATE_COMPLETE\n            ukhomeofficedigital-coreos-compute       UPDATE_COMPLETE\n            ukhomeofficedigital-coreos-etcd          UPDATE_COMPLETE\n            ukhomeofficedigital-coreos-etcd-volumes  UPDATE_COMPLETE\n            ukhomeofficedigital-infra                CREATE_COMPLETE\n\n\nThere are a few details you have to provide. AWS Credentials, profile and default region.\nThe name of your stack (called ENV) and the location of the templates folder.\n\n        -> % docker run -it --rm\n                -e AWS_PROFILE=HomeOfficeProfile \\\n                -e AWS_REGION=eu-west-1 \\\n                -e ENV=MyNewStack \\\n                -v $(HOME)/.aws:/root/.aws:ro  \\\n                -v $(pwd)/../examples/templates:/templates\n            quay.io/ukhomeofficedigital/stacks \\\n                stacks -p $AWS_PROFILE -r $AWS_REGION create -e ${ENV} -t /templates/infra.yaml ${ENV}-infra\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-stacks/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n\n## Authors\n\n* **Ivan Pedrazas** - *Initial work* - [ipedrazas](https://github.com/ipedrazas)\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/docker-stacks/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the MIT License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/docker-stacks/blob/master/LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hubot-merge-spam","private":false,"url":"https://github.com/UKHomeOffice/hubot-merge-spam","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Hubot Merge Spam\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/hubot-merge-spam.svg?branch=master)](https://travis-ci.org/UKHomeOffice/hubot-merge-spam) [![npm version](https://badge.fury.io/js/hubot-merge-spam.svg)](https://badge.fury.io/js/hubot-merge-spam)\n\nPeriodically announce to the channel what merge requests are available. Also print them on demand. Supports both GitLab's Merge Requests and GitHubs Pull Requests.\n\n## Usage\n\nThis is a plugin to Hubot\n\n```\n5:34:08 PM <•purplebooth> dec4rd: list mr\n5:34:09 PM <•dec4rd> @purplebooth: Listing Merge Requests\n5:34:09 PM <•dec4rd>  \n5:34:09 PM <•dec4rd> ⭐ API-Factory / data-assurance-dataimport#3 Added standard format\n5:34:09 PM <•dec4rd> 🔗 https://gitlab.digital.homeoffice.gov.uk/API-Factory/data-assurance-dataimport/merge_requests/3 \n5:34:09 PM <•dec4rd> 👤 purplebooth\n5:34:09 PM <•dec4rd>  \n5:34:09 PM <•dec4rd> ⭐ API-Factory / data-assurance-api#9 This should cause a test to fail\n5:34:09 PM <•dec4rd> 🔗 https://gitlab.digital.homeoffice.gov.uk/API-Factory/data-assurance-api/merge_requests/9 \n5:34:09 PM <•dec4rd> 👤 mikeyhu\n5:34:09 PM <•dec4rd>  \n5:34:09 PM <•dec4rd> ⭐ API-Factory / data-assurance-api#7 Standardise on coding style\n5:34:09 PM <•dec4rd> 🔗 https://gitlab.digital.homeoffice.gov.uk/API-Factory/data-assurance-api/merge_requests/7 \n5:34:09 PM <•dec4rd> 👤 purplebooth\n5:34:09 PM <•dec4rd>  \n```\n\n```\n9:23:33 AM <•purplebooth> dec4rd: list pr\n9:23:35 AM <•dec4rd> @purplebooth: Listing Pull Requests\n9:23:35 AM <•dec4rd>  \n9:23:35 AM <•dec4rd> ⭐ UKHomeOffice/passports-form-wizard#31 Support for multiple translators\n9:23:35 AM <•dec4rd> 🔗 https://github.com/UKHomeOffice/passports-form-wizard/pull/31 \n9:23:35 AM <•dec4rd> 👤 easternbloc 🔍 gavboulton\n9:23:35 AM <•dec4rd>  \n9:23:35 AM <•dec4rd> ⭐ UKHomeOffice/vaultconf#13 Added support for configuring secrets in vault\n9:23:35 AM <•dec4rd> 🔗 https://github.com/UKHomeOffice/vaultconf/pull/13 \n9:23:35 AM <•dec4rd> 👤 timgent\n9:23:35 AM <•dec4rd>  \n9:23:35 AM <•dec4rd> ⭐ UKHomeOffice/RTM#4 Add a local dev environment based on docker-compose\n9:23:35 AM <•dec4rd> 🔗 https://github.com/UKHomeOffice/RTM/pull/4 \n9:23:35 AM <•dec4rd> 👤 daniel-ac-martin\n9:23:35 AM <•dec4rd>  \n9:23:35 AM <•dec4rd> ⭐ UKHomeOffice/removals_dashboard#11 BM-264 unit tests\n9:23:35 AM <•dec4rd> 🔗 https://github.com/UKHomeOffice/removals_dashboard/pull/11 \n9:23:35 AM <•dec4rd> 👤 fulljames 🔍 chrisns\n9:23:35 AM <•dec4rd>  \n```\n\n## Installing\n\nTo add this plugin to hubot run \n\n```\nnpm i --save hubot-merge-spam\n```\n\nAnd add `hubot-merge-spam` to `external-scripts.json` in your hubot\n\n## Environment Variables\n\n* `HUBOT_MERGE_SPAM_ANNOUNCE_ROOMS` Rooms to periodically announce the state of the PRs and MRs into. Make this empty to not announce\n* `HUBOT_MERGE_SPAM_CRON` [Standard CRON](http://linuxconfig.org/linux-cron-guide) for when it should announce. Defaults to every 3 hours.\n* `HUBOT_MERGE_SPAM_GITHUB_ORGANISATION` GitHub Organisation to get the Pull Requests from. If this is blank it'll disable the GitHub functionality.\n* `HUBOT_MERGE_SPAM_GITHUB_AUTH_USERNAME` GitHub Username. If this or the auth token are missing it'll try to do the requests without authentication, but it'll probably hit rate limiting.\n* `HUBOT_MERGE_SPAM_GITHUB_AUTH_PASSWORD` GitHub password (generate one). \n* `HUBOT_MERGE_SPAM_GITLAB_HOST` GitLab URL. If token or this are missing it'll disable the GitLab aspects. \n* `HUBOT_MERGE_SPAM_GITLAB_API_TOKEN` GitLab API Token\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/UKHomeOffice/hubot-merge-spam/tags). \n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/hubot-merge-spam/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hubot-decard","private":false,"url":"https://github.com/UKHomeOffice/hubot-decard","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Decard\n\n[![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Fhubot-decard.svg)](https://badge.fury.io/gh/ukhomeoffice%2Fhubot-decard) [![Build Status](https://travis-ci.org/UKHomeOffice/hubot-decard.svg?branch=master)](https://travis-ci.org/UKHomeOffice/hubot-decard) [![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/hubot-decard/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/hubot-decard)\n\nDecard is a chat bot built on the [Hubot][hubot] framework. It was\ninitially generated by [generator-hubot][generator-hubot], and configured to be\ndeployed on [Heroku][heroku] to get you up and running as quick as possible.\n\nThis particular Hubot comes with the default scripts, and the [hubot-merge-spam](https://github.com/UKHomeOffice/hubot-merge-spam) script. This periodically announce to the channel what merge requests are available. It also prints them on demand.\n\n[heroku]: http://www.heroku.com\n[hubot]: http://hubot.github.com\n[generator-hubot]: https://github.com/github/generator-hubot\n\n### Running decard Locally\n\nYou can test your hubot by running the following, however some plugins will not\nbehave as expected unless the [environment variables](#configuration) they rely\nupon have been set.\n\nYou can start decard locally by running:\n\n    % bin/hubot\n\nYou'll see some start up output and a prompt:\n\n    [Sat Feb 28 2015 12:38:27 GMT+0000 (GMT)] INFO Using default redis on localhost:6379\n    decard>\n\nThen you can interact with decard by typing `decard help`.\n\n    decard> decard help\n    decard animate me <query> - The same thing as `image me`, except adds [snip]\n    decard help - Displays all of the help commands that decard knows about.\n    ...\n\n### Configuration\n\nA few scripts (including some installed by default) require environment\nvariables to be set as a simple form of configuration.\n\nThe default scripts that come with this bot are\n\n```json\n[\n  \"hubot-diagnostics\",\n  \"hubot-help\",\n  \"hubot-heroku-keepalive\",\n  \"hubot-google-images\",\n  \"hubot-google-translate\",\n  \"hubot-pugme\",\n  \"hubot-maps\",\n  \"hubot-redis-brain\",\n  \"hubot-rules\",\n  \"hubot-shipit\",\n  \"hubot-merge-spam\"\n]\n```\n\nAnd the `slack` adapter.\n\nThese are the environment variables for this bot\n\n* `REDISTOGO_URL` or `REDISCLOUD_URL` or `BOXEN_REDIS_URL` or `REDIS_URL` URL format: redis://<host>:<port>[/<brain_prefix>]\n* `HUBOT_SLACK_TOKEN` Your slack token\n* `HUBOT_MERGE_SPAM_ANNOUNCE_ROOMS` Rooms to periodically announce the state of the PRs and MRs into. Make this empty to not announce\n* `HUBOT_MERGE_SPAM_CRON` [Standard CRON](http://linuxconfig.org/linux-cron-guide) for when it should announce. Defaults to every 3 hours.\n* `HUBOT_MERGE_SPAM_GITHUB_ORGANISATION` GitHub Organisation to get the Pull Requests from. If this is blank it'll disable the GitHub functionality.\n* `HUBOT_MERGE_SPAM_GITHUB_AUTH_USERNAME` GitHub Username. If this or the auth token are missing it'll try to do the requests without authentication, but it'll probably hit rate limiting.\n* `HUBOT_MERGE_SPAM_GITHUB_AUTH_PASSWORD` GitHub password (generate one). \n* `HUBOT_MERGE_SPAM_GITLAB_HOST` GitLab URL. If token or this are missing it'll disable the GitLab aspects. \n* `HUBOT_MERGE_SPAM_GITLAB_API_TOKEN` GitLab API Token\n\n## Adapters\n\nAdapters are the interface to the service you want your hubot to run on, such\nas Campfire or IRC. There are a number of third party adapters that the\ncommunity have contributed. Check [Hubot Adapters][hubot-adapters] for the\navailable ones.\n\nIf you would like to run a non-Campfire or shell adapter you will need to add\nthe adapter package as a dependency to the `package.json` file in the\n`dependencies` section.\n\nOnce you've added the dependency with `npm install --save` to install it you\ncan then run hubot with the adapter.\n\n    % bin/hubot -a <adapter>\n\nWhere `<adapter>` is the name of your adapter without the `hubot-` prefix.\n\n[hubot-adapters]: https://github.com/github/hubot/blob/master/docs/adapters.md\n\n## Deploying To Heroku\n\n    % heroku create\n    % git push heroku master\n\nIf your Heroku account has been verified you can run the following to enable\nand add the Redis to Go addon to your app.\n\n    % heroku addons:add redistogo:nano\n\nIf you run into any problems, checkout Heroku's [docs][heroku-node-docs].\n\nYou'll need to edit the `Procfile` to set the name of your hubot.\n\nMore detailed documentation can be found on the [deploying hubot onto\nHeroku][deploy-heroku] wiki page.\n\n## Deploying To Docker & Kubernetes\n\nYou can use the docker container [quay.io/ukhomeofficedigital/hubot-decard](https://quay.io/repository/ukhomeofficedigital/hubot-decard), there are example k8s files in `/k8s`\n\n### Deploying to UNIX or Windows\n\nIf you would like to deploy to either a UNIX operating system or Windows.\nPlease check out the [deploying hubot onto UNIX][deploy-unix] and [deploying\nhubot onto Windows][deploy-windows] wiki pages.\n\n[heroku-node-docs]: http://devcenter.heroku.com/articles/node-js\n[deploy-heroku]: https://github.com/github/hubot/blob/master/docs/deploying/heroku.md\n[deploy-unix]: https://github.com/github/hubot/blob/master/docs/deploying/unix.md\n[deploy-windows]: https://github.com/github/hubot/blob/master/docs/deploying/unix.md\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/rtp-mongo-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-mongo-lib","license":null,"readme":"RTP Mongo Library - Scala library to work with Mongodb drivers\n==============================================================\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Casbah\n\n- Salat\n\n- ReactiveMongo\n\nIntroduction\n------------\nA library to easily \"configure\" your application to interact with Mongodb, currently via the Casbah driver.\n\nConfiguration, as well as using the standard reference/application.conf, is done via mixins to your application and test code.\n\nTo interact with Mongodb, choose to either utilise a Casbah or Salat Repository.\n\nA Casbah Repository represents a Mongodb collection to save and get back JSON.\n\nA Salat Repository represents a Mongodb collection to save a \"domain\" object (a case class) and get back said object.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```\nbrew install typesafe-activator\n```\n\nTo compile:\n```\nsbt compile\n```\n\nor\n```\nactivator compile\n```\n\nTo run the specs:\n```\nsbt test\n```\n\nThe following packages up this library - Note that \"assembly\" will first compile and test:\n```\nsbt assembly\n```\n\nCasbah Repository Example\n-------------------------\n```scala\nimport uk.gov.homeoffice.mongo.casbah.Repository\n\ntrait ThingsRepository extends Repository {\n  val collectionName = \"things\"\n}\n\nval thingsRepository = new ThingsRepository with MyMongo\nthingsRepository.collection.save(<my JSON>)\n\n// OR if you \"apply\" the instance of the repository being created (a la JavaScript), then you don't need to call \"collection\" before calling an API method such as \"save\", \"find\" etc.\n\nval thingsRepository = (new ThingsRepository with MyMongo)()\nthingsRepository.save(<my JSON>)\n```\n\nOf course, where did that \"MyMongo\" come from? Each repository, whether Casbah or Salat, needs a \"Mongo\" mixed in, where the Mongo trait wraps the actual connection to Mongodb and so needs to be configured with the Mongodb details e.g. host, port, credentials.\n\nMyMongo could be coded as:\n```scala\nimport com.typesafe.config.ConfigFactory\nimport com.mongodb.casbah.MongoClientURI\n\ntrait MyMongo extends Mongo {\n  lazy val db = MyMongo.mydb\n}\n\nobject MyMongo {\n  lazy val mydb = Mongo db MongoClientURI(ConfigFactory.load getString \"mydb\")\n}\n```\n\nHey! That seems like a lot of extra set up code?\n\nWell, the trait (MyMongo) is a must, as we need this to mixin to all your repositories for a particular Mongodb.\n\nThen the object reads the actual configuration - but why here, why not in the trait? For example, why not just do the following?\n```scala\ntrait MyMongo extends Mongo {\n  lazy val db = Mongo db MongoClientURI(ConfigFactory.load getString \"mydb\")\n}\n```\n\nBig mistake! Everytime the trait is now mixed in, not only is a new Mongo connection created, an actual Mongo pool of connections are created - you'll soon have many connection pools and your application will quickly slow down.\n\nSalat Repository Example\n------------------------\n```scala\nimport uk.gov.homeoffice.mongo.salat.Repository\n\ntrait ThingsRepository extends Repository[Thing] {\n  val collectionName = \"things\"\n}\n\nval thingsRepository = new ThingsRepository with MyMongo\nthingsRepository save Thing()\n```\n\nwhere Thing would be one of your case classes.\n\nTesting\n-------\nThere are two available specifications for tests that interact with Mongo.\nMongoSpecification, which requires Mongo to be running locally, and EmbeddedMongoSpecification which has an embedded Mongo per specification.\n\nVia EmbeddedMongoSpecification, each example, within a specification, is run sequentially, as a test database is created and dropped.\n\nAnd via MongoSpecification, a unique test database is generated per example of a specification, allowing each to run (by default) in parallel.\n\nEmbeddedMongoSpecification Example\n----------------------------------\nThis trait must be mixed into a Specs2 specification and will give you a TestMongo to mix into your repository.\n```scala\nclass RepositoryEmbeddedMongoSpec extends Specification with EmbeddedMongoSpecification {\n  trait Context extends Scope {\n    val repository = new Repository[Thing] with TestMongo {\n      val collectionName = \"tests\"\n    }\n  }\n\n  \"Repository\" should {\n    \"find nothing\" in new Context {\n      repository.findAll().toList must beEmpty\n    }\n  }\n}\n```\n\nExample App\n-----------\nTo run ExampleApp:\n```\nsbt test:run\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/aws-dsp-toolset","private":false,"url":"https://github.com/UKHomeOffice/aws-dsp-toolset","license":null,"readme":"# AWS Digital Services Platform Toolset Container\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/aws-dsp-toolset/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/aws-dsp-toolset)\n\n### Overview\nThis container is responsible for holding the necessary tools for working with AWS to build infrastructure:\n* stacks\n* aws cli\n* cfssl\n* coreos-cloudinit\n* vaultctl\n* docker\n* s3secrets\n* kubectl\n* fleetctl\n\nThis is so we have versioned tools that we can test and validate against CI.\n\n### Additions\n\nAlongside the core tools are additional scripts that enable functionality in a central place.\n\n* peer_vpc\n* encrypt_secrets\n* decrypt_secrets\n* instances-list\n\n#### Peer VPC\n\nThis is used to peer VPC's together, (VPC Peering)\n\n#### Encrypt Secrets\n\nThis is used to encrypt secrets in a specific path and based on environment. If there are any files:\n```\nstacks/config.d/secrets_${stacks_env}.yaml\n```\n\nIt will use the kms key to encrypt those files leaving them as base64 encoded files e.g.\n\n```\nstacks/config.d/secrets_dev.yaml.enc\n```\n\n#### Decrypt Secrets\n\nThis is used to decrypt secrets based on the above leaving the yaml data as native data to be used by stacks\nallowing you to use potentially more sensitive information inside your templates without compromising the security\n\n```\ncat stacks/config.d/secrets_dev.yaml\ndev:\n  some_secret: 'some_data'\n\n{{some_secret}} now becomes a variable inside your templates for the development environment\n```\nThis is done when run.sh is initiated, decrypt_secrets will be executed before it runs stacks.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-ckan","private":false,"url":"https://github.com/UKHomeOffice/docker-ckan","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# CKAN Docker Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-ckan.svg)](https://travis-ci.org/UKHomeOffice/docker-ckan) [![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Fdocker-ckan.svg)](https://badge.fury.io/gh/ukhomeoffice%2Fdocker-ckan) [![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/ckan/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/ckan)\n\nThis is the home office packaging of [CKAN](http://ckan.org/)\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container\n\n### Prerequisites\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Get started quick\n\nThis will get CKAN running\n\n```\ndocker run -d --privileged=true --name solr milafrerichs/ckan_solr\ndocker run -d --privileged=true --name db ckan/postgresql\ndocker run -p 5000:5000 \\\n           --link db:db \\\n           --link solr:solr \\\n           quay.io/ukhomeofficedigital/ckan:$CONTAINER_VERSION\n```\n\nThen Point your browser at `https://<your-docker-host>:5000` and you'll see ckan.\n\n#### TLS Parameters\n\nTLS is enabled by default in this container, and we dynamically create a self signed certificate if no certificate is created.\nIf you'd like to implement your own certs then simply mount then into `/etc/httpd/ssl`\n\n```\ndocker run -p 5000:5000 \\\n           --link db:db \\\n           --link solr:solr \\\n           -v /path/to/certs:/etc/httpd/ssl\n           quay.io/ukhomeofficedigital/ckan:$CONTAINER_VERSION\n```\n\nWe also allow you to define the domain for your self-signed tls certs, just use the `DOMAIN` env variable.\n\n#### Container Parameters\n\nIf you run the container without parameters, just run it\n\n```shell\ndocker run quay.io/ukhomeofficedigital/ckan:$CONTAINER_VERSION\n```\n\nIf you pass a parameter to the container we'll try to run it, so\n\n```shell\ndocker run quay.io/ukhomeofficedigital/ckan:$CONTAINER_VERSION bash\n```\n\n#### Environment Variables\n\n* `DATABASE_URL` - URL for the primary database, in the format expected by sqlalchemy (required\n                   unless linked to a container called 'db')\n* `SOLR_URL` - URL for solr (required unless linked to a container called 'solr')\n\n* `DOMAIN` - Domain for ckan to run under, defaults to `localhost`\n\n* `DB_CREDS` - Path to file where username and password are stored, this will in turn populate `DATABASE_USER` and `DATABASE_PASSWORD` (useful for vault_sidekick)\n\n* `DATABASE_USER` - String containing the username for DB\n\n* `DATABASE_PASSWORD` - String containing password for DB\n\n#### Volumes\n\n* `/var/lib/ckan` - CKAN Data Directory\n\n#### Useful File Locations\n\n* `/userscripts` - All executable files in this directory will be executed before starting ckan\n* `/app/ckan/plugins` - All plugins placed in here will be added to ckan by running `python setup.py develop` on them\n\n## Built With\n\n* CKAN 2.4.1\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-ckan)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/ckan)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the\n[tags on this repository](https://github.com/UKHomeOffice/docker-ckan/tags).\n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/docker-ckan/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/Feedback","private":false,"url":"https://github.com/UKHomeOffice/Feedback","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# BRP Application project for nodejs\n\n[![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/brpapp/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/brpapp)\n\n## Quick start\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\nInitiate the server in development mode (Express is used to serve the static resources in development).\n```bash\n$ npm run dev\n```\n\nThen select one of the following journeys to see the applcation in action\n\n- [Collection](http://localhost:8080/collection)\n- [Someone else](http://localhost:8080/someone-else)\n- [Not arrived](http://localhost:8080/not-arrived)\n- [Correct mistakes](http://localhost:8080/correct-mistakes)\n- [Lost, damaged or stolen](http://localhost:8080/lost-damaged-stolen)\n\nSee the [development documentation](./documentation/DEVELOPMENT.MD) for a complete description of the application and how to maintain and support BRP.\n\n\n## NPM scripts\n\nStart the application in default mode (production).\nWe use Nginx to serve our static resources in production and ci.\n```bash\n$ npm start\n```\n\nStart the application with [Nodemon](https://www.npmjs.com/package/nodemon) in development mode.\nDebug is switched on and the server restarts when the JS or Sass are recompiled.\n```bash\n$ npm run dev\n```\n\nRun the unit tests\n```bash\n$ npm run test\n```\n\nRun the EcmaScript (ES) linter.  Rules are defined in [.eslintrc](./.eslintrc)\n```bash\n$ npm run lint\n```\n\nRun the jscs style checker. Rules are defined in [.jscsrc.json](./.jscsrc.json)\n```bash\n$ npm run style\n```\n\nAnalyse the quality of the codebase (for results - open [./reports/plato/index.html](./reports/plato/index.html))\n```bash\n$ npm run quality\n```\n\nCompile the Sass to CSS\n```bash\n$ npm run sass\n```\n\n_____________________________________________________________\n\n- For details on [Acceptance tests](https://github.com/UKHomeOffice/brp_app/tree/master/acceptance_tests)\n\n- See the [package.json](./package.json) for a full list of scripts.\n\n- Full list of [environment variables](./documentation/ENVIRONMENT_VARIABLES.md)\n\n","travis":false,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/passport-enquiries-form","private":false,"url":"https://github.com/UKHomeOffice/passport-enquiries-form","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Passport Enquiries Form project for nodejs\n\n\n## Quick start\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\nInitiate the server in development mode (Express is used to serve the static resources in development).\n```bash\n$ npm run dev\n```\n\n\n## NPM scripts\n\nStart the application in default mode (production).\nWe use Nginx to serve our static resources in production and ci.\n```bash\n$ npm start\n```\n\nStart the application with [Nodemon](https://www.npmjs.com/package/nodemon) in development mode.\nDebug is switched on and the server restarts when the JS or Sass are recompiled.\n```bash\n$ npm run dev\n```\n\nRun the unit tests\n```bash\n$ npm run test\n```\n\nRun the EcmaScript (ES) linter.  Rules are defined in [.eslintrc](./.eslintrc)\n```bash\n$ npm run lint\n```\n\nRun the jscs style checker. Rules are defined in [.jscsrc.json](./.jscsrc.json)\n```bash\n$ npm run style\n```\n\nAnalyse the quality of the codebase (for results - open [./reports/plato/index.html](./reports/plato/index.html))\n```bash\n$ npm run quality\n```\n\nCompile the Sass to CSS\n```bash\n$ npm run sass\n```\n\n_____________________________________________________________\n\n- For details on [Acceptance tests](https://github.com/UKHomeOffice/passport-enquiries-form/tree/master/acceptance_tests)\n\n- See the [package.json](./package.json) for a full list of scripts.\n\n- Full list of [environment variables](./documentation/ENVIRONMENT_VARIABLES.md)\n\n","travis":false,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/docker-solr","private":false,"url":"https://github.com/UKHomeOffice/docker-solr","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Solr Docker Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-solr.svg)](https://travis-ci.org/UKHomeOffice/docker-solr) [![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Fdocker-solr.svg)](https://badge.fury.io/gh/ukhomeoffice%2Fdocker-solr) [![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/solr/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/solr)\n\nThis is a docker container for [Solr](http://lucene.apache.org/solr/).\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisites\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nTo run a single Solr server:\n\n```shell\ndocker run --name my_solr -d -p 8983:8983 -t quay.io/ukhomeofficedigital/solr:$CONTAINER_VERSION\n```\n\nThen with a web browser go to `http://localhost:8983/` to see the Admin Console (adjust the hostname for your docker host).\n\nTo use Solr, you need to create a \"core\", an index for your data. For example:\n\n```shell\ndocker exec -it --user=solr my_solr bin/solr create_core -c gettingstarted\n```\n\nIn the web UI if you click on \"Core Admin\" you should now see the \"gettingstarted\" core.\n\nIf you want to load some example data:\n\n```shell\ndocker exec -it --user=solr my_solr bin/post -c gettingstarted example/exampledocs/manufacturers.xml\n```\n\nIn the UI, find the \"Core selector\" popup menu and select the \"gettingstarted\" core, then select the \"Query\" menu item. This gives you a default search for \":\" which returns all docs. Hit the \"Execute Query\" button, and you should see a few docs with data. Congratulations!\n\nTo learn more about Solr, see the [Apache Solr Reference Guide](https://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide).\n\nDistributed Solr\nYou can also run a distributed Solr configuration, with Solr nodes in separate containers, sharing a single ZooKeeper server:\n\nRun ZooKeeper, and define a name so we can link to it:\n\n```shell\ndocker run --name zookeeper -d -p 2181:2181 -p 2888:2888 -p 3888:3888 jplock/zookeeper\n```\n\nRun two Solr nodes, linked to the zookeeper container:\n\n```shell\ndocker run --name solr1 --link zookeeper:ZK -d -p 8983:8983 \\\n      quay.io/ukhomeofficedigital/solr:$CONTAINER_VERSION \\\n      bash -c '/opt/solr/bin/solr start -f -z $ZK_PORT_2181_TCP_ADDR:$ZK_PORT_2181_TCP_PORT'\ndocker run --name solr2 --link zookeeper:ZK -d -p 8984:8983 \\\n      quay.io/ukhomeofficedigital/solr:$CONTAINER_VERSION \\\n      bash -c '/opt/solr/bin/solr start -f -z $ZK_PORT_2181_TCP_ADDR:$ZK_PORT_2181_TCP_PORT'\n```\n\nCreate a collection:\n\n```shell\ndocker exec -i -t solr1 /opt/solr/bin/solr create_collection \\\n        -c collection1 -shards 2 -p 8983\n```\nThen go to `http://localhost:8983/solr/#/~cloud` (adjust the hostname for your docker host) to see the two shards and Solr nodes.\n\n## Environment Variables\n\n* `ZK_HOST` (Optional) The ZooKeeper connection string your current SolrCloud nodes use to connect \n  to ZooKeeper; this value will be the same for all nodes in the cluster.\n* `SOLR_HOST` (Optional) The hostname each Solr node used to register with ZooKeeper when joining \n  the SolrCloud cluster; this value will be used to set the host Java system property when starting \n  the new Solr 5 process.\n* `SOLR_PORT` (Optional) The port each Solr node is listening on, such as 8983.\n* `OVERRIDE_SOLR_PORT` (Optional) Sets `SOLR_PORT` on runtime.\n* `SOLR_HOME` (Optional) The absolute path to the Solr home directory for each Solr node; this\n  directory must contain a solr.xml file\n\n## Built With\n\n* Solr 5.3.1\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-solr)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/solr)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-solr/tags). \n\n## License\n\nThis is based off the official Solr container, and we have included much of the text and code they \nprovide.\n\nThe primary changes made to this repository is to allow us to base this image of our parent image, \nrather than one provided.\n\nWe have sublicensed this variant under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for\n details. You can find the Apache v2.0 license they distribute that code with at \n[ORIGINAL-LICENSE.md](ORIGINAL-LICENSE.md).\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/drone-test-build","private":false,"url":"https://github.com/UKHomeOffice/drone-test-build","license":null,"readme":"# drone-test-build\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/openvpn-authd","private":false,"url":"https://github.com/UKHomeOffice/openvpn-authd","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/deep-ui","private":false,"url":"https://github.com/UKHomeOffice/deep-ui","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# deep-ui\nWeb interface for CI/CD private and public dashboards\n\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-ckan-solr","private":false,"url":"https://github.com/UKHomeOffice/docker-ckan-solr","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Docker Container with Ckan Configuration of Solr\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/ckan-solr/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/ckan-solr) [![Build Status](https://travis-ci.org/UKHomeOffice/docker-ckan-solr.svg)](https://travis-ci.org/UKHomeOffice/docker-ckan-solr) [![GitHub version](https://badge.fury.io/gh/UKHomeOffice%2Fdocker-ckan-solr.svg)](https://badge.fury.io/gh/UKHomeOffice%2Fdocker-ckan-solr) \n\nThis docker container CKAN configuration of Solr.\n\n## Running\n\nSee the [docker-solr](https://github.com/UKHomeOffice/docker-solr) repo for full details.\n\nTo run a single Solr server:\n\n```bash\ndocker run --name ckan-solr -d -p 8983:8983 -t quay.io/ukhomeofficedigital/ckan-solr:$CONTAINER_VERSION\n```\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for details\n\n## License\n\nThis repository is licensed under the GPL v2 License. See [LICENSE.md](LICENSE.md) for full details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/deep-api","private":false,"url":"https://github.com/UKHomeOffice/deep-api","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# deep-api\nRest API  for deep\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/data-catalogue","private":false,"url":"https://github.com/UKHomeOffice/data-catalogue","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# Data Catalogue\n\n[![Codacy Badge](https://api.codacy.com/project/badge/grade/617b2a093c8246179ca234fcd7b765fd)](https://www.codacy.com/app/purplebooth/data-catalogue) [![Build Status](https://travis-ci.org/UKHomeOffice/data-catalogue.svg)](https://travis-ci.org/UKHomeOffice/data-catalogue) [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/data-catalogue/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/data-catalogue) [![GitHub version](https://badge.fury.io/gh/UKHomeOffice%2Fdata-catalogue.svg)](https://badge.fury.io/gh/UKHomeOffice%2Fdata-catalogue)\n\nA quick spike to get CKAN running in docker with our own config\n\n## Starting\n```\ndocker-compose up db solr\ndocker-compose up ckan\n```\n\n## Deploying\n\nKubernetes files can be found at [k8s/](k8s/)\n\n## Loading data\n\nRequires *Python* and *pip*\n\n```\ncd loader\npip install -r requirements.txt\npython baseloader.py http://your-docker-instance your-api-key\n```\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-scala-play","private":false,"url":"https://github.com/UKHomeOffice/docker-scala-play","license":{"key":"lgpl-2.1","name":"GNU Lesser General Public License v2.1","spdxId":"LGPL-2.1","url":"https://api.github.com/licenses/lgpl-2.1","featured":false},"readme":"# Deprecated in favour of [this image](https://github.com/UKHomeOffice/docker-scala-sbt)\n\n# docker-scala-play\nEnables build of Scala apps using the play framework\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-web","private":false,"url":"https://github.com/UKHomeOffice/lev-web","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# LEV Front End\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/lev-web.svg?branch=master)](https://travis-ci.org/UKHomeOffice/lev-web)\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/lev-web/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/lev-web)\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisites\n\nThe following tools are needed to install the software\n- NodeJS / NPM\n\n### Installing\n```bash\nnpm install\n```\n\n## Running the tests\n\n### Locally\n```bash\nnpm test\n```\n\n### Acceptance tests against a server\n```bash\nENV=dev TEST_URL=http://lev-web-dev.dsp.notprod.homeoffice.gov.uk USERNAME=xxxx PASSWORD=xxxx npm run chimp\n```\nOR\n```\ndocker build -f ./E2E_test_Dockerfile -t lev-web-e2e-tests .\ndocker run --rm -e ENV=dev -e TEST_URL=http://lev-web-dev.dsp.notprod.homeoffice.gov.uk -e USERNAME=xxxx -e PASSWORD=xxxx lev-web-e2e-tests\n```\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details\n\n\n### Delete me!\nDummy change to test LEVWEB-769...\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-client","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-client","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Mysql client\n\nDocker container for provisioning mysql databases.\n\n## Getting Started\n\nThese instructions will cover how to start a container both in Docker and within a [Kubernetes](http://kubernetes.io/) cluster.\n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nOptionally:\n\n* A [Kubernetes](http://kubernetes.io/) cluster to enable Kubernetes api discovery of other nodes.\n\n### Usage\n\nThe example below will run a mysql client container and create the database test with the user test_user:\n\n```\ndocker run -i --rm=true \\\n       -e MYSQL_HOST=localhost \\\n       -e APP_DB_NAME=mydb \\\n       -e ROOT_PASS=secretpass \\\n       -e APP_DB_USER=myapp_user \\\n       -e APP_DB_PASS=myapppass \\\n       quay.io/ukhomeofficedigital/mysql-client:v0.1.2\n```\n\nTo use with [Kubernetes](http://kubernetes.io/) see the [kubernetes examples](examples/kubernetes.md).\n\n\n#### Environment Variables\n\nThe variables and the defaults are shown below.\nBy default, the container does not depend on [Kubernetes](http://kubernetes.io/). \n\n* `MYSQL_HOST=hostname` The host to connect to.\n* `MYSQL_PORT=3306` The port to connect to.\n* `ENABLE_SSL=FALSE` When set to TRUE, will ensure all users must connect using SSL using the Amazon RDS CA.\n* `DEFAULT_PW=changeme` Supports changing a database provisioned root password from this value.\n* `ROOT_PASS=`\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql-client/tags).\n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mysql-client/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/Employers-Checking-Service-Form","private":false,"url":"https://github.com/UKHomeOffice/Employers-Checking-Service-Form","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Employers-Checking-Service-Form\nEmployers-Checking-Service-Form\n","travis":false,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/gro","private":false,"url":"https://github.com/UKHomeOffice/gro","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# GRO (General Registrars Office) [![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/gro/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/gro)\n\n## Getting Started\n\n### Prerequisities\n\n- [Node.js](https://nodejs.org/en/) - Tested against LTS\n- NPM (installed with Node.js) - Works with versions 2 and 3.\n- [Redis server](http://redis.io/download) running on the default port\n\n### Up & Running\n\n```bash\n$ cd gro\n$ npm install\n$ npm run dev\n```\n\nThen visit: [http://localhost:8080/](http://localhost:8080/)\n\n## Testing\n\n### Acceptance Tests\nWith the server running in development mode (`npm run dev`), start the acceptance tests:\n\n```bash\n$ npm run test:acceptance\n```\nPhantomjs is required to run the acceptance tests (`npm install phantomjs`), or alternatively, export `IN_BROWSER=true` to run the tests in Firefox.\n\n### Unit Tests\n```bash\n$ npm t\n```\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details\n\nThe General Registrars Office uses BrowserStack for mobile and desktop testing https://www.browserstack.com/\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/blueprint","private":false,"url":"https://github.com/UKHomeOffice/blueprint","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# blueprint\nBlueprinting system for DSP\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mailcatcher","private":false,"url":"https://github.com/UKHomeOffice/docker-mailcatcher","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Mail Catcher\n\nDocker container for [Mail Catcher](http://mailcatcher.me/)\n\n## Getting Started\n\nThese instructions will cover how to start a container both in Docker and within a [Kubernetes](http://kubernetes.io/) cluster.\n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nOptionally:\n\n* A [Kubernetes](http://kubernetes.io/) cluster to enable Kubernetes api discovery of other nodes.\n\n### Usage\n\nThe example below will run a mailcatcher container listening on port 1025 (SMTP) and 1080 (API and UI):\n\n```\ndocker run -i --rm=true \\\n       -p 1025:1025 \\\n       -p 1080:1080 \\\n       quay.io/ukhomeofficedigital/mailcatcher:v0.1.0\n```\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mailcatcher/tags).\n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mailcatcher/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n[Mail Catcher](http://mailcatcher.me/)","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-java7-mvn","private":false,"url":"https://github.com/UKHomeOffice/docker-java7-mvn","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# docker-java7-mvn\nbase docker image with java7 and maven\n\n## Usage\n\nThis docker container is intended for use in Java projects.\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-java7-mvn/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n## Build With\n\n* java-1.7.0-openjdk-devel\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/java-1.7.0-openjdk-deve/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/java-1.7.0-openjdk-deve/blob/master/LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/dspctl","private":false,"url":"https://github.com/UKHomeOffice/dspctl","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/dronescheduler","private":false,"url":"https://github.com/UKHomeOffice/dronescheduler","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Drone scheduler\n\n[![Build Status](https://drone.notprod.homeoffice.gov.uk/api/badges/UKHomeOffice/dronescheduler/status.svg)](https://drone.notprod.homeoffice.gov.uk/UKHomeOffice/dronescheduler) [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/dronescheduler/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/dronescheduler)\n\nCurrently drone doesn't support scheduled builds. Since we need to build some projects on a regular base, we have created a small container that will run a cron job and will trigger drone builds.\n\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n\n","masterBranchProtection":false},{"name":"UKHomeOffice/pingdom_tools","private":false,"url":"https://github.com/UKHomeOffice/pingdom_tools","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# pingdom_tools\nA place to put a Pingdom management tool\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/AppealRightsExhausted","private":false,"url":"https://github.com/UKHomeOffice/AppealRightsExhausted","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# AppealRightsExhausted\nA calculator to determine Appeal Rights Exhausted\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/dockerfile-validator","private":false,"url":"https://github.com/UKHomeOffice/dockerfile-validator","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# dockerfile-validator\nLittle util to check if your Dockerfile is valid according to your defined rules\n\nIt works by defining your rules in a file, `rules.yaml` for example, and running the tool against the `Dockerfile` you want to test. This tool is useful\nas a previous step to do your `docker build` to guarantee that you only build docker images that match your rules.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/HttpsClient","private":false,"url":"https://github.com/UKHomeOffice/HttpsClient","license":null,"readme":"# HttpsClient\n\nThis repository contains software to test client certificates against a web server with a configured certificate authority.\nThe assumption is that you have created an RSA private key (client.key) file and you have had a certificate signing request signed by a certificate authority making an x509 certificate (client.crt) file.\n\n## Build\n\nThis program can be built using the makefile provided.  There are commands for building OSX, Linux and Windows versions of the software.  Binaries are generated in the bin directory.  This software is built with Go 1.5.  \nAlternatively you can download the binaries you need from the bin directory.\n\n    // OSX\n    make osx\n    \n    // Linux\n    make linux\n    \n    // Windows 32 bit\n    make win32\n    \n    // Windows 64 bit\n    make win64\n\n## Usage\n\nThe httpsClient program requires three arguments:\n\n    - key  The key file created by the client.\n    - cert The certificate generated by the certificate authority.\n    - url  The url of the web server to test the client certificate against. \n \n## Example\n\n    ./httpsClient_linux -key client.key -cert client.crt -url https://www.someserver.com\n    \n    // Sample output\n    httpsClient v1.0 - UK Home Office\n    \n    STATUS\n    HTTP/1.1 200 OK\n    \n    HEADERS\n    Server: nginx\n    Date: Wed, 13 Jan 2016 10:02:52 GMT\n    Content-Type: text/plain;charset=ISO-8859-1\n    Content-Length: 7\n    Connection: keep-alive\n    X-Application-Context: application\n    \n    BODY\n    SUCCESS\n\n    \n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/keycloakjs-redirect","private":false,"url":"https://github.com/UKHomeOffice/keycloakjs-redirect","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# keycloakjs-redirect\n\n[![Build](https://travis-ci.org/UKHomeOffice/keycloakjs-redirect.png)](https://travis-ci.org/UKHomeOffice/keycloakjs-redirect)\n\n## Use case\n\nA Frontend Javascript service that integrates with the [Keycloak authentication service](http://keycloak.jboss.org/), guiding users to a login portal when a 401 Unauthorised response is received from an API.\n\n## Install\n\n```bash\n$ npm i keycloak-redirect\n```\n\n## Configuration\n\nImport the package, then use the object exposed to return the function `authenticate`, passing in all mandatory arguments: a config object, a XMLHttpRequest object, and window.\n\n```js\n    \n   import keycloakRedirect from 'keycloak-redirect';\n   \n   var config = {\n       backend: \"http://yourBackendUrl.com\",\n       clientId: \"yourClientId\",\n       keycloakUrl: \"http://yourKeycloakUrl.com\"\n   };\n   \n   keycloakRedirect.authenticate(config, new XMLHttpRequest(), $window);\n```\n\n## Run Tests\n\n```bash\n$ npm test\n```\n\n## Compile the code with babel\n```bash\n$ npm run compile\n```","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vitess","private":false,"url":"https://github.com/UKHomeOffice/vitess","license":null,"readme":"# vitess","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-sticky","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-sticky","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Nginx-sticky\n \nHack for nginx sticky sessions used for the removals project.  This is hopefully a temp thing until kubernetes supports sticky sessions based on something that isn't ClientIp\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/gds-payments","private":false,"url":"https://github.com/UKHomeOffice/gds-payments","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"This is your new Play application\n=================================\n\nThis file will be packaged with your application, when using `activator dist`.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/custom-fields-middleware","private":false,"url":"https://github.com/UKHomeOffice/custom-fields-middleware","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Custom Fields Middleware [![Build Status](https://travis-ci.org/UKHomeOffice/custom-fields-middleware.svg?branch=master)](https://travis-ci.org/UKHomeOffice/custom-fields-middleware)\n\nAdds and transforms custom fields on the response\n\n## Usage\n\nIn Express, pass the middleware to `app.use` before the router\n```js\napp.use(require('custom-fields-middleware'));\n```\n\nAssign a model to `customfields` from anywhere in your app\n```js\n\nres.customfields = {\n  id: 'foo',\n  value: 'bar'\n};\n```\n\nAssign a collection\n```js\nres.customfields = [{id: 'foo', value: 'bar'}, {id: 'bar', value: 'bar'}];\n```\n\nRead the value(s)\n```js\nres.customfields.foo // 'bar'\nres.customfields.bar // 'baz'\n```\n\n\n### Params\n\n- `id`: {String} required. The name of the value.\n- `value`: {*} required. The value to be assigned to the id.\n- `transforms`: {Array|String|Function} options. A function or list of functions to transforms the value.\n\n\n### Transforms\n\nA transform is a function that takes two arguments, the value and the request object.\n\n```js\n\nvar square (value, req) => value * value;\n\nres.customfields = {\n  id: 'foo',\n  value: 'bar',\n  transforms: [square]\n};\n```\n\nBuilt-in transforms include:\n\n- `baseurl`: prepends the value with `req.baseUrl`\n\nUse a built-in transform by passing the name to the `transforms` field.\n```js\nres.customfields = {\n  id: 'foo',\n  value: 'bar',\n  transforms: ['baseurl']\n};\n```\n\n### Install\n\n```bash\n$ npm install custom-fields-middleware --save\n```\n\n### Scripts\n```bash\n$ npm test\n```\n\n```bash\n$ npm lint\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-rtp-testing","private":false,"url":"https://github.com/UKHomeOffice/docker-rtp-testing","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/scala-presentation","private":false,"url":"https://github.com/UKHomeOffice/scala-presentation","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"Scala Presentation\n==================\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Specs2\n\nIntroduction\n------------\nExamples of using Scala as a high level introduction, but also some funky stuff as well.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nAmmonite-REPL in SBT\n--------------------\n> sbt test:console","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-caseworker-mongo-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-caseworker-mongo-lib","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"RTP Caseworker Mongo Library\n============================\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Specs2\n\n- Casbah/Salat\n\nIntroduction\n------------\nTODO\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nAmmonite-REPL in SBT\n--------------------\n> sbt test:console","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-cfn-signal","private":false,"url":"https://github.com/UKHomeOffice/kube-cfn-signal","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Kubernetes CloudFormation Signal\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/kube-cfn-signal.svg?branch=master)](https://travis-ci.org/UKHomeOffice/kube-cfn-signal)\n\nThis little utility can health check kubernetes endpoints until they become\nready and send a signal to CloudFormation API.\n\nCloudFormation allows you to set\n[CreationPolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html)\nand\n[UpdatePolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html)\nattributes on stack resources, the one we're interested in is the Autoscaling group\nresource which looks after the Kubernetes nodes.\n\nThe most useful place to use this is when you're doing AutoScaling group\nrolling updates.\n\n### Requirements\n#### IAM Instance Policy\nNormally you would want to run `kube-cfn-signal` from within an instance which\nis being created/updated. So to make things simpler, it is advisable to allow\nyour kubernetes nodes to query tags and send a signal to CloudFormation API.\n\n```json\n{\n    \"Statement\": [\n        {\n            \"Resource\": \"arn:aws:ec2:*:*:instance/*\",\n            \"Action\": [\n                \"ec2:DescribeTags\",\n            ],\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Resource\": \"arn:aws:cloudformation:*:*:stack/*/*\",\n            \"Action\": [\n                \"cloudformation:SignalResource\"\n            ],\n            \"Effect\": \"Allow\"\n        }\n    ]\n}\n```\n\n### Running\n#### Systemd Unit\n```\n[Unit]\nDescription=Kubernetes cfn signal\nDocumentation=https://github.com/UKHomeOffice/kube-cfn-signal\n\n[Service]\nType=oneshot\nPrivateTmp=true\nProtectSystem=full\nRemainAfterExit=yes\nTimeoutStartSec=10m\nExecStart=/opt/bin/kube-cfn-signal --insecure-skip-tls-verify\n```\n\n## Build\n\nDependencies are located in the vendor directory and managed using\n[govendor](https://github.com/kardianos/govendor) cli tool.\n\n```\ngo test -v -cover\n\nmkdir -p bin\nGOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags \"-X main.Version=dev+git\" -o bin/kube-cfn-signal\n```\n\n\n## Release process\n\nPush / Merge to master will produce a docker\n[image](https://quay.io/repository/ukhomeofficedigital/kube-cfn-signal?tab=tags) with a tag `latest`.\n\nTo create a new release, just create a new tag off master.\n\n\n## Contributing\n\nWe welcome pull requests. Please raise an issue to discuss your changes before\nsubmitting a patch.\n\n\n## Author\n\nVaidas Jablonskis [(vaijab)](https://github.com/vaijab)\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-galera","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-galera","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/fileproducer_kafka","private":false,"url":"https://github.com/UKHomeOffice/fileproducer_kafka","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# File Producer for Kafka\n\nThis tool is a Kafka producer to be used as a side-ckick container to push files into Kafka.\n\nAfter building the tool, you can run it using the following command:\n\n        FILE=\"file_to_be_sent\" TOPIC=\"TOPIC_USED\" PARTITION=0 BROKERS=\"localhost:9092\" CLIENT_NAME=\"mygotest\" ./file_producer\n\n\nIf you want to use the container, the command is:\n\n        docker run -e FILE=\"myfile.zip\" -e TOPIC=\"TEST_GO\" \\\n            -e PARTITION=0 -e BROKERS=\"localhost:9092\"  \\\n            -e CLIENT_NAME=\"ivantest2\" \\\n            -v $(pwd)/myfile.zip:/myfile.zip \\\n            quay.io/ukhomeofficedigital/docker-file-producer\n\n","travis":false,"contributing":"# How to contribute\n\nThis document outlines some of the conventions on commit message formatting,\ncontact points for developers and other resources to make getting your\ncontribution into DSP easier.\n\n## Contribution flow\n\nThis is a rough outline of what a contributor's workflow looks like:\n\n- Create a topic branch from where you want to base your work. This is usually master.\n- Make commits of logical units.\n- Make sure your commit messages are in the proper format (see below).\n- Push your changes to a topic branch.\n- Submit a pull request to UKHomeOffice/dsp.\n- Your PR must receive a LGTM from two people.\n\nIf unsure about your change, submit an issue to start a discussion.\n\nThanks for your contributions!\n\n### Format of the Commit Message\n\nWe follow a rough convention for commit messages that is designed to answer two\nquestions: what changed and why. The subject line should feature the what and\nthe body of the commit should describe the why.\n\n```\nscripts: add the test-cluster command\n\nthis uses tmux to setup a test cluster that you can easily kill and\nstart for debugging.\n\nFixes #38\n```\n\nThe format can be described more formally as follows:\n\n```\n<subsystem>: <what changed>\n<BLANK LINE>\n<why this change was made>\n<BLANK LINE>\n<footer>\n```\n\nThe first line is the subject and should be no longer than 70 characters, the\nsecond line is always blank, and other lines should be wrapped at 80 characters.\nThis allows the message to be easier to read on GitHub as well as in various\ngit tools.\n","masterBranchProtection":false},{"name":"UKHomeOffice/vaultctl","private":false,"url":"https://github.com/UKHomeOffice/vaultctl","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"### **Vaultctl**\n\n---\nVaultctl is a command line utilty for provisioning a Hashicorp's [Vault](https://www.vaultproject.io) from configuration files. Essentially it was written so we could source control our users, policies, backends and secrets, synchronize the vault against them and rebuild on-demand if required.\n \n##### **Build**\n---\n \n There is a Makefile in the root directory, so a simply ***make*** will build the project. Alternatively you can run the build inside a docker via ***make docker-build***\n \n##### **Usage**\n---\n \n```shell\n[jest@starfury vaultctl]$ bin/vaultctl --help\nNAME:\n   vaultctl - is a utility for provisioning a hashicorp's vault service\n\nUSAGE:\n   vaultctl [global options] command [command options] [arguments...]\n   \nVERSION:\n   v0.0.1\n   \nAUTHOR(S):\n   Rohith <gambol99@gmail.com> \n   \nCOMMANDS:\n   synchronize, sync\tsynchonrize the users, policies, secrets and backends\n   transit, tr, trans\tEncrypts / decrypts files using the Vault transit backend\n   help, h\t\tShows a list of commands or help for one command\n   \nGLOBAL OPTIONS:\n   -A, --vault-addr \"http://127.0.0.1:8200\"\tthe url address of the vault service [$VAULT_ADDR]\n   -u, --vault-username \t\t\tthe vault username to use to authenticate to vault service [$VAULT_USERNAME]\n   -p, --vault-password \t\t\tthe vault password to use to authenticate to vault service [$VAULT_PASSWORD]\n   -c, --credentials \t\t\t\tthe path to a file (json|yaml) containing the username and password for userpass authenticaion [$VAULT_CRENDENTIALS]\n   --verbose\t\t\t\t\tswitch on verbose logging for debug purposed\n   --kube-populate\t\t\t\twhether or not to populate the vault crendentials into the namespaces\n   --help, -h\t\t\t\t\tshow help\n   --version, -v\t\t\t\tprint the version\n``` \n\n##### **Configuration**\n\nThe configuration files for vaultctl can be written in json or yml format *(note, it check the file extension to determine the format)*. You can specify multiple configuration files and or multiple directories containing config files. \n\n###### - **Authentication**\n\nAuthentication backends can be created using the following\n\n```YAML\nauths:\n- path: userpass\n  type: userpass\n- path: some/path/users\n  type: userpass\n- path: github\n  type: github\n  attributes:\n  - uri: config\n    organization: SomeOrganization\n```\n\n###### - **Users**\n\nUsers are place in a users: [] collection, the vault authentication type *(at present only userpass is supported, though it would be trivial to add more)* followed by the policies associated to the user\n\n```YAML\nusers:\n- userpass:\n    username: rohithj\n    password: password1\n  policies:\n    - common\n    - platform_tls\n```\n\n###### - **Backends**\n\nThe backends are defined under the 'backends[]' collection, each backend must have a path *(i.e. a mount point)*, a type which is the Vault backend type, a description *(which is enforced)* and an optional collection of config items. Keeping it simple the config[] is essentially a series of PUT requests. You can grab the configuration options and the uri from the Vault documentation. Note. an extra option *'oneshot'* been added, it simply means the config option will ONLY is run the first time the backend is created, which is useful for some backends like PKI, transit etc.\n\n```YAML\nbackends:\n- type: transit\n  path: platform/encode\n  description: A transit backend used to encrypt configuration files\n  attributes:\n  - uri: keys/default\n    oneshot: true\n- type: generic\n  path: platform/secrets\n  description: platform secrets\n- path: platform/platform_tls\n  description: platform tls\n  type: generic\n- path: platform/pki\n  type: pki\n  description: Platform PKI backend\n  attributes:\n  - uri: root/generate/internal\n    common_name: example.com\n    ttl: 3h\n    oneshot: true\n  - uri: roles/example-dot-com\n    allowed_domains: example.com\n    allow_subdomains: true\n    max_ttl: 1h \n# one of the annoying things about the mysql backend is it attempts to connect to the db when\n# adding the config/connection config??\n- path: platform/db\n  type: mysql\n  description: Platform Database\n  attributes:\n  - uri: config/connection\n    value: root:root@tcp(127.0.0.1:3306)/\n    oneshot: true\n  - uri: roles/readonly\n    sql: CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT SELECT ON *.* TO '{{name}}'@'%'\n```    \n\n###### - **Secrets**\n\n```YAML\nsecrets:\n  - path: platform/secrets/platform_tls\n    values:\n      hello: world\n      rohith: yes\n  - path: platform/secrets/se1\n    values:\n      hello: world\n      rohith: yes\n```      \n\n###### - **Example Output**\n\n```shell\n[jest@starfury vaultctl]$ bin/vaultctl -u admin -p password  sync -p tests/policies -c platform.yml\nINFO[0000] -> synchronizing the vault policies, 3 files \nINFO[0001] [policy: common.hcl] successfully applied the policy, filename: tests/policies/common.hcl \nINFO[0001] [policy: platform.hcl] successfully applied the policy, filename: tests/policies/platform.hcl \nINFO[0001] [policy: platform_tls.hcl] successfully applied the policy, filename: tests/policies/platform_tls.hcl \nINFO[0001] -> synchronizing the vault users, users: 1 \nINFO[0001] [user: rohithj] ensuring user, policies: root \nINFO[0001] -> synchronizing the backends, backend: 2 \nINFO[0001] [backend: platform/encode]: already exist, moving to configuration \nINFO[0001] [backend:platform/encode/keys/default] skipping the config, as it's a oneshot setting \nINFO[0001] [backend: platform/secrets]: already exist, moving to configuration \nINFO[0001] -> synchronizing the secrets with vault, secrets: 0 \nINFO[0001] synchronization complete, time took: 1.733908869s \n```\n\n#### **Transit Encryption**\n---\nThe sub-command 'transit' permits you to encrypt and decrypt the file contents using a [Vault transit](https://www.vaultproject.io/docs/secrets/transit/index.html) backend. The current use case being we hand off management to others to manage their our namespaces, secret, backends etc and behold a generic endpoint for encryption. \n\n##### **TODO**\n---\n\n- Need to finish off the Kubernetes intregetion to place the vault credentials in k8s secrets.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vault-web-client","private":false,"url":"https://github.com/UKHomeOffice/vault-web-client","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Vault webclient\n\n\nThis client is a lightweight web interface to interact with Vault.\n\n\nTo install it you have to run the usual javascript suspects:\n\n```\nnpm install\nbrower install bootstrap\n\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-zookeeper","private":false,"url":"https://github.com/UKHomeOffice/docker-zookeeper","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Zookeeper on Kubernetes\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/zookeeper/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/zookeeper)\n\nBits you need to run Zookeeper cluster on Kubernetes. It is based on Zookeeper\nversion 3.5.x which is currently in alpha, but it's been pretty stable.\n\n\n### Deployment\nBy default, if you don't specify any parameters, zookeeper will start in\nstandalone mode.\n\nDeploying onto a Kubernetes cluster is fairly easy. There are example\nkubernetes controller and service files in [kube/](kube/) directory.\n\nIn the service yaml files, you will notice that we asked for static\n`ClusterIP`, in this example case, we're using `10.200.0.0/16` service IP\nrange. It is very likely that your estate is configured to use different\nservice IP range, so be sure you set the right IPs.\n\nZookeeper itself relies on the following DNS names for find its peers:\n- `zookeeper-1`\n- `zookeeper-2`\n- `zookeeper-3`\n\n\n#### Deploy Services\nThere is no strict ordering how you deploy the resources, let's start with\nservices first:\n\n```bash\n$ kubectl create -f kube/zookeeper-service.yaml\n$ kubectl create -f kube/zookeeper-1-service.yaml\n$ kubectl create -f kube/zookeeper-2-service.yaml\n$ kubectl create -f kube/zookeeper-3-service.yaml\n```\n\nLet's list the services. There are four services, `zookeeper` service is\npointing to all zookeeper instances - for clients to use. The rest are pointing\nto each relevant zookeeper pod.\n\n```bash\n$ kubectl get services\nNAME          CLUSTER_IP       EXTERNAL_IP   PORT(S)                      SELECTOR                          AGE\nzookeeper     10.200.143.219   <none>        2181/TCP                     service=zookeeper                 4h\nzookeeper-1   10.200.10.31     <none>        2181/TCP,2888/TCP,3888/TCP   name=zookeeper-1,zookeeper_id=1   23h\nzookeeper-2   10.200.10.32     <none>        2181/TCP,2888/TCP,3888/TCP   name=zookeeper-2,zookeeper_id=2   23h\nzookeeper-3   10.200.10.33     <none>        2181/TCP,2888/TCP,3888/TCP   name=zookeeper-3,zookeeper_id=3   23h\n```\n\n\n#### Deploy Replication Controllers\n\n```\n$ kubectl create -f kube/zookeeper-1-controller.yaml\n$ kubectl create -f kube/zookeeper-2-controller.yaml\n$ kubectl create -f kube/zookeeper-3-controller.yaml\n```\n\nGet the pods:\n```\n$ kubectl get pods\nNAME                READY     STATUS    RESTARTS   AGE\nzookeeper-1-w3u4g   1/1       Running   0          9m\nzookeeper-2-kpwaj   1/1       Running   0          9m\nzookeeper-3-vcl94   1/1       Running   0          9m\n```\n\n#### Test the Cluster\n\nNow, let's see if our zookeeper cluster is healthy. First, we will set `/foo`\nkey to `bar`, then kill the Pod and try to get `/foo` from another zookeeper\ninstance:\n\n```bash\n$ kubectl exec -ti zookeeper-1-w3u4g bash\n\n[root@zookeeper-1-w3u4g zookeeper]# bin/zkCli.sh\n[zk: localhost:2181(CONNECTED) 1] create /foo bar\nCreated /foo\n[zk: localhost:2181(CONNECTED) 2] get /foo\nbar\n```\n\nDelete the pod we just used to set the `/foo` value:\n```\n$ kubectl delete zookeeper-1-w3u4g\n$ kubectl exec -ti zookeeper-3-vcl94 bash\n\n[root@zookeeper-3-vcl94 zookeeper]# bin/zkCli.sh\n[zk: localhost:2181(CONNECTED) 0] get /foo\nbar\n```\n\nThis just shows that if one node dies, the cluster is still functioning and the\ndeleted pod will be re-created by the replication controller.\n\n### Known Caveats\n\nBy default there is no data persistence. So be aware that if you delete more\nthan one replication controller or more than one pod, you will lose the quorum.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mongo","private":false,"url":"https://github.com/UKHomeOffice/docker-mongo","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# docker-mongo\nDocker container for Mongo\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rest-experian-qas-internet","private":false,"url":"https://github.com/UKHomeOffice/rest-experian-qas-internet","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"\n# rest-experian-qas-internet\n\nAddress Lookup for the Passport Office Renewals application.\n\nThis project implements the address lookup service for the Passport Office Renewals application - using Java, the DropWizard framework, and Maven for building.\n\nThe Passport Office Renewals application allows people to renew their passports online.\n\nFor address lookup the service uses the QAS Experian 'On Demand' SOAP web service. The service provides a WSDL, and we use the Apache CXF framework to generate and provide Java wrapper classes for the functions exposed in the WSDL.\n\nThis address lookup service provides a RESTful abstraction over the SOAP web service, for use by the passport exemplar frontend application.\n\nYou will need valid credentials to use the web service. Credentials are configured in the service's 'configuration.yml' configuration file.\n\n## Prerequisites\n\n* Git\n* Oracle Oracle Java 8 JDK/OpenJDK 8\n* Maven (version 3.0 or above)\n* Credentials for using the QAS OnDemand web service\n\n## Build and Deploy\n\nUsing Maven:\n\n```\n$ mvn clean package\n```\n\n## Configuration\n\nBefore you can run the service you need to configure it.\n\nYou probably want to create your own configuration file that is a copy of `configuration.yml` and call it `configuration_development.yml`, and then edit that.\n\n## Running the service\n\nExecute the jar file, providing 'server' and the name of the configuration file as arguments.\n\nFrom the command line (example):\n\n```\n$ java -jar target/rest-experian-qas-internet-0.1.jar server configuration_development.yml\n```\n\n## Example responses\n\n### Swagger\n\nThe most fun way to see responses from the api is to visit `http://your-hostname:9190/swagger` in your browser and run \nsome commands through the swagger client.\n\nNote: To prevent csrf, you can only use swagger from the host that drop wizard thinks it's hosted at. This is probably\nthe hostname of your machine, rather than localhost.\n\n### Wget\n\nIf you prefer you can also use wget\n\n#### Search\n\n```\nwget -O- http://localhost:9190/addresses.json?postcode=N19%205BW\n```\n```\n[{\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|xxxxxxxx.vkgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",    \n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Larch Close, Islington, London N19 5BW\"\n}, {\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|xxxxxxxx.yUgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",\n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Marlborough Road, Islington, London N19 5BW\"\n}, {\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|xxxxxxxx.1EgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",\n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Rowan Walk, Islington, London N19 5BW\"\n}, {\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|xxxxxxxx.sUgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",\n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Alder Mews, Islington, London N19 5BW\"\n},\n... \n{\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|0.xxxxxxxx..2QAAAAA.....wAAAAAAAAAAAE4xOSA1QlcA\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",\n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Flat C, 43 Bredgar Road, Islington, London N19 5BW\"\n}]\n```\n\n#### Get\n\n```\nwget -O- http://localhost:9190/addresses/APR%xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04%7C0KOAPRCwfeBwAAAAABAwEAAAAD0l.sUgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--.json\n```\n\n```\n{\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|0KOAPRCwfeBwAAAAABAwEAAAAD0l.sUgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: \"10008979790\",\n    lines: [\n        \"Alder Mews\"\n    ],\n    town: \"LONDON\",\n    postcode: \"N19 5BW\",\n    easting: \"529252.00\",\n    northing: \"186643.00\",\n    country: \"United Kingdom\",\n    dependentLocality: \"\",\n    dependentThroughfare: null,\n    administrativeArea: \"Islington\",\n    localAuthorityUpdateDate: \"2013-04-16\",\n    royalMailUpdateDate: \"\",\n    partial: null\n}\n```\n## Testing\n\n### Run Unit Tests\n\n```\nmvn clean install\n```\n\n### Run Integration Tests (and Unit Tests)\n\n**WARNING:  the integration tests make actual API calls to the service.**\n\nIntegration tests are not run by default. Enable them by setting th skipITests parameter to false\n\n```\nWCRS_ADDRESS_USER=usernameHere WCRS_ADDRESS_PASSWORD=passwordHere mvn clean install -DskipITests=false\n```\n\nThe environment variables (WCRS_ADDRESS_USER, and WCRS_ADDRESS_PASSWORD) need to be set to your password on QAS \nProOnDemand, and the ones in configuration will ibe ignored.\n\n## Vagrant\n\nThis project is setup with a vagrant file. The vagrant file has two boxes, `web` and `proxy`. These might be useful for \ndebugging problems you're having with the proxy.\n\nTo start them type:\n\n```\nvagrant up\n```\n\nTo connect to one of them, for example web:\n\n```\nvagrant ssh web\n```\n\nOnce connected, you'll find the directory that this README.md is located in mounted on `/vagrant`\n\n### Web\n\nWeb is the box that you'll want to do your building and running on.\n\nThe IP Address is: `192.xxx.xx.xx`\n\nYou cannot directly connect to the Experian API from this box, as on the live system, you must connect through the proxy box.\n\n### Proxy\n\nProxy just runs squid and you can talk to the Experian API through it.\n\nThe IP Address is: `192.xxxx.xxxx.xxx`\n\nSquid is running on port `xxxx` and accepts connections from `192.xxx.x.x/xx`\n \n## FAQ\n\n### Changing the port from the command line\n\nSet the config variables `dw.server.applicationConnectors[0].port` (for the frontend) and `dw.server.adminConnectors[0].port` for the admin panel to the ports you want them to run on\n\n```\njava -jar -Ddw.server.applicationConnectors[0].port=xxxx -Ddw.server.adminConnectors[0].port=xxxx target/rest-experian-qas-internet-0.1.jar server configuration_development.yml\n```\n \n### Proxy Support\n\nIf for example your proxy does not have a username and password, and is running at 192.168.91.10, on port 3128 you add \nthe following java parameters `-Dhttp.proxyHost=192.xx.xx.x -Dhttp.proxyPort=3128 -Dhttps.proxyHost=192.xx.xx.x -Dhttps.proxyPort=xx` see below for specific examples.\n\n#### Running maven with a proxy\n\n```\nmvn -Dhttp.proxyHost=192.xx.xx.xx -Dhttp.proxyPort=xx -Dhttps.proxyHost=192.xx.xx.xx -Dhttps.proxyPort=xx clean install\n```\n \n#### Running service with a proxy \n \n```\njava -Dhttp.proxyHost=192.xx.xx.xx -Dhttp.proxyPort=xx -Dhttps.proxyHost=192.xx.xx.xx -Dhttps.proxyPort=xx -jar target/rest-experian-qas-internet-0.1.jar server configuration_development.yml\n```\n\n## Common Errors \n\n### Incorrect Username and/or password\n\nIf you get the username or password wrong, you'll see a error similar to this in your stack trace.\n\n```\nERROR [2014-08-21 09:41:14,836] com.yammer.dropwizard.jersey.LoggingExceptionMapper: Error handling a request: xxx\n! javax.xml.ws.soap.SOAPFaultException: Authentication failure (User name: your_username_here). (xxxx-xxxx-xxxx-xxxx-xxxx)\n```\n \n## Related Resources\n\n* The passport office frontend application, which is implemented in Node.JS Express, is the client of the services exposed by this application. \n* DropWizard framework: http://dropwizard.codahale.com\n* Apache Maven: http://maven.apache.org\n\n\n## License\n\nGNU General Public License version 3 (GPL v3)\n\n## Support\n \nUk.support.qas@experian.com\n \nWebsite: http://support.qas.com\n\nTel: 020 7498 7788\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rest-payments","private":false,"url":"https://github.com/UKHomeOffice/rest-payments","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# rest-payments\nJava Dropwizard REST API to interface with ATOS payments with duplicate payment protection\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hodac-style-guide","private":false,"url":"https://github.com/UKHomeOffice/hodac-style-guide","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"UI prototype boilerplate with GOV.UK sass stylesheets\n=====================================================\n\nA starter project including full setup for Jekyll, GulpJS, SASS, AutoPrefixer and BrowserSync\n\n## System Preparation\n\nTo use this starter project, you'll need the following things installed on your machine.\n\n1. [Jekyll](http://jekyllrb.com/) - `$ gem install jekyll`\n2. [NodeJS](http://nodejs.org) - use the installer.\n3. [GulpJS](https://github.com/gulpjs/gulp) - `$ npm install -g gulp` (mac users may need sudo)\n\n## Local Installation\n\n1. Clone this repo, or download it into a directory of your choice.\n2. Install Docker:https://www.docker.com/\n\n## Usage\n\n**development mode**\n\nThis will give you file watching, browser synchronisation, auto-rebuild, CSS injecting etc etc.\n\n\n*Build the docker image*\n\n```shell\n$ make\n```\n\n*Run docker image*\n\n```shell\n$ docker-compose up\n```\n\n## Project Structure\n\nMarkdowns files for the solution can be found in the following folders:\n\n1. _common\n2. _project-*\n\n\n## Integration with other applications\n\nPlease import the:\n https://github.com/UKHomeOffice/hodac-style-guide.git#master repository\n\nCopy all the assets, as reference please look at the Gulp file.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-kafka","private":false,"url":"https://github.com/UKHomeOffice/docker-kafka","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Kafka on Kubernetes\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/kafka/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/kafka)\n\nBits you need to run Kafka cluster on Kubernetes. It is based on Kafka\nversion 0.9.x.\n\nKafka requires access to a zookeeper cluster. We run zookeeper in Kubernetes\ntoo, take a look here: https://github.com/UKHomeOffice/docker-zookeeper.\n\n\n### Configuration\n* `ZOOKEEPER_CONNECT` - a comma separated list of zookeeper `node:port` pairs.\n  Default: `localhost:2181`.\n* `BROKER_ID` - Kafka broker.id. Default: `unset`. If unset, Kafka will get\n  zookeeper to allocate one.\n* `ADVERTISED_HOSTNAME` - what address to advertise to other brokers and\n  producers/consumers. Default: `unset`. If `unset`, Kafka uses the hostname.\n* `NUM_PARTITIONS` - Number of partitions by default. Default: `1`.\n* `DEFAULT_REPLICATION_FACTOR` - Default replication factor. Default: `unset`.\n\n\n### Deployment\nBy default, if you don't specify any parameters, kafka will start in\na single broker mode.\n\nDeploying onto a Kubernetes cluster is fairly easy. There are example\nkubernetes controller and service files in [kube/](kube/) directory.\n\n\n#### Deploy Services\nThere is no strict ordering how you deploy the resources, let's start with\nservices first:\n\n```bash\n$ kubectl create -f kube/kafka-service.yaml\n$ kubectl create -f kube/kafka-1-service.yaml\n$ kubectl create -f kube/kafka-2-service.yaml\n$ kubectl create -f kube/kafka-3-service.yaml\n```\n\n\n#### Deploy Replication Controllers\n\n```\n$ kubectl create -f kube/kafka-1-controller.yaml\n$ kubectl create -f kube/kafka-2-controller.yaml\n$ kubectl create -f kube/kafka-3-controller.yaml\n```\n\n\n### Known Caveats\n\nBy default there is no data persistence. So be aware that if you delete more\nthan one replication controller or more than one pod, you may end up losing\ndata.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-logger","private":false,"url":"https://github.com/UKHomeOffice/rtp-logger","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# rtp-logger  [![Build Status](https://img.shields.io/travis/UKHomeOffice/rtp-logger.svg)](https://travis-ci.org/UKHomeOffice/rtp-logger)\n\nThin wrapper around [winston](https://www.npmjs.com/package/winston) for use in Registered Traveller Programme node.js applications.\n\n## Usage\n\nTo use the logger simply add **rtp-logger** to your dependencies in the `package.json` and then require it in your main javascript file.\n\nThe default are as follows: -\n- Console transport logging to stdout and stderr\n- Log level = debug\n- Include timestamps on log entries\n\n``` \n  logger.info('message');\n```\n\nTo log objects, simply pass an additional parameter to the logging function. This will be Stringified using the `util.inspect` module\n\n\n``` \n  logger.error('message', {'key': 'value});\n```\n\n### Configuration\n\nTo configure the logger further you can use the `setup()` function, passing an object. Below is an example of the options that can be used: -\n\n``` JavaScript\n{\n    loglevel: 'info',\n    appName: 'MY-APP', // will appear as [MY-APP] in log entries\n    transports: {\n        console: {\n            // any valid winston config options when creating a console transport\n            timestamp: false,\n            debugStdout: false\n        }\n    }\n}\n```\n\n## Run tests\n\nThe unit tests are written in mocha and can be run using npm. \n```\nnpm test\n```\n\nYou can also run the tests using grunt. Before running the unit tests it will perform a run jshint and jscs. From the project root, run the following: -\n\n```\ngrunt dev\n```\n\nIf you would like to watch all javascript files and automatically re-run jshint, jscs and mocha you can use the following: -\n\n```\ngrunt watch\n```\n\n## File transport\n\nFile logging is not currently a requirement as all logs file are created from stdout and stderr and will be for the foreseeable future. However, the code to handle configuration of a file transport was written and is available in the `file-transport` branch. Should this be required at a later date, it could be merged into the master branch and used.\n\nTo configure the logger with a file transport you can use the `setup()` function, passing an object. Below is an example of the options that can be used: -\n\n``` JavaScript\n{\n    logLocation: '/log/test.log'\n    transports: {\n        file: {\n            // any valid winston config options when creating a file transport\n            filename: 'some-log-file.log', // this would override logLocation\n            timestamp: false,\n            maxsize: 128,\n            maxFiles: 1\n        }\n    }\n}\n```\n\nThe existence of `logLocation` or `transports.file` in the config will trigger the addition of a file transport to the logger.\n\nIf only `logLocation` is present then the default config for a file transport will be used, this is as defined here.\n\n``` JavaScript\n{\n    filename: // logLocation or 'app.log'\n    timestamp: true,\n    maxsize: 10240,\n    maxFiles: 3\n}\n```\n\nThe Registered Traveller Programme uses BrowserStack for mobile and desktop testing https://www.browserstack.com/\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/eslint-config-homeoffice","private":false,"url":"https://github.com/UKHomeOffice/eslint-config-homeoffice","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n","masterBranchProtection":false},{"name":"UKHomeOffice/rtp-hof-spike-form","private":false,"url":"https://github.com/UKHomeOffice/rtp-hof-spike-form","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"[![Build Status](https://travis-ci.org/UKHomeOffice/hof-example-form.svg?branch=master)](https://travis-ci.org/UKHomeOffice/hof-example-form)\n\n# Home Office Forms Example Form\n\nIn order to provide a starting point for people using the [home office forms toolkit](https://github.com/UKHomeOffice/hof) this app aims to give a simple example of how to use the module. We encourage users to clone this repository in order to provide a starting point for their own forms.\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisities\n\nWhat things you need to install the software and how to install them\n- NodeJS\n- npm (version 3 is not yet supported, please use version 2)\n- Redis server running on the default port\n\n### Installing\n\n```bash\n$ cd hof-example-form\n$ npm install\n$ npm run dev\n```\n\nGo to http://localhost:8080/my-awesome-form\n\n## Running the tests\nYou will need the server running to run the cucumber tests against.\n\n```bash\n$ cd acceptance_tests\n$ bundle install\n$ cucumber -r features\n```\n\nYou will need phantomjs installed to run tests. Alternatively you can export IN_BROWSER=true to run the tests in firefox.\n\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags). \n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-hof-spike-mongo","private":false,"url":"https://github.com/UKHomeOffice/rtp-hof-spike-mongo","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-kibana","private":false,"url":"https://github.com/UKHomeOffice/docker-kibana","license":null,"readme":"# Kibana 5.5.1\n\n## Configuration\nConfiguration is done via environment variables.\n\n* `ELASTICSEARCH_URL`: ElasticSearch url. Default: `http://localhost:9200`.\n* `ELASTICSEARCH_CERTIFICATE_VERIFICATION`: Whether to verify elasticsearch certificate. Default: `true`\n* `ELASTICSEARCH_SSL_CA_CERT_PATH`: (Optional) Path to the PEM file for the certificate authority for your Elasticsearch instance.\n* `ELASTICSEARCH_USERNAME`: (Optional) Elasticsearch username for Kibana. Default: `\"\"`.\n* `ELASTICSEARCH_PASSWORD`: (Optional) Elasticsearch password for Kibana user. Default: `\"\"`.\n* `XPACK_SECURITY_ENABLE`: Whether to enable X-Pack security plugin. Default: `false`.\n* `XPACK_SECURITY_ENCRYPTION_KEY`: Required if X-Pack security enabled. An arbitrary string of 32 characters or more used to encrypt credentials in a cookie. It is crucial that this key is not exposed to Kibana users. Default: (randomly generated UUID).\n* `XPACK_SECURITY_SECURE_COOKIES_ENABLE`: Whether to enable secure cookies. Default: `false`. Read more [here](https://www.elastic.co/guide/en/x-pack/5.1/kibana.html#security-ui-settings)\n* `XPACK_MONITORING_ENABLE`: Whether to enable X-Pack monitoring features. Default: `false`.\n* `XPACK_MONITORING_REPORT_STATS`: Whether or not to send cluster statistics to Elastic. Default: `false`.\n* `XPACK_GRAPH_ENABLE`: Whether to enable X-Pack graph features. Default: `false`.\n* `XPACK_ML_ENABLE`: Whether to enable X-Pack machine learning features. Default: `false`.\n* `XPACK_REPORTING_ENABLE`: Whether to enable X-Pack reporting features. Default: `false`.\n\n## Plugins\n\n### X-Pack\nSee documentation: https://www.elastic.co/guide/en/x-pack/current/index.html\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/dropwizard-smart-logging-bundle","private":false,"url":"https://github.com/UKHomeOffice/dropwizard-smart-logging-bundle","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# Dropwizard Smart Logging Bundle\n\n## Changelog\n\nv0.4.9: Considering only GET requests for healthcheck URLs\nv0.4.8: Configurable healthcheck URLs\nv0.4.6: Not swallowing root cause of exception\n\n## Why\n\nAPIs are great. Microservices are great. But how do we keep track of a user who uses multiple APIs throughout a session? \nOne approach is to add an additional value to each request i.e. user_id or session_id. This forces every API call to have \nan additional id attached to it (if available) and somewhere in the code we need to assign this to a log message.\n\nWouldn't it be easier to let an API client send identifiable information to the host via a header?\n\nIt would also be nice to be able to configure some extra fields to appear in every log message.\n\n## How\n\nAdd the corresponding configuration to your config file (MyServiceConfiguration in this example) and implement interface\n\n```java\n\n    public class MyServiceConfiguration extends Configuration implements PrependLogConfiguration\n    \n    @JsonProperty\n    private SmartLogging smartLogging;\n```\n\nSpecify what header and any extra fields you want to log in your requests by adding this to your configuration:\n\n```YAML\nsmartLogging:\n    useHeader: X-REQ-ID\n    extraFields:\n      someExtraKey: someExtraValue\n    \n    requestLoggingFilter:\n      excluded: \n        - \"^/healthcheck$\"\n\n```\n\nThis bundle can be added to a dropwizard app using:\n\n```Java\n    @Override\n    public void initialize(Bootstrap<MyServiceConfiguration> bootstrap) {\n        bootstrap.addBundle(new PrependLogBundle());\n    }\n```\n\n## Clearing MDC on each request\n\nThis is important to avoid MDC context leaking through request threads.\n\n```Java\n    @Override\n    public void initialize(Bootstrap<MyServiceConfiguration> bootstrap) {\n        bootstrap.addBundle(new MdcClearingBundle());\n    }\n```\n\n## Json logging\nThis bundle now includes (as of version 0.4.3) a json logging encoder which produces logs formatted for logstash. To use simply define a json appender in your dropwizard config file as follows.\n\nAdd your new log format to your chosen appender\n\n```YAML\n- \n    type: json\n    appname: my-name\n    apphostname: localhost\n    appsecurityzone: dap\n    apptype: dropwizard\n    appenvironment: dev\n    threshold: DEBUG\n    currentLogFilename: ./logs/rest-dap-application-store.log\n    archivedLogFilenamePattern: ./logs/rest-dap-application-store-%d.log.gz\n    archivedFileCount: 5\n```\n\n## Security\n\nBe careful of what you log, make sure you validate headers to ensure your logs don't become a potential attack\nvector.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-logger","private":false,"url":"https://github.com/UKHomeOffice/passports-logger","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-logger\nConsistent logging for hmpo apps\n\n## Usage\n\nTop level logging configuration:\n```javascript\nvar hmpoLogger = require('hmpo-logger');\nhmpoLogger.config();\n\nvar app = require('express')();\napp.use(hmpoLogger.middleware());\n```\n\nLogging messages:\n```javascript\nvar logger = require('hmpo-logger').get();\n\nlogger.log('error', 'This is an error');\nlogger.warn('This is a warning');\nlogger.warn('This is an %s warning', 'interpolated');\nlogger.info('This is just info with :meta', {meta: 'metavalue'});\nlogger.info(':method :url took :responseTime ms and was res[content-length] bytes', {req: req, res: res});\n\nlogger.log('info', 'response :responseText', { responseText: logger.trimHtml(htmlBody, 100)});\n```\n\n\n### `get(name)`\n\nGet a named winston logger. The name is prepended to the log entry messages.\n\n```javascript\nrequire('hmpo-logger').get(name);\n```\n\nIf name is ommited it is guessed from the nearest package.json file found in the calling package.\n```javascript\nrequire('hmpo-logger').get();\n```\n\nIf name begins with a colon it is appended to the guessed name.\n```javascript\nrequire('hmpo-logger').get(':subname');\n```\nReturns a `winston` logger.\n\n### `logger.trimHtml(text, maxLength)`\n\nTrim tags out of an HTML string to help with more concise HTML error response logging. Defaults to a `maxLength` of 400.\n\nReturns a string, or passes through `text` if not a string.\n\n```javascript\nrequire('hmpo-logger').get(name);\n```\n\n\n### `config(options)`\n\nInitialise the logger at the top level of the app, specifying the log locations and logging levels of three pre-defined transports: console, app, and error.\n\n```javascript\nvar hmpoLogger = require('hmpo-logger');\nhmpoLogger.config({ // defaults:\n    console: true,\n    connsoleJSON: false,\n    consoleLevel: 'debug',\n    consoleColor: true,\n    app: './app.log',\n    appJSON: true,\n    appLevel: 'info',\n    error: './error.log',\n    errorJSON: true,\n    errorLevel: 'exceptions',\n    meta: {\n        host: 'host',\n        pm: 'env.pm_id',\n        sessionID: 'sessionID',\n        method: 'method',\n        request: 'request'\n    },\n    requestMeta: {\n        clientip: 'clientip',\n        uniqueID: 'req.x-uniq-id',\n        remoteAddress: 'connection.remoteAddress',\n        hostname: 'hostname',\n        port: 'port',\n        response: 'statusCode',\n        responseTime: 'responseTime',\n        httpversion: 'version',\n        bytes: 'res.content-length'\n    },\n    logPublicRequests: false,\n    logHealthcheckRequests: false,\n    sizeRotate: false,\n    dateRotate: false,\n    maxSize: 50 * 1024 * 1024,\n    maxFiles: 5,\n    format: ':clientip :sessionID :method :request HTTP/:httpVersion :statusCode :res[content-length] - :responseTime ms'\n});\n```\n\nReturns `hmpoLogger`.\n\n### `middleware()`\n\nLog incomming requests from an `express` app.\n\n```javascript\nvar hmpoLogger = require('hmpo-logger');\n\nvar app = require('express')();\napp.use(hmpoLogger.middleware());\n```\n\nReturns express compatible middleware\n\n## Rotating Logfiles\n\nThe config supports native winston log rotation based on file size and adds rotation based on the date. Both options cannot be specified at the same time. The settings apply to both the app and error log files.\n\n### Rotating based on size\n```\n  sizeRotate: true,\n  maxSize: 50 * 1024 * 1024, // limit file to 50MB\n  maxFiles: 5, // keep 5 rotated files\n```\nThe names of the log files will be incremented based on the log filename, eg:\n```\n/path/name.log\n/path/name.1.log\n/path/name.2.log\n```\n\n### Rotating based on date\n```\n  dateRotate: true,\n  maxFiles: 5, // keep 5 rotated files\n```\nThe names of the log files will include the year, month, and day and will be based on the log filename, eg:\n```\n/path/name.log\n/path/name-2016-10-02.log\n/path/name-2016-10-01.log\n/path/name-2016-09-31.log\n```\n\n### Additional winston transport options\nWinston options can be specified for the wrapped winston transports. These will override any options set by `hmpo-logger`, eg:\n```\n  consoleOptions: { // Console transport options\n    stderrLevels: [ 'error' ]\n  },\n  appOptions: { // File transport options\n    eol: '\\t\\n',\n  },\n  errorOptions: { // File transport options\n    maxRetries: 4    \n  }\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-email-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-email-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"RTP Email Library - Scala library to work with Emails\n==============================================================\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```bash\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```bash\nbrew install typesafe-activator\n```\n\nTo compile:\n```bash\nsbt compile\n```\n\nor\n```bash\nactivator compile\n```\n\nTo run the specs:\n```bash\nsbt test\n```\n\nThe following packages up this library - Note that \"assembly\" will first compile and test:\n```bash\nsbt assembly\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vault-sidekick-pkcs12","private":false,"url":"https://github.com/UKHomeOffice/vault-sidekick-pkcs12","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Vault sidekick pkcs12\n\nSidekick container to run it in Kubernetes as part of a `Pod`. It receives some parameters that will allow to connect to a Vault instance, pull a certificate,\nformat it as `pkcs12` and add it to a java keystore.\n\n\n## Parameters\n\n* VAULT_TOKEN = token the can be used to access vault\n* VAULT_HOST = the ELB / host of vault\n\n* SERVICE =  the name of the service so the cert will be for SERVICE.DOMAIN\n* DOMAIN = the subdomain this is to be under (if blank try and find it)\n\nto run it:\n\ndocker run -it  \\\n     -e VAULT_TOKEN=$VAULT_TOKEN \\\n     -e VAULT_HOST=$VAULT_HOST \\\n     -e SERVICE=$SERVICE \\\n     -e DOMAIN=$DOMAIN \\\n            quay.io/ukhomeofficedigital/vault-sidekick-pkcs\n\n\nKeystore location is located at `/etc/ssl/certs/java/cacerts`\n\n\n\ndocker run -it  \\\n     -e VAULT_TOKEN=$VAULT_TOKEN \\\n     -e VAULT_HOST=$VAULT_HOST \\\n     -e SERVICE=www \\\n            quay.io/ukhomeofficedigital/vault-sidekick-pkcs\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vaultjks","private":false,"url":"https://github.com/UKHomeOffice/vaultjks","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Vault JKS\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/vaultjks/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/vaultjks)\n\nA simple script to fetch a CA and request certificates from vault and stick\nthem into JAVA keystore files.\n\n### Requirements\nA working vault server and PKI backend mounted with long enough TTLs.\n\n### Configuration\n- `VAULT_ADDR` - Vault address. Required.\n- `VAULT_AUTH_FILE` - If specified, this file will be sourced. This file can\n  contain VAULT_TOKEN or VAULT_USER and VAULT_PASSWORD.\n- `VAULT_TOKEN` - If specified, the token will be used for auth.\n- `VAULT_USER` - If `VAULT_TOKEN` is unset, then this needs to be set.\n- `VAULT_PASSWORD` - Required if `VAULT_TOKEN` is not being used.\n- `VAULT_PKI_PATH` - Vault pki backend mount path. Default: `shared/pki`.\n- `VAULT_ROLE_NAME` - Vault pki backend role for requesting a new cert. Default: `cert-request`.\n- `CERT_COMMON_NAME` - Certificate request CN. Default: `localhost`.\n- `IP_SAN` - IP address to add to ip_sans. Default: `$(hostname -i)`.\n- `ALT_NAMES` - Requested Subject Alternative Names, in a comma-delimited list.\n  These can be host names or email addresses; they will be parsed into their\n  respective fields.\n- `IMPORT_SYSTEM_TRUSTSTORE`: If `true`, import `/etc/pki/java/cacerts` into a `TRUSTSTORE_FILE`. Default: `true`.\n- `TRUSTSTORE_FILE` - Where to write truststore file. Default: `truststore.jks`.\n- `KEYSTORE_FILE` - Where to write keystore file. Default: `keystore.jks`.\n- `SLEEP_FOREVER` - If set to `true`, `run.sh` will sleep forever after it\n  successfully created keystores. This can be useful if vaultjks is run as part\n  of a kubernetes pod.\n\n\n### Running\n```bash\n$ docker run -ti \\\n  -e VAULT_ADDR=https://vault:8200 \\\n  -e VAULT_TOKEN=44eecf54-5b01-4bd5-a8c4-f4032b9e7e10 \\\n  -v /keystore:/data \\\n  quay.io/ukhomeofficedigital/vaultjks:v0.0.4\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-amazon-sqs-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-amazon-sqs-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"RTP Amazon SQS and ElasticMQ Library\n====================================\nScala library to interact with Amazon SQS and where ElasticMQ can be used for embedding testing of the SQS messaging system.\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- Amazon SQS / ElasticMQ\n\nApplication\n-----------\nThe application is configured as per a typical Scala application, where the default configuration file is \"application.conf\" (or reference.conf).\nThis default file can be overridden with other \"conf\" files and then given to the application upon boot with the following example Java option:\n```bash\n-Dconfig.file=test-classes/application.test.conf\n```\n\nIndividual configuration properties can be overridden again by Java options e.g. to override which Mongodb to connect:\n```bash\n-Dmongo.db=some-other-mongo\n```\n\nwhere this overrides the default in application.conf.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```bash\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```bash\nbrew install typesafe-activator\n```\n\nTo compile:\n```bash\nsbt compile\n```\n\nor\n```bash\nactivator compile\n```\n\nTo run the specs:\n```bash\nsbt test\n```\n\nTo actually run the application, you can simply:\n```bash\nsbt run\n```\n\nor first \"assemble\" it:\n```bash\nsbt assembly\n```\n\nThis packages up an executable JAR - Note that \"assembly\" will first compile and test.\n\nThen just run as any executable JAR, with any extra Java options for overriding configurations.\n\nFor example, to use a config file (other than the default application.conf) which is located on the file system (in this case in the boot directory)\n```bash\njava -Dconfig.file=test-classes/my-application.conf -jar <jar name>.jar\n```\n\nNote that the log configuration file could also be included e.g.\n```bash\n-Dlogback.configurationFile=path/to/my-logback.xml\n```\n\nSo a more indepth startup with sbt itself could be:\n```bash\nsbt test:run -Dconfig.file=target/scala-2.11/test-classes/application.test.conf -Dlogback.configurationFile=target/scala-2.11/test-classes/logback.test.xml\n```\n\nNote the use of test:run. Usually we would only use \"run\", but as this is a library, there is no default \"main\" class, but we do have an example test \"main\" class.\n\nAnd another example:\n\nrunning from directory of the executable JAR using a config that is within said JAR:\n```bash\njava -Dconfig.resource=application.uat.conf -jar <jar name>.jar\n```\n\nSBT - Revolver\n--------------\nsbt-revolver is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nSee https://github.com/spray/sbt-revolver\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nGatling - Performance (Integration) Testing\n-------------------------------------------\nPerformance tests are under src/it, and test reports are written to the \"target\" directory.\n\nTo execute Gatling performance integration tests from withing SBT:\n```bash\ngatling-it:test\n```\n\nExample Usage\n-------------\nExample of booting an application to publish/subscribe to an Amazon SQS instance.\n\n1) Start up an instance of ElasticMQ (to run an instance of Amazon SQS locally) - From the root of this project:\n```bash\njava -jar elasticmq-server-0.10.0.jar\n```\nwhich starts up a working server that binds to localhost:9324\n\nor with a custom configuration that could create queues:\n```bash\njava -Dconfig.file=src/test/resources/application.test.conf -jar elasticmq-server-0.9.3.jar\n```\n   \n2) Boot this application:\n```bash\nsbt test:run\n```\n   \nwhere the example application can be found under the \"test\" directory and is also show here:\n```scala\nobject ExampleBoot extends App {\n  val system = ActorSystem(\"amazon-sqs-actor-system\")\n\n  implicit val sqsClient = new SQSClient(new URL(\"http://localhost:9324\"), new BasicAWSCredentials(\"x\", \"x\"))\n\n  val queue = new Queue(\"test-queue\")\n\n  system actorOf Props {\n    new SubscriberActor(new Subscriber(queue)) with ExampleSubscription\n  }\n\n  new Publisher(queue) publish compact(render(\"input\" -> \"blah\"))\n}\n\ntrait ExampleSubscription extends JsonSubscription with Exit {\n  this: SubscriberActor =>\n\n  def receive: Receive = {\n    case m: Message => exitAfter {\n      val result = s\"Well Done! Processed given message $m\"\n      println(result)\n      result\n    }\n  }\n}\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-java8-mvn","private":false,"url":"https://github.com/UKHomeOffice/docker-java8-mvn","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# docker-java8-mvn\n\nDocker image with java8 and maven. Not intended to use as a base for java projects, just for building.\n\n## Usage\n\nThis image is to be used to build your app using maven. Below in an example of how you would do this in drone with caching enabled.\n\nContents of .drone.yml:\n```\npipeline:\n  drone_s3_cache_pull:\n     image: quay.io/ukhomeofficedigital/drone-s3cache:v0.1.0\n     drone_s3_cache_mode: \"pull\"\n\n  build:\n    commands:\n       - \"/root/entrypoint.sh 'mvn clean package'\"\n    image: quay.io/ukhomeofficedigital/java8-mvn:v3.3.9\n    when:\n      event:\n        - push\n        - pull_request\n\n  drone_s3_cache_push:\n    image: quay.io/ukhomeofficedigital/drone-s3cache:v0.1.0\n    drone_s3_cache_folders:\n      - .m2\n    drone_s3_cache_mode: \"push\"\n```\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-java8-mvn/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n## Build With\n\n* java-1.8.0-openjdk-devel\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/java-1.8.0-openjdk-deve/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/java-1.8.0-openjdk-deve/blob/master/LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-elasticsearch-curator","private":false,"url":"https://github.com/UKHomeOffice/docker-elasticsearch-curator","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# ElasticSearch Curator docker image\n\nDocker container for ES indices curator. See [for details](https://github.com/elastic/curator).\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-postgres","private":false,"url":"https://github.com/UKHomeOffice/docker-postgres","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# docker-postgres\nbase docker image with postgres\n\n## Usage\n\nThis docker container is intended to be built upon in projects requiring Postgres.\n\n### Configuration\nIn your Dockerfile you can overwrite the default configuration by copying a file to /conf/postgres.conf\n\nFor example:\nCOPY postgresql.conf /conf/postgresql.con\n\nThe entrypoint will automatically copy this to the postgres configuration directory after the db has been initialized\n\n### Useful File Locations\n\n* `/docker-entrypoint-initdb.d/*.sql[.gz]` - Any SQL file in that\n  location will be loaded into the database on container init.\n* `/healthcheck.sh` - You can execute this file to check the health of\n  the postgres installation. It performs `SELECT 1+1` on the database.\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](LICENSE) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-nodejs-base","private":false,"url":"https://github.com/UKHomeOffice/docker-nodejs-base","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# nodejs-base\nBase image for nodejs.  This only takes care of installing the LTS version of node.  It's recommended you should instead build from the downstream nodejs image here:\n\nhttps://quay.io/repository/ukhomeofficedigital/nodejs\nhttps://github.com/UKHomeOffice/docker-nodejs \n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/git-workflow","private":false,"url":"https://github.com/UKHomeOffice/git-workflow","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# Git Workflow\n\nA set of guidelines and principles to help define your Git workflow\n\n\n## The quick example\n\n```\n$ git clone git@github.com:UKHomeOffice/<repo_name>.git\n\n$ cd <repo_name>\n\n$ git checkout -b <branch_type>/<branch_name> (E.g. feature/add-feature1 or feature/ABC-1)\n```\n\n#### ...Develop the feature/fix the bug...\n\nAdd your changes to be committed. The `-p` (`--patch`) gives you the opportunity to accept (`y`) or decline (`n`).\n```\n$ git add -p\n```\n\nCommit staged changes. The `-v` (`--verbose`) will open an editor showing an overview of your changes, so you can be super-descriptive when writing your [commit message](https://github.com/alphagov/styleguides/blob/master/git.md).\n```\n$ git commit -v\n```\n\nFetch and rebase against the remote master branch. `-p` (`--prune`) removes remote-tracking references that no longer exist on the remote.\n```\n$ git fetch -p\n\n$ git rebase origin/master\n```\n\nPush your committed changes to a remote branch\n```\n$ git push origin <branch_type>/<branch_name>\n```\n\n- Visit your Github repo and select \"New pull request\", selecting which two branches you intend to merge. This will usually be your feature branch and master. Master will be preselected as the branch to merge into.\n\n- [Follow these guidelines](https://github.com/alphagov/styleguides/blob/master/git.md) to help describe the nature of your pull request, particularly the use case and the objectives it attempts to achieve.\n\n- Assign the pull request to a *qualified* member of your development team for a technical review.\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/request-oauth2","private":false,"url":"https://github.com/UKHomeOffice/request-oauth2","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/removals_e2etests","private":false,"url":"https://github.com/UKHomeOffice/removals_e2etests","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# End to End Feature & Performance Tests\n\n[![Build](https://travis-ci.org/UKHomeOffice/removals_e2etests.png)](https://travis-ci.org/UKHomeOffice/removals_e2etests)\n\nThere are two ways to run the tests, if you want to just get started quickly then use docker, if you want to integrate this into your IDE for example you might prefer to run the code on your machine.\n\n## Running the code on your machine:\n```shell\n# Install nvm\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\nsource ~/.nvm/nvm.sh\n\n# Install & Use Node 4\nnvm install 4\nnvm use 4\ncd removals_e2etests/nightwatch\nnpm install\n```\n\n## Run tests against an environment\n```shell\n# Start the [FE Application] (https://github.com/UKHomeOffice/removals_wallboard)\ncd removals_wallboard\ngulp dev\n\n# Start the [API Application] (https://github.com/UKHomeOffice/removals_integration)\ncd removals_integration\nPORT=8080 npm start\n\n# Run the e2e tests locally\ncd removals_e2etests/nightwatch\n./test.sh\n\n# Setup the keycloak credentials file & Run the e2e tests against a remote environment\ncd removals_e2etests\necho \"KEYCLOAK_USER=myusername\nKEYCLOAK_PASS=mypassword\" > mycredentials\n\ncd removals_e2etests/nightwatch\n./test.sh [docker|dev|int|uat]\n```\n\n##Run e2e tests against a local environment with docker-compose\n```shell\n# Build the [API Application] (https://github.com/UKHomeOffice/removals_integration)\ncd removals_integration\ndocker build -t removals_integration .\n\n# Build the [FE Application] (https://github.com/UKHomeOffice/removals_wallboard)\ncd removals_wallboard\ndocker build -t removals_wallboard .\n\n# Run tests\n./runtests.sh --env docker\n```\n\n## Run e2e tests against a remote environment with docker-compose\n```shell\n# Setup the keycloak credentials file\ncd removals_e2etests\necho \"KEYCLOAK_USER=myusername\nKEYCLOAK_PASS=mypassword\" > mycredentials\n\n# Run the e2e tests\n./runtests.sh --env [dev|int|uat]\n```\n\n## Run e2e performance tests against a remote environment with docker-compose\n```shell\n# Setup the keycloak credentials file\ncd removals_e2etests\necho \"KEYCLOAK_USER=myusername\nKEYCLOAK_PASS=mypassword\" > mycredentials\n\n# Run performance tests\n./runtests.sh --env [docker|dev|int|uat] --tag performance\n```\n\n## Run e2e tests against an environment with IntelliJ\n### Add a new Node.js Configuration setting for e2e testing\n![Run e2e tests against an environment with IntelliJ](images/intellij_settings_to_run_e2etests.png)\n### Add a new Node.js Configuration setting for performance testing\n![Run e2e performance tests against an environment with IntelliJ](./images/intellij_settings_to_run_e2e_performance_tests.png)\n\n## IBM Environments\n| env | backend | frontend |\n| --- | ------- | -------- |\n| default | http://localhost:8080 | http://localhost:8000 |\n| docker | http://backend | http://frontend |\n| dev | https://api-ircbd-dev.notprod.homeoffice.gov.uk | https://wallboard-ircbd-dev.notprod.homeoffice.gov.uk |\n| int | https://api-ircbd-int.notprod.homeoffice.gov.uk | https://wallboard-ircbd-int.notprod.homeoffice.gov.uk |\n| uat | https://api-ircbd-uat.notprod.homeoffice.gov.uk | https://wallboard-ircbd-uat.notprod.homeoffice.gov.uk |\n\n# CI branch testing\nTravis will try and fetch an image matching the same branch name of the `removals_integration` and `removals_wallboard` and test against that\n\n# [Architecture](http://static.codingthearchitecture.com/c4.pdf)\n### System context diagram\n![](https://www.lucidchart.com/publicSegments/view/45d8442c-ddf5-4a3c-861c-75d533ce4062/image.png)\n### Container/Component diagram\n![](https://www.lucidchart.com/publicSegments/view/f2fc4afe-a8cd-4f7e-8408-e583f5d5a235/image.png)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-api-docs","private":false,"url":"https://github.com/UKHomeOffice/lev-api-docs","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"Life Event Verification (LEV) API Guide\n=======================================\n:toc:\n:numbered:\n\n[role=hideable]\nNOTE: This documentation is limited by GitHub's version of ASCII Docs, the full\nversion may be viewed in the docs repo: https://ukhomeoffice.github.io/lev-api-docs\n\n[IMPORTANT,role=unhideable]\n====\nThe contents of this repo are automatically generated; to make changes\nfollow these steps:\n\n. `git clone https://gitlab.digital.homeoffice.gov.uk/lev/lev-api-scala`\n. edit the `lev-api-scala/docs/README.adoc` file\n. `commit` and `push` your changes (to a new branch)\n. create a *merge request* detailing the changes\n. upon successful approval of the merge request the changes will be automatically added\nto the `lev-api-docs` repo\n====\n\n== Mock API\nIt is possible to run a mock version of the API as follows:\n\n=== Running a mock API with docker (from Quay.io)\nThe latest version of the mock API can be run straight from the `quay.io` hosted image:\n```\ndocker pull quay.io/ukhomeofficedigital/lev-api-mock\ndocker run -p 8080:8080 quay.io/ukhomeofficedigital/lev-api-mock\n```\n\n=== Running a mock API with docker (from this repo)\n[role=hideable]\nNOTE: The paths in this section refer to the root of the docs project:\nhttps://github.com/UKHomeOffice/lev-api-docs\n\nThe easiest way to run the mock API is with Docker\n```\n./mock/build_mock_api_docker.sh\n./mock/run_mock_api_docker.sh\n```\n\n=== Running a mock API without docker\nIt is also possible to run it without docker if you have the *wiremock* jar file:\n```\ncd mock\njava -jar wiremock.jar --port=8080\n```\n\n== Authenticating with the API\nTo use the API you will need to provide 2 forms of authentication:\n\n. A client certificate\n. An auth token, which must be obtained by hitting the `/oauth/login` endpoint\n\n[IMPORTANT]\n====\n*The client certificate must be included in every request to the API, but is NOT shown\nin this documentation for simplicity.*\n\nAdding a client certificate to a `curl` request can easily be achieved by adding the\nfollowing arguments:\n\n[source,bash]\n----\ncurl --cert-type pem --key client.key --cert client.crt ...\n----\n====\n\nNOTE: The client certificate is not needed when sending requests to the _mock API_.\n\nThe rest of this section contains examples which have been provided to help\ntroubleshoot issues with authentication.\n\n=== A successful request with valid credentials\n+++ <details><summary> +++\n*Example `curl` request* with dummy credentials\n+++ </summary><div> +++\ninclude::snippets/auth/valid-auth/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with dummy credentials\n+++ </summary><div> +++\ninclude::snippets/auth/valid-auth/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* containing the *access token*\n+++ </summary><div> +++\ninclude::snippets/auth/valid-auth/http-response.adoc[]\n+++ </div></details> +++\n\n=== Authentication problems\nGenerally authentication problems are reported as `401 Unauthorized` errors.\n\n==== A request with invalid credentials\n+++ <details><summary> +++\n*Example `curl` request* with invalid credentials\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-credentials/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with invalid credentials\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-credentials/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-credentials/http-response.adoc[]\n+++ </div></details> +++\n\n==== An unauthorised request\n+++ <details><summary> +++\n*Example `curl` request* without the required `Authorization` header\n+++ </summary><div> +++\ninclude::snippets/auth/unauthorized/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the required `Authorization` header\n+++ </summary><div> +++\ninclude::snippets/auth/unauthorized/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/auth/unauthorized/http-response.adoc[]\n+++ </div></details> +++\n\n==== A request with missing credentials\n+++ <details><summary> +++\n*Example `curl` request* without the required `password` parameter\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-post/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the required `password` parameter\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-post/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-post/http-response.adoc[]\n+++ </div></details> +++\n\n==== A request with no client certificate\nWhilst none of the examples here contain the required client certificate, this example\nhas been explicitly included to show how the resulting `403 Forbidden` error would\nlook.\n+++ <details><summary> +++\n*Example `curl` request* without the required client certificate\n+++ </summary><div> +++\ninclude::snippets/auth/no-client-cert/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the required client certificate\n+++ </summary><div> +++\ninclude::snippets/auth/no-client-cert/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/auth/no-client-cert/http-response.adoc[]\n+++ </div></details> +++\n\n== Requesting birth record data\nAll successful requests to the API will result in a `200 OK` HTTP status code and are\ndescribed in this section.\n\n=== Requesting a specific birth record using a System Number\nThe best way to get birth data is by providing the relevant System Number, a nine\ndigit unique identifier for the birth record.\n\n+++ <details><summary> +++\n*Example `curl` request* specifying a *System Number*\n+++ </summary><div> +++\ninclude::snippets/system-number/matching-record-999999901/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* specifying a *System Number*\n+++ </summary><div> +++\ninclude::snippets/system-number/matching-record-999999901/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* is a *JSON object* containing the birth record data\n+++ </summary><div> +++\ninclude::snippets/system-number/matching-record-999999901/http-response.adoc[]\n+++ </div></details> +++\n\n=== Searching for a birth record\nWhen the System Number of the birth record is not known, a search of the records can\nbe made by supplying the following three parameters in the URL query string:\n\n- `forenames` : the first name is mandatory, and can be accompanied by any middle\nnames (all separated by spaces)\n- `lastname` : the last name is mandatory\n- `dateofbirth` : the date of birth is also mandatory\n\n+++ <details><summary> +++\n*Example `curl` request* with search parameters\n+++ </summary><div> +++\ninclude::snippets/search/multiple-matching-record/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with search parameters\n+++ </summary><div> +++\ninclude::snippets/search/multiple-matching-record/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* is a *JSON array* containing three matching birth records\n+++ </summary><div> +++\ninclude::snippets/search/multiple-matching-record/http-response.adoc[]\n+++ </div></details> +++\n\nTIP: The API will only return at most *25* matching records. In the unlikely case\nwhere there might be more than 25 people with the same first name, last name, and\ndate of birth; you will have to add middle names to the query to make the search more\nexacting.\n\n=== When no matching records are found\nIf no records matching the search terms can be found, the API will return an empty\narray.\n\n+++ <details><summary> +++\n*Example `curl` request*\n+++ </summary><div> +++\ninclude::snippets/search/no-matches/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request*\n+++ </summary><div> +++\ninclude::snippets/search/no-matches/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* is an *empty JSON array*\n+++ </summary><div> +++\ninclude::snippets/search/no-matches/http-response.adoc[]\n+++ </div></details> +++\n\n== Common errors and responses\n\n=== Non-existent route\nMaking a request to an invalid end point will result in the standard `404 Not Found`\nerror.\n\n==== Requesting an endpoint that doesn't exist\n+++ <details><summary> +++\n*Example `curl` request* to an invalid endpoint\n+++ </summary><div> +++\ninclude::snippets/invalid-endpoint/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* to an invalid endpoint\n+++ </summary><div> +++\ninclude::snippets/invalid-endpoint/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/invalid-endpoint/http-response.adoc[]\n+++ </div></details> +++\n\n==== Specifying a System Number that doesn't exist\n+++ <details><summary> +++\n*Example `curl` request* with a non-existing System Number\n+++ </summary><div> +++\ninclude::snippets/system-number/no-record/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with a non-existing System Number\n+++ </summary><div> +++\ninclude::snippets/system-number/no-record/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/system-number/no-record/http-response.adoc[]\n+++ </div></details> +++\n\n=== Missing search parameters\nMissing search parameters will result in a standard `400 Bad Request` error.\n\n==== Missing forenames parameter\n+++ <details><summary> +++\n*Example `curl` request* without the `forenames` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-forenames/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the `forenames` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-forenames/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/no-forenames/http-response.adoc[]\n+++ </div></details> +++\n\n==== Missing last name parameter\n+++ <details><summary> +++\n*Example `curl` request* without the `lastname` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-lastname/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the `lastname` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-lastname/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/no-lastname/http-response.adoc[]\n+++ </div></details> +++\n\n==== Missing date of birth parameter\n+++ <details><summary> +++\n*Example `curl` request* without the required `dateofbirth` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-dob/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the required `dateofbirth` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-dob/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/no-dob/http-response.adoc[]\n+++ </div></details> +++\n\n=== Other request errors\n\n==== Invalid date of birth provided\n+++ <details><summary> +++\n*Example `curl` request* with an incorrect `dateofbirth` parameter\n+++ </summary><div> +++\ninclude::snippets/search/invalid-dob/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with an incorrect `dateofbirth` parameter\n+++ </summary><div> +++\ninclude::snippets/search/invalid-dob/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/invalid-dob/http-response.adoc[]\n+++ </div></details> +++\n\nNOTE: Currently the response status is `500 Internal Server Error`; this is not the\nintention and will be fixed in a future release to show the proper `400 Bad Request`\ninstead.\n\n==== Incorrectly providing forenames\nThe easiest way to provide forenames is using the `forenames` parameter, however\nforenames may alternatively be provided using the numbered version: `forename1`,\n`forename2`, `forename3`, and `forenames4`. Providing a mix of the forename parameters\nwill result in a standard `400 Bad Request` error.\n+++ <details><summary> +++\n*Example `curl` request* with both `forenames` and `forename1` parameters\n+++ </summary><div> +++\ninclude::snippets/search/forenames-and-forename1/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with both `forenames` and `forename1` parameters\n+++ </summary><div> +++\ninclude::snippets/search/forenames-and-forename1/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/forenames-and-forename1/http-response.adoc[]\n+++ </div></details> +++\n\nNOTE: The use of `forename1`, `forename2`, `forename3`, and `forename4` is strongly\ndiscouraged and should be considered deprecated in favour of the `forenames` parameter.\n\n++++\n<script>\n    if ((location.host||location.hostname) === 'ukhomeoffice.github.io') {\n        Array.prototype.forEach.call(\n            document.querySelectorAll('.hideable'),\n            l => l.style.display='none'\n        );\n    } else {\n        Array.prototype.forEach.call(\n            document.querySelectorAll('.unhideable'),\n            l => l.style.display='none'\n        );\n    }\n</script>\n<style>\n    summary:after {\n        content: \"[+]\";\n        right: 0px;\n    }\n    details[open] summary:after {\n        content: \"[-]\";\n    }\n</style>\n++++\n\n== Retrieving audit information\nFor certain users with special permissions, it is possible to retrieve an aggregated\ncount of system users' search activity.\n\n=== Auditor level access\nAll requests to the audit information end points must be made by a user with auditor\nlevel permissions, otherwise the request will fail with the standard `401\nUnauthorised` error.\n+++ <details><summary> +++\n*Example `curl` request* by an API user without the special auditor permissions\n+++ </summary><div> +++\ninclude::snippets/audit/invalid-permissions/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* by an API user without the special auditor permissions\n+++ </summary><div> +++\ninclude::snippets/audit/invalid-permissions/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/audit/invalid-permissions/http-response.adoc[]\n+++ </div></details> +++\n\n=== Audit record filters\nThe audit record data returned can be filtered by providing the following\nparameters.\n\n==== A date range\nThe date range is optional. It can be omitted entirely, only one part specified, or\nfully specified by providing the `from` and `to` date parameters.\n+++ <details><summary> +++\n*Example `curl` request* filtering out records except those made between yesterday\nand one minute ago\n+++ </summary><div> +++\ninclude::snippets/audit/from-yesterday-until-a-minute-ago/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* filtering out records except those made between yesterday\nand one minute ago\n+++ </summary><div> +++\ninclude::snippets/audit/from-yesterday-until-a-minute-ago/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/audit/from-yesterday-until-a-minute-ago/http-response.adoc[]\n+++ </div></details> +++\n\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n\n","masterBranchProtection":false},{"name":"UKHomeOffice/smilodon","private":false,"url":"https://github.com/UKHomeOffice/smilodon","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"## smilodon\nSmilodon manages attachment of EBS and ENI pairs in AWS EC2 auto scaling groups.\n\nThink about zookeeper, etcd or similar datastores, where a data volume and IP\naddress have to always go together. Achieving that can be tricky, especially\nif you want to take advantage of EC2 auto scaling groups.\n\n\n### Getting Started\n* First you need to create a number of EBS and ENI resources and tag them with\n  `NodeID`. `NodeID` tag value can be anything as long as you have a matching\n  EBS and ENI pair with the same `NodeID` tag value.\n\n* Secondly, create an autoscaling group with a number of instances with\n  smilodon provisioned. You can have more instances in auto scaling group than\n  you have EBS+ENI pairs.\n\nWhen smilodon starts it will try to find a matching EBS+ENI pair and attach\nthem. EBS gets attached first and ENI second. You can tell smilodon to create a\nfile system and mount it for convenience.\n\nSmilodon does not know how to start a service, but that work is in progress\nright now.\n\nIf your distro uses systemd, then you can easily tell your service unit to\nwatch for when a specific mount point is ready and start the service unit.\n\n\n### Required AWS Permissions\nYou have two options here.\n- Create an IAM user and provide smilodon with AWS API credentials via\n  environment variables.\n\n- Define an IAM instance role and reference that in the LaunchConfiguration.\n\nI recommend the latter, but regardless which option you pick, you need to allow\nthe following IAM permissions (below could be a lot more granular and specific):\n\n```yaml\nResource: \"*\"\nAction:\n  - ec2:DescribeInstances\n  - ec2:DescribeTags\n  - ec2:DescribeNetworkInterfaces\n  - ec2:DescribeVolumes\n  - ec2:AttachVolume\n  - ec2:AttachNetworkInterface\n  - ec2:DetachNetworkInterface\n  - ec2:ModifyNetworkInterfaceAttribute\n```\n\n\n### Configuration\nConfiguration is done using command line flags - `smilodon --help`.\n\n\n### Filtering AWS Resources\nIt is very likely that you have many EBS volumes and ENI devices in your AWS\naccount.\n\nWhen you create your EBS+ENI resources, it makes sense to tag them with a\nservice name or something sensible, so that smilodon attaches correct resources.\n\nOnly `NodeID` tag is required and the rest can be arbitrary. For example, you\ncould tag your resources with the following tags:\n\n```\nNodeID=[0-5]\nEnv=development\nService=etcd\nProject=<any value>\n```\n\nTo tell smilodon to only look for resources with the above tags, do this:\n```\nsmilodon --filters='tag:Env=development,tag:Service=etcd,tag-key=Project'\n```\n\nAs you can see above, last filter matches on any value of tag `Project`. You\ncan also filter on a bunch of other AWS specific filters.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-formatted-id","private":false,"url":"https://github.com/UKHomeOffice/rtp-formatted-id","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# RTP formatted ID\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/rtp-formatted-id.svg?branch=master)](https://travis-ci.org/UKHomeOffice/rtp-formatted-id)\n[![npm version](https://badge.fury.io/js/rtp-formatted-id.svg)](https://www.npmjs.com/package/rtp-formatted-id)\n\nThis module creates non-sequential ids to use in your applications. The aim is to avoid duplicates: the longest the id\nyou creates, the most unlikely the creation of duplicates is.\n\n## Usage\n\nTo use straight off with the default format, you can simply do.\n\n``` JavaScript\nvar FormattedId = require('rtp-formatted-id');\nvar formattedId = new FormattedId();\nformattedId.generate();  // outputs something like EF-435670-LU\n```\n\n##### Advanced\n\nIf you set the format to something that uses the `mapYear` and / or `mapProduct` initialisers (Y or P respectively) then\nyou must supply the options to the `generate` function. An example is below: -\n \n``` javascript\nvar FormattedId = require('rtp-formatted-id');\nvar formattedId = new FormattedId({\n  format: 'Y-P-NN-LL',\n  products: {\n      productName: {\n          applicationTypeName: 'A',\n          otherApplicationTypeName: 'B'\n      },\n      otherProductName: {\n          applicationTypeName: 'C'\n      }\n  }\n});\nformattedId.generate({\n    // pass 2016 as argument to the method identified by the letter Y, in this case mapYear\n    Y : 2016,\n    // pass object as argument to the method identified by the letter P, in this case mapProduct \n    P : {\n        product: 'productName', // matches a product set in the FormattedId config \n        applicationType: 'applicationTypeName' // matches an applicationType set in the FormattedId config\n    }\n});  // outputs something like A-A-72-DH \n```\n\nNote, config can be passed to the constructor on initialisation or you can call the `setConfig` method.\n\nSome more examples of possible formats are as follows: -\n\n```\nformat: 'LLLNNNLLL  // outputs something like PLW682LMV\n```\n\nThis will create an id composed by 3 letters, 3 numbers, 3 letters.\nYou can use separators in the format, that will be conserved.\n\n```\nformat: 'LLL-NNN-LLL  // outputs something like PLW-682-LMV\n```\n\n## How it works\n\nIn the folder `initialisers` you'll find pre-made modules that can be added to your config. Each module needs to exports\ntwo things: `method` and `identifier`.\n\n``` javascript\nmodule.exports = {\n    method: mapYear,\n    identifier: 'Y'\n};\n```\n\nThe method is what outputs your result; the identifier is the letter that gets used in the config to identify strings made\nout of that component. So, in the example above, `mapYear` maps the years to alphabet letters, and therefore adding Y's to\nthe config will create sequences of the mapped letter. For example: -\n\n```\nformat: 'LLLNNNLLL-Y  // outputs something like PLW682LMV-A\n```\n\nConversely, you can pass arguments indexed by letters to the `generate` method -- they will be distributed to the correct\ncomponent.\n\n``` javascript\nvar FormattedId = require('rtp-formatted-id');\nvar formattedId = new FormattedId();\n//  pass 2016 as argument to the method identified by the letter Y, in this case mapYear\nformattedId.generate({\n   Y : 2016\n});\n```\n\nAll the components in the `initialisers` folder are loaded automatically. You can add your own as long as they have the\nsame interface and map to a letter unambiguosly.\n\n \n## Using the demo\n\nTo provide you with a quick evaluation tool, you can use the script `demo.js`. Run it as a bash script after doing a \n`chmod +x` to make it executable, or do `npm install -g` and run `demo` in your terminal.\n\nYou must specify how many codes you want to generate and the format to use. For example: -\n\n```\n./demo.js 100 LL-NNN-YY  // 100 codes in format letter-letter-number-number-number-mapYear-mapYear\n```\n    \nYou can also use the options -a (pass a json string as arguments to `generate`, see above) and -o (show the output).\n\n```\n./demo.js 100 LL-NNN-YY -a '{ \"Y\": 2016 }' -o true   // pass 2016 to mapYear, show the codes\n```\n\nPlease note that the generation may take a long time if you specify a very high number of codes, especially with `-o true` enabled.\n\n## Caveats\n \nThis software doesn't guarantee the ids will be unique. A short config like `LL-NN` is likely to generate conflicts after \na few hundred runs. Conversely, a longer config like `LLLLL-NNNNN` is unlikely to have one conflict after one million runs. \nYou can use the various initialisers to protect yourself even further, by adding deterministic parts to the generated id, \nuntil you reach a degree of risk that is either negligible or acceptable.\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n","masterBranchProtection":false},{"name":"UKHomeOffice/passports-date-controller","private":false,"url":"https://github.com/UKHomeOffice/passports-date-controller","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"hmpo-date-controller\n====================\n\n[![npm version](https://badge.fury.io/js/hmpo-date-controller.svg)](https://badge.fury.io/js/hmpo-date-controller)\n[![Build Status](https://travis-ci.org/UKHomeOffice/passports-date-controller.svg)](https://travis-ci.org/UKHomeOffice/passports-date-controller)\n\nA controller for the [hmpo-form-wizard] that provides out-of-the-box\nsupport for [hmpo-template-mixins]' 'input-date' mixin. It is a drop-in\nreplacement for the standard controller and, if need be, can be\ninherited from in your custom controllers.\n\nThe functionality in this module could, at some point, be merged into\n[hmpo-form-controller] as that already has knowledge of the date\ncomponent fields provided by input-date.\n\nMain Benefits\n-------------\n\n* No more silly custom controllers just so that date fields can be\n  handled.\n* The date validators from [hmpo-form-controller] can finally be\n  leaveraged, giving us easy validation on date fields. (e.g. Date must\n  not be in the future, person must be over 18 etc.)\n* No more date components in the steps definition. (Surely a source of\n  confusion for new developers?)\n* The date components are also validated individually allowing a missing\n  month, let's say, to be highlighted directly. The validators are\n  automatically applied and come from [hmpo-form-controller]. i.e.\n  'date-year', 'date-month' and 'date-day'. This gives the developer a\n  lot of date validation for free helping to avoid bugs in their forms.\n\nQuality Assurance\n-----------------\n\nThe controller's functionality is fully documented in the unit test.\n\nWhilst this is the first version of this module the code coverage is\n100% as measured by [Istanbul]. This is tested for in CI to ensure new\nchanges do not introduce untested code.\n\nLinting is also checked in CI using the `.eslintrc` from\n[hmpo-form-controller].\n\nMigrating from HOF's date-controller\n------------------------------------\n\nIf you were using HOF's date-controller then you would have had a custom\ncontroller which declared a single field as being the only date field.\nYou will also have added the date components to your steps definition.\nNone of this is required in hmpo-date-controller so your migration is\nmore about deleting this redundant code.\n\ne.g. Consider the following steps definition:\n\n```js\n[...]\n'/step-one': {\n  controller: require('dob-controller'),\n  fields: [\n    'fullname',\n    'date-of-birth',\n    'date-of-birth-day',\n    'date-of-birth-month',\n    'date-of-birth-year',\n    'nationality'\n  ],\n  next:\n  '/step-two'\n},\n[...]\n```\n\nThis can now become simply:\n\n```js\n[...]\n'/step-one': {\n  fields: [\n    'fullname',\n    'date-of-birth',\n    'nationality'\n  ],\n  next:\n  '/step-two'\n},\n[...]\n```\n\nThis of course means that you are now free to have more than one date\nfield per step.\n\nIf you were doing any validation on the date you might need to add it to\nthe definition for the field.\n\nThe only thing left to do is to ensure the default controller is, or\ninherits from, hmpo-date-controller.\n\n[hmpo-form-controller]: https://github.com/UKHomeOffice/passports-form-controller\n[hmpo-form-wizard]: https://github.com/UKHomeOffice/passports-form-wizard\n[hmpo-template-mixins]: https://github.com/UKHomeOffice/passports-template-mixins\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/postgresql","private":false,"url":"https://github.com/UKHomeOffice/postgresql","license":null,"readme":"PostgreSQL Docker image\n=======================\n\n## Acknowledgments\n\n* This repo is taken from https://github.com/openshift/postgresql/tree/master/9.4 \n\nIt has been modified to provide a secure base image and allow for files for secrets and configuration.\n\nEnvironment variables and volumes\n----------------------------------\n\nThe image recognizes the following environment variables that you can set during\ninitialization by passing `-e VAR=VALUE` to the Docker run command.\n\n|    Variable name             |    Description                                 |\n| :--------------------------- | ---------------------------------------------- |\n|  `POSTGRESQL_USER`           | User name for PostgreSQL account to be created |\n|  `POSTGRESQL_PASSWORD`       | Password for the user account                  |\n|  `POSTGRESQL_DATABASE`       | Database name                                  |\n|  `POSTGRESQL_ADMIN_PASSWORD` | Password for the `postgres` admin account (optional)     |\n\nThe following environment variables influence the PostgreSQL configuration file. They are all optional.\n\n|    Variable name              |    Description                                                          |    Default\n| :---------------------------- | ----------------------------------------------------------------------- | -------------------------------\n|  `POSTGRESQL_MAX_CONNECTIONS` | The maximum number of client connections allowed. This also sets the maximum number of prepared transactions. |  100\n|  `POSTGRESQL_SHARED_BUFFERS`  | Sets how much memory is dedicated to PostgreSQL to use for caching data |  32M\n|  `POSTGRESQL_EFFECTIVE_CACHE_SIZE`  | Set to an estimate of how much memory is available for disk caching by the operating system and within the database itself |  128M\n\nYou can also set the following mount points by passing the `-v /host:/container` flag to Docker.\n\n|  Volume mount point      | Description                           |\n| :----------------------- | ------------------------------------- |\n|  `/var/lib/pgsql/data`   | PostgreSQL database cluster directory |\n\nUsage\n----------------------\n\nFor this, we will assume that you are using the `centos/postgresql-94-centos7` image.\nIf you want to set only the mandatory environment variables and not store the database\nin a host directory, execute the following command:\n\n```\n$ docker run -d --name postgresql_database -e POSTGRESQL_USER=user -e POSTGRESQL_PASSWORD=pass -e POSTGRESQL_DATABASE=db -p 5432:5432 centos/postgresql-94-centos7\n```\n\nThis will create a container named `postgresql_database` running PostgreSQL with\ndatabase `db` and user with credentials `user:pass`. Port 5432 will be exposed\nand mapped to the host. If you want your database to be persistent across container\nexecutions, also add a `-v /host/db/path:/var/lib/pgsql/data` argument. This will be\nthe PostgreSQL database cluster directory.\n\nIf the database cluster directory is not initialized, the entrypoint script will\nfirst run [`initdb`](http://www.postgresql.org/docs/9.4/static/app-initdb.html)\nand setup necessary database users and passwords. After the database is initialized,\nor if it was already present, [`postgres`](http://www.postgresql.org/docs/9.4/static/app-postgres.html)\nis executed and will run as PID 1. You can stop the detached container by running\n`docker stop postgresql_database`.\n\nPostgreSQL auto-tuning\n--------------------\n\nWhen the PostgreSQL image is run with the `--memory` parameter set and if there\nare no values provided for `POSTGRESQL_SHARED_BUFFERS` and\n`POSTGRESQL_EFFECTIVE_CACHE_SIZE` those values are automatically calculated\nbased on the value provided in the `--memory` parameter.\n\nThe values are calculated based on the\n[upstream](https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server)\nformulas. For the `shared_buffers` we use 1/4 of given memory and for the\n`effective_cache_size` we set the value to 1/2 of the given memory.\n\nPostgreSQL admin account\n------------------------\nThe admin account `postgres` has no password set by default, only allowing local\nconnections.  You can set it by setting the `POSTGRESQL_ADMIN_PASSWORD` environment\nvariable when initializing your container. This will allow you to login to the\n`postgres` account remotely. Local connections will still not require a password.\n\n\nChanging passwords\n------------------\n\nSince passwords are part of the image configuration, the only supported method\nto change passwords for the database user (`POSTGRESQL_USER`) and `postgres`\nadmin user is by changing the environment variables `POSTGRESQL_PASSWORD` and\n`POSTGRESQL_ADMIN_PASSWORD`, respectively.\n\nChanging database passwords through SQL statements or any way other than through\nthe environment variables aforementioned will cause a mismatch between the\nvalues stored in the variables and the actual passwords. Whenever a database\ncontainer starts it will reset the passwords to the values stored in the\nenvironment variables.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-ruby","private":false,"url":"https://github.com/UKHomeOffice/docker-ruby","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Ruby Base Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-ruby.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-ruby)\n\nThis is a base container for projects that require ruby.\n\n## Usage  \n\nExample:\n```\nFROM quay.io/ukhomeofficedigital/ruby\nUSER app\n``` \n\nThis is an onbuild image and will automatically install copy your app to /app and install it's dependencies with bundler, \nas well as updating OS packages. It has a pre-setup user called app to ensure your app doesn't run as root.\n\n### Useful Directories\n\n* `/app` - Where you app will be copied to on build\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-ruby/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n\n## Authors\n\n* **Jay Keshur** - *Initial work* - [jaykeshur](https://github.com/jaykeshur)\n* **Tim Gent** - *Updates* - [timgent](https://github.com/timgent)\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/docker-ruby/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/docker-ruby/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* [RVM](https://rvm.io/)\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/scala-sbt","private":false,"url":"https://github.com/UKHomeOffice/scala-sbt","license":null,"readme":"# scala-sbt\n\nSimple Scala project with `sbt` and support for both `ScalaTest` and `specs2`.","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-ruby-firefox-chrome","private":false,"url":"https://github.com/UKHomeOffice/docker-ruby-firefox-chrome","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Ruby Base Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-ruby-firefox-chrome.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-ruby-firefox-chrome)\n\nThis is a container that includes Ruby, Firefox and Chrome, intended to be used for running cucumber tests.\n\n## Usage  \n\nPut `FROM quay.io/ukhomeofficedigital/ruby-firefox-chrome` in the top of your Dockerfile\n\n### Useful Directories\n\n* `/app` - Where you app will be copied to on build\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-ruby-firefox-chrome/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n\n## Authors\n\n* **Jay Keshur** - *Initial work* - [jaykeshur](https://github.com/jaykeshur)\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/docker-ruby-firefox-chrome/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/docker-ruby-firefox-chrome/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* [Firefox](https://www.mozilla.org/firefox)\n* [Chrome](https://www.google.com/chrome/)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/firearms","private":false,"url":"https://github.com/UKHomeOffice/firearms","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"Firearms Licensing Application\n------------------------------\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/saru","private":false,"url":"https://github.com/UKHomeOffice/saru","license":null,"readme":"# saru\nSubject Access Request Unit\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-postgres-patroni-not-tracking","private":false,"url":"https://github.com/UKHomeOffice/docker-postgres-patroni-not-tracking","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/sheff-gradle","private":false,"url":"https://github.com/UKHomeOffice/sheff-gradle","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/UKVI-Complaints","private":false,"url":"https://github.com/UKHomeOffice/UKVI-Complaints","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# UKVI-Complaints [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/ukvi-complaints/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/ukvi-complaints) [![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/UKVI-Complaints/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/UKVI-Complaints)\n\nThis project is built with [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap) and uses [Docker](https://www.docker.com/).\n\n## Getting started\n\nGet the project from Github\n```bash\n$ git clone git@github.com:UKHomeOffice/UKVI-Complaints.git && cd UKVI-Complaints\n```\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\n[Install Docker Compose](https://docs.docker.com/compose/install/)\n\nRun the services locally with Docker Compose\n```bash\n$ docker-compose up\n```\n\nGetting your hands dirty (You'll need [Redis](http://redis.io/) for this)\n```bash\n$ npm run dev\n```\n\nFor anything else UKVI Complaints-related, look in [package.json](./package.json) for a full list of scripts etc, or refer to [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap).\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-self-serve","private":false,"url":"https://github.com/UKHomeOffice/evw-self-serve","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":false,"travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/passports-templates","private":false,"url":"https://github.com/UKHomeOffice/passports-templates","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-templates\n\nCommon page layouts and partials.\n\n## Installation\n\n```\nnpm install [--save] hmpo-templates\n```\n\n## Setup\n\nInstall [hmpo-govuk-template](https://github.com/UKHomeOffice/govuk-template-compiler), [hogan-express-strict](https://github.com/lennym/hogan-express) and [express-partial-templates](https://github.com/UKHomeOffice/express-partial-templates) as part of your project.\n```\nvar app = require('express')();\n\nrequire('hmpo-govuk-template').setup(app);\n\napp.set('view engine', 'html');\napp.use(require('hmpo-templates'));\napp.engine('html', require('hogan-express-strict'));\napp.use(require('express-partial-templates')(app));\n```\n\n## Basic usage\n\nmy-page.html\n```\n{{< hmpo-layout}}\n    {{$pageTitle}}...page title...{{/pageTitle}}\n\n    {{$header}}\n        <h1>...heading...</h1>\n    {{/header}}\n\n    {{$content}}\n        <p>...intro content...</p>\n        {{< hmpo-partials-form}}\n            {{$form}}\n                ...form inputs...\n                ...form submit button...\n            {{/form}}\n        {{/ hmpo-partials-form}}\n    {{/content}}\n{{/ hmpo-layout}}\n```\n\n## Templates\n\nThe templates are added to `res.locals` with `hmpo` as a prefix to the template names.\n\nLayout:\n+ maincontent (sets maincontent-left as the default and provides a block to override)\n+ maincontent-left\n+ maincontent-right\n+ maincontent-full\n+ flash-card\n\nPartials:\n+ analytics\n+ back-link\n+ back\n+ betatag\n+ body-end\n+ cookies\n+ error-summary\n+ form\n+ head\n+ new-window\n+ sidebar\n+ warning\n\n### Changing a page layout\n\nCreate layout.html in your views directory.\n```\n{{< hmpo-layout}}\n    {{$pageTitle}}...page title...{{/pageTitle}}\n\n    {{$main-content}}\n        {{< hmpo-partials-maincontent-right}}\n            {{$header}}...heading...{{/header}}\n            {{$content}}...content...{{/content}}\n        {{/ hmpo-partials-maincontent-right}}\n    {{/main-content}}\n{{/ hmpo-layout}}\n```\nThis changes the main page layout to maincontent-right. In your custom pages you can now inherit from layout.html.\n\n## Compatibility\n\nUse with [hmpo-template-mixins](https://github.com/UKHomeOffice/passports-template-mixins) for form inputs and view formatters. When used with [hmpo-form-wizard](https://github.com/UKHomeOffice/passports-form-wizard) you'll get a validation summary appearing at the top of your page when a form error occurs.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-api","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-api","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ukvicomplaints-prototype","private":false,"url":"https://github.com/UKHomeOffice/ukvicomplaints-prototype","license":null,"readme":"# Unofficial Static Government Digital Prototype kit\nSimple prototyping kit for GOV.UK service designers. This kit does not contain all of the functionality of the express kit, however, you will not need node.js or git experience, and you will not need to run anything in command line.\n\nCreated internally at Home Office Digital - not supported, not created by GDS, supplied as-is\n\nThis is not finished! It's Alpha Alpha!\n\n## Getting Started\n\n#### You will need:\n- A mac (sorry, this isn't tested on PCs yet)\n\n#### Nice to have:\n- _Some_ HTML knowledge\n\nFirst, either:\n\n- Download a zip of this repository from https://github.com/tjharrop/simple_prototype_kit/archive/master.zip and unzip it to your computer\n\n*- OR -*\n\n- If you're comfortable with git, either clone the repo in the git desktop client or via command line (`git clone https://github.com/tjharrop/simple_prototype_kit.git`)\n\nOnce you have the folder on your computer, you will see the index.html and example files. The example files contain demonstrations of various pieces of functionality. index.html has buttons to guide you through each page. Full instructions on each demo to follow.\n\n## Running the thing\n\nThere are 2 options here. You can either open index.html in Safari or Firefox directly or you can run a small script which will allow you to use chrome.\n\n#### Using Safari or Firefox\n1. Cmd + click index.html in Finder\n2. Open With\n3. Select Safari or Firefox\n\n#### Using Chrome (recommended)\n\n_You may see an unauthorised developer warning message. If you do, cmd + click and click \"open\" instead (thanks Joe)_\n\n1. Double click run.command (see above if you get a warning)\n2. In chrome, go to http://localhost:1987/index.html\n\n## Working on it\n\nA good place to start in index.html.\n\n1. Open this in your chosen HTML editor (if you don't have one, see https://atom.io/).\n2. Hack away! Change some content, add some buttons or form fields according to your design\n3. Press refresh in your browser.\n\n#### Changing the service name\n\nThere is a file called service-name.txt which looks like this:\n\n```Digital Service Name```\n\n1. Open it\n2. Change it to your service name\n3. Save it\n\n#TODO\n\n1. Full instructions on the examples pages\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/research-resources","private":false,"url":"https://github.com/UKHomeOffice/research-resources","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/posters","private":false,"url":"https://github.com/UKHomeOffice/posters","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"\n# Home Office Posters\nHome Office repository of posters covering different topics - research, access needs, accessibility, design.\n\n\n\n**See ALL the posters**\n\nUsing Git Browser, you can [view all the posters before you start working on them](http://www.git-browser.com/ukhomeoffice/posters/accessibility/posters_en-UK).\n\n(A big thanks to [Joe Lanman](https://twitter.com/joelanman) from [GDS](https://twitter.com/gdsteam) for adding our posters to his Git Browser project)\n\n\n**Contributions and contact**\n\nIf you've got a poster you've created, and would like to commit it here, please do!\n\nWe welcome feedback - please [add an issue](https://github.com/UKHomeOffice/posters/issues) - positive or negative.\n\nOtherwise you can contact Karwai Pun, [@krwpn](https://twitter.com/krwpn), or Bernard Tyers, [@bernardtyers](https://twitter.com/bernardtyers), on Twitter.\n\n**Access needs**\n\nThese posters cover the following access needs:\n* [Autism](https://github.com/UKHomeOffice/posters/blob/master/accessibility/posters_en-UK/autistic-spectrum.pdf)\n* [Dyslexia](https://github.com/UKHomeOffice/posters/blob/master/accessibility/posters_en-UK/dyslexia.pdf)\n* [Visually impaired - low vision users](https://github.com/UKHomeOffice/posters/blob/master/accessibility/posters_en-UK/low-vision.pdf)\n* [Visually impaired - screenreader users](https://github.com/UKHomeOffice/posters/blob/master/accessibility/posters_en-UK/screenreader.pdf)\n* [Motor disabilities](https://github.com/UKHomeOffice/posters/blob/master/accessibility/posters_en-UK/motor-disabilities.pdf)\n* [D/deafness and hard of hearing](https://github.com/UKHomeOffice/posters/blob/master/accessibility/posters_en-UK/deaf.pdf)\n\n\n**User research and design**\n\n* [User research is a team sport](https://github.com/UKHomeOffice/posters/blob/master/gds/research-teamsport.pdf)\n* [2 hours of user research every six weeks](https://github.com/UKHomeOffice/posters/blob/master/gds/two-hours-every-six-weeks.pdf)\n* [GDS design principles](https://github.com/UKHomeOffice/posters/blob/master/gds/design-principles-poster.pdf)\n* [GDS \"It's OK to..\"](https://github.com/UKHomeOffice/posters/blob/master/gds/its-ok-to.pdf)\n\n**Discovery Alpha Beta Live**\n\n* [General](https://github.com/UKHomeOffice/posters/blob/master/discovery-alpha-beta-live/DiscoveryAlphaBetaLive_OnePage.pdf)\n* [Discover Alpha Beta Live phases](https://github.com/UKHomeOffice/posters/blob/master/discovery-alpha-beta-live/DiscoveryAlphaBetaLive_Individual.pdf)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-gradle-common","private":false,"url":"https://github.com/UKHomeOffice/pttg-gradle-common","license":null,"readme":"## Gradle plugin that applies PTTG team standards and conventions.\n\n### Use this plugin in your gradle build by:\n\n1. Adding a buildscript dependency\n\n```\nbuildscript {\n       repositories{\n            maven { url \"https://github.com/UKHomeOffice/pttg-gradle-repo/raw/master/releases\" }\n            maven { url \"https://plugins.gradle.org/m2/\" }\n       }\n       dependencies {\n           classpath 'pttg-gradle-common:pttgCommonGradle:1.6.RELEASE'\n       }\n}\n```\n\n2. Applying the plugin\n\n```\napply plugin: 'pttgCommonGradle'\n```\n\n3. User guide\nSee the following documentation. In your project you can also execute the 'pttgCommonGradlePluginUsage' task to\nsee usage instructions and version information etc.\n\n\n### What this plugin gives your build automatically\n\n1. Applies our commonly used plugins \n - java\n - groovy\n - application\n - checkstyle\n - git properties\n\n2. Applies the standard repositories that we use\n\n3. Sets our standard gradle / gradle wrapper version\n\n4. Sets our standard Java version\n\n5. Applies our convention for test reporting: All tasks with a type of 'Test' will generate report HTML into \nbuild/reporting/task-name, eg build/reporting/acceptanceTest or build/reporting/test or build/reporting/myCustomTest\n\n6. Includes commonly used dependencies at our standard versions, eg\n - junit\n - mockito\n - groovy\n - json\n \n7. Applies property expansion to application.properties so that you can use eg ${version} to receive the version\nproperty from build.gradle\n \n8. If the project uses the 'com.moowork.gulp' plugin, then the build is changed to depned on the gulp_test task, and \nthe gulp_test task is added to the verification group\n \n9. Adds checkstyleTest task to the verification group, and adds Checkstyle to the 'check' task, \nconfigured to report on the following errors (but not fail the build):\n - Unused imports\n  \n  NB You can choose to have Checkstyle violations fail the build by adding this configuration:\n  \n  ```\n  checkstyle {\n    ignoreFailures = true\n  }\n  ```\n  NB You can use your own Checkstyle rules using the following configuration to point to your checkstyle.xml\n  \n  ```\n  checkstyle {\n    configFile = <path-to-checkstyle.xml>\n  }\n  ```\n \n### What this plugin allows you to use in your build\n\n1. The plugin creates libraries of dependency groupings at our standard versions\n\neg the plugin defines a standard dependency grouping for Cucumber BDD support, including the following dependencies\n```\n\"info.cukes:cucumber-java:$cucumberVersion\",\n\"info.cukes:cucumber-junit:$cucumberVersion\",\n\"info.cukes:gherkin:2.12.2\",\n\"net.serenity-bdd:serenity-core:$serenityVersion\",\n\"net.serenity-bdd:serenity-cucumber:$serenityCucumberVersion\",\n\"net.serenity-bdd:serenity-junit:$serenityVersion\"\n```\nYou can use this library in your build as follows:\n\n```\ndependencies{\n    testCompile libraries.cucumber\n}\n```\n\nThe following libraries are defined:\n\n- groovy\n- json\n- testUtils\n- logging\n- jackson\n- jacksonJsonProviders\n- mongo    \n- springboot \n- springbootActuator\n- springrestdocs\n- restassured \n- spock    \n- cucumber\n\nYou can override versions of common dependency libraries using the commonLibraries extension block, specifying\nnew version number for the library you wish to override.\n\nThis example shows the current version properties and values that can be overridden:\n\n```\ncommonLibraries{\n    cucumberVersion = '1.2.4'\n    groovyVersion = '2.4.3'\n    jsonVersion = '20160212'\n    jacksonVersion = '2.7.4'\n    logbackVersion = '1.1.3'\n    mongoVersion = '3.0.4'\n    restAssuredVersion = '2.9.0'\n    serenityCucumberVersion = '1.1.6'\n    serenityVersion = '1.1.31'\n    spockVersion = '1.0-groovy-2.4'\n    springBootVersion = '1.3.3.RELEASE'\n    springRestDocsVersion = '1.1.0.RC1'\n    springVersion = '4.2.5.RELEASE'\n}\n```\n\n### Deploying this plugin to the GitHub gradle repository\n\n1. Set the version number in build.gradle (and update this readme)\n2. Execute the tasks clean, build, publishToGitHub\n\nThis relies on the [gradle-git-repo-plugin](https://github.com/layerhq/gradle-git-repo-plugin)\n\nNote that you must have your SSH key set up for GitHub. If the publishToGithub task fails, it's probably because your SSH keys aren't set up.\nIf you get prompted for username and password, then please edit ~/.gitRepos/UKHomeOffice/pttg-gradle-repo/.git/config\nand set the remote origin url to git@github.com:UKHomeOffice/pttg-gradle-repo.git\n\n\n### Development\n\n1. Increment the minor version number (still needs to be RELEASE because I can't figure out how to make the git-repo plugin support snapshots)\n2. Make your changes\n3. You can use publishMavenJavaPublicationToMavenLocal to deploy the change to your local maven repo\n   1. Note however that this won't work if your changes add new transitive third-party dependencies\n4. Test consumption of the plugin from another project by\n   1. Adding mavenLocal() to your buildscript repositories to consume form local repo\n   2. using the new version number for the plugin in your buildscript dependencies\n   3. You may well need to execute ``` ./gradlew --refresh-dependencies``` to pick up changes, then refresh your IDE\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-gradle-springboot","private":false,"url":"https://github.com/UKHomeOffice/pttg-gradle-springboot","license":null,"readme":"## Gradle plugin that adds Spring Boot and supporting utilitiy tasks to your build.\n\n### Use this plugin in your gradle build by:\n\n1. Adding a buildscript dependency\n\n```\nbuildscript {\n       repositories{\n            maven { url \"https://github.com/UKHomeOffice/pttg-gradle-repo/raw/master/releases\" }\n       }\n       dependencies {\n           classpath 'pttg-gradle-common:pttgSpringBootGradle:1.1.RELEASE'\n       }\n}\n```\n\n2. Applying the plugin\n\n```\napply plugin: 'pttgSpringBootGradle'\n```\n\n! NOTE - This plugin expects the java plugin to be applied first.\nIf you are using the pttgCommonGradlePlugin, ensure it is applied above this one.\n\n3. User guide\nSee the following documentation. In your project you can also execute the 'pttgSpringBootGradlePluginUsage' task to\nsee usage instructions and version information etc.\n\n3. Configuring the plugin\n\nCustomise configuration using the 'springboot' extension block and override any properties.\nThe available properties and their defaults are shown in this sample:\n\n```\nspringboot{\n    port = 8081 // the port where your spring boot app is running. Required by the bootStop task\n}\n```\n\n### What this plugin gives your build automatically\n\n1. Applies the spring boot plugin\n\n2. Adds the spring boot dependencies\n\n3. Adds a bootStop task alongside the standard bootRun task (defaults to use port 8081)\n\n4. Adds the spring boot actuator support running with the bootRun task\nsee [spring-boot-actuator endpoints](http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#production-ready-endpoints)\n\n5. Adds startSever and stopServer tasks which use a separate process so that other gradle tasks such as acceptanceTest\ncan start and stop the server automatically \n\n### Springboot Actuator support\ntodo tune config for production\n\nActuator support exposes (amongst other things) the following useful endpoints\n\n  * /mappings\n  * /health\n  * /metrics\n  * /info\n  * /trace \n\nTry them and see.\n\n### Development\n\n1. Increment the minor version number (still needs to be RELEASE because I can't figure out how to make the git-repo plugin support snapshots)\n2. Make your changes\n3. You can use publishMavenJavaPublicationToMavenLocal to deploy the change to your local maven repo\n   1. Note however that this won't work if your changes add new transitive third-party dependencies\n4. Test consumption of the plugin from another project by\n   1. Adding mavenLocal() to your buildscript repositories to consume form local repo\n   2. using the new version number for the plugin in your buildscript dependencies\n   3. You may well need to execute ``` ./gradlew --refresh-dependencies``` to pick up changes, then refresh your IDE\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-stub","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-stub","license":null,"readme":"Financial Status Service Stub\n=============================\n\n**Overview**\n\n\nA stub to represent a banking interface for the Finanical Status Service. Also provides a central repository for acceptance \ntest data. \n\n-\n\n**Demo Data**\n\nAdd any data files to be automatically inserted,  to the src/test/resources folder with the prefix **demoData**\n\n-\n\n**Technical Notes**\n\nThe API is implemented using Spring Boot, Spring data (MongoDB)\n\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-gradle-apidocs","private":false,"url":"https://github.com/UKHomeOffice/pttg-gradle-apidocs","license":null,"readme":"## Gradle plugin that adds Spring Rest API documentation support\n\n### Use this plugin in your gradle build by:\n\n1. Adding a buildscript dependency\n\n```\nbuildscript {\n       repositories{\n            maven { url \"https://github.com/UKHomeOffice/pttg-gradle-repo/raw/master/releases\" }\n            jcenter()\n       }\n       dependencies {\n           classpath 'pttg-gradle-common:pttgApiDocsGradle:1.1.RELEASE'\n       }\n}\n```\n\n2. Applying the plugin\n\n```\napply plugin: 'pttgApiDocsGradle'\n```\n! NOTE - This plugin expects the java plugin to be applied first.\nIf you are using the pttgCommonGradlePlugin, ensure it is applied above this one.\n\n3. User guide\nSee the following documentation. In your project you can also execute the 'pttgApiDocsGradlePluginUsage' task to\nsee usage instructions and version information etc.\n\n4. Configuring the plugin\n\nCustomise configuration using the 'apidocs' extension block and override any properties you wish to change.\nThe available properties and their defaults are shown in this sample:\n\n```\napidocs{\n    testSrcPattern = 'apidocs/**'\n    sourceDocsDir = 'src/doc'\n    jarDocsDir = 'static/docs'\n    snippetsDir = 'build/generated-snippets'\n    jarAppendix = 'docs'\n}\n```\n\nwhere\n * testSrcPattern = pattern for the api test classes eg this is for tests under src/test/java/apidocs\n * sourceDocsDir = location of your 'asciidoc' and 'resources' folders containing asciidoc files (eg your index.adoc) and template overrides\n * jarDocsDir = location to put the generated documentation (HTML and PDF) in the project jar\n * snippetsDir = working directory where spring-rest-docs will generate adoc fragments from your test cases\n * jarAppendix = appendix to append to the jar name\n \n5. Using the plugin in conjunction with SpringBoot\n\nThe buildWithApiDocs task generates a jar containing the project outputs and the generated api docs.\nTo produce a Spring Boot executable jar, you must then execute the bootRepackage task.\nThese steps can be combined with a custom task such as the following:\n\n```\ntask buildSpringBootWithApiDocs(type: BootRepackage, dependsOn: buildWithApiDocs) {\n    group 'build'\n    description 'Builds the jar as a Spring Boot executable jar containing the api docs'\n}\n```\n\n6. Modifying the jar manifest\n\nThe buildWithApiDocs task generates a default jar manifest. If you have customised the project's jar manifest then those\ncustomisations should be passed to the buildWithApiDocs task by extracting a shared manifest such as:\n\n```\nversion = blah\n\next.sharedManifest = manifest {\n    attributes(\n        'Implementation-Title': \"${jar.baseName}\",\n        'Implementation-Version': version\n    )\n}\n```\n\nwhich can then be re-used in your jar task or the buildWithApiDocs task as follows:\n\n```\nbuildWithApiDocs{\n    manifest = project.manifest {\n        from sharedManifest\n    }\n}\n```\n \n\n### What this plugin gives your build automatically\n\n1. Applies the spring-rest-doc and asciidoctor plugins\n\n2. Applies the spring-rest-docs dependencies and repositories\n\n3. Creates a new source set, 'doc', to hold your asciidoc files\n\n4. Excludes api doc tests from the regular unit test task\n\n5. Creates the following new tasks for working with spring rest docs\n   1. verification / apiDocTest : run the api doc test cases\n   2. documentation / generateApiDocs : run the api doc test cases and generate the final HTML and PDF documentation\n   3. build / buildWithApiDocs : perform a full build including the api doc tests, adding the generated documentation to a copy of the final jar \n\n\n### Development\n\n1. Increment the minor version number (still needs to be RELEASE because I can't figure out how to make the git-repo plugin support snapshots)\n2. Make your changes\n3. You can use publishMavenJavaPublicationToMavenLocal to deploy the change to your local maven repo\n   1. Note however that this won't work if your changes add new transitive third-party dependencies\n4. Test consumption of the plugin from another project by\n   1. Adding mavenLocal() to your buildscript repositories to consume form local repo\n   2. using the new version number for the plugin in your buildscript dependencies\n   3. You may well need to execute ``` ./gradlew --refresh-dependencies``` to pick up changes, then refresh your IDE\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-gradle-repo","private":false,"url":"https://github.com/UKHomeOffice/pttg-gradle-repo","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-ui","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-ui","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Financial Status Service UI #\n\n\n## Overview ##\n\nUI project to add basic interface to an API connected to Barclays Bank which can help Tier 2,4 & 5 applicants prove their financial status to government far quicker and easier than before.\n\n## Tech ##\n\n- Node\n- Angular\n- Cucumber JS & Gherkin\n\nThe frontend is an Angular 1 project.\n\nUserbase is a known limited quantity of users internal to The Home Office and access to Chrome as a browser for those users is confirmed, it has therefore been determined that supporting other browsers is unnessesary - however web standards should be adheared to.\n\nThis project has a Node JS backend soley for the purposes of relaying asynchronous requests to the API which exists in its own project, this is one single Node file `server.js`.\n\n## install ##\n\n    // Checkout the project\n    git clone git@github.com:UKHomeOffice/pttg-fs-ui.git `\n\n    // move into cloned directory\n    cd pttg-fs-ui\n\n    // install modules\n    npm install\n    \n    // generate the compiled/minified resources e.g. js, css\n    gulp\n    \n    // start the project\n    npm start\n\n## Specification ##\n\nThe specification of this project is primarily via Feature files using a BDD approach.\n\nThese features are written in Gherkin and can be consumed by CucumberJS to run tests against those specifications.\n\n## Tests ##\n\n    // To run BDD feature file tests\n    npm run test:bdd\n    \n    // to run Unit tests\n    npm run test:unit\n    \n    // to run all tests\n    npm run test:all\n   \nTests are run using Chrome in Headless mode, you need an up-to-date version of Chrome to do this.\n\nTests may be run in Chrome with a browser window by changing the `var headless = true` in the config section of the `features/support/world.js`\n\n### BDD Base image ###\n\nWhen running the tests in Docker the image built by Dockerfile_test is used. This installs all dependent node modules not just prod ones.\n\nThis Docker image is based on a pttg shared image `pttg-bdd-base`. \n`pttg-bdd-base` is based on the current  LTS version of node and the latest stable chrome version for chrome headless testing.\n\nTherefore to test against the latest version of node just rebuild the pttg-bdd-base project and the latest stable version of Chrome will be baked into the image.\n\nFurthermore, if updating the node version in this project it is best to also update the node version in `pttg-bdd-base` which is used when running the BDD tests.\n\n\n\n\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-sqs-producer","private":false,"url":"https://github.com/UKHomeOffice/rtp-sqs-producer","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"rtp-sqs-producer [![npm version](https://badge.fury.io/js/rtp-sqs-producer.svg)](https://badge.fury.io/js/rtp-sqs-producer) [![Build Status](https://travis-ci.org/UKHomeOffice/rtp-sqs-producer.svg)](https://travis-ci.org/UKHomeOffice/rtp-sqs-producer)\n-----------------\n\nVery thin wrapper around amazon sqs. Provides little more than a friendly interface to publish messages to the sqs queue, and\nretry in case of failure.\nCurrently doesn't support receiving, but only publishing.\n\nUse\n---\n\n    var producer = new (require('rtp-sqs-connector'))(config)\n    \nThe module assumes that you have injected your amazon sqs credentials into `process.env`.\n\nAnyone (internal or external) can report concerns with published code by emailing evw-contactus@homeoffice.gsi.gov.uk.\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-ip-api","private":false,"url":"https://github.com/UKHomeOffice/pttg-ip-api","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Income Proving API\n=\n\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/pttg-ip-api/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/pttg-ip-api)\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/pttg-ip-api/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/pttg-ip-api)\n\nOverview\n-\n\nThis is the Income Proving API. Interfaces with the HMRC via [pttg-ip-hmrc] to retrieve previous incomes and employments and calculates if a migrant has sufficient income to support further family members migrating to the UK. \n\nCurrently the only client of this service is [pttg-ip-fm-ui] though it is likely future version may be integrated directed with existing UKVI Case-working systems.\n\n## Find Us\n\n* [GitHub]\n* [Quay.io]\n\n### Technical Notes\n\nThe API is implemented using Spring Boot and exposes a RESTFul interface.\n\n* /incomeproving/v2/individual/financialstatus\n* /incomeproving/v2/individual/income\n\n### Infrastructure\n\nThis service is packaged as a Docker image and stored on [Quay.io]\n\nThis service currently runs in AWS and has an associated [kubernetes configuration]\n\n## Building\n\nThis service is built using Gradle on Drone using [Drone yaml]\n\n## Versioning\n\nFor the versions available, see the [tags on this repository].\n\n## Authors\n\nSee also the list of [contributors] who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENCE.md]\nfile for details.\n\n\n\n[contributors]:                     https://github.com/UKHomeOffice/pttg-ip-api/graphs/contributors\n[pttg-ip-hmrc]:                     https://github.com/UKHomeOffice/pttg-ip-hmrc\n[pttg-ip-fm-ui]:                    https://github.com/UKHomeOffice/pttg-ip-fm-ui\n[Quay.io]:                          https://quay.io/repository/ukhomeofficedigital/pttg-ip-api\n[kubernetes configuration]:         https://github.com/UKHomeOffice/kube-pttg-ip-api\n[Drone yaml]:                       .drone.yml\n[tags on this repository]:          https://github.com/UKHomeOffice/pttg-ip-api/tags\n[LICENCE.md]:                       LICENCE.md\n[GitHub]:                           https://github.com/UKHomeOffice/pttg-ip-api\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-test-ip-mongodb","private":false,"url":"https://github.com/UKHomeOffice/pttg-test-ip-mongodb","license":null,"readme":"# Overview\n\nThis project creates some test data in a MongoDB instance\n\nStart mongo as per usual:\n\n mongod --dpath <path to your data directoy>\n \n optional - override Mongodb host and port with environment variables  - MONGO_HOST and MONGO_PORT","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-ip-gt-ui","private":false,"url":"https://github.com/UKHomeOffice/pttg-ip-gt-ui","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Generic UI\n=\n\nOverview\n-\n\nTODO\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-ip-fm-ui","private":false,"url":"https://github.com/UKHomeOffice/pttg-ip-fm-ui","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Income Proving Family Migration UI\n==================================\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/pttg-ip-fm-ui/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/pttg-ip-fm-ui)\n\nOverview\n-\n\nThis is the Income Proving HMRC UI. Interfaces with the HMRC via [pttg-ip-api] to retrieve incomes and employments which calculates if a migrant has sufficient income to support migration of family members. \n\nThis UI gathers the migrant details and displays the calculated result.\n\n## Find Us\n\n* [GitHub]\n* [Quay.io]\n\n### Technical Notes\n\nThe UI is implemented using Angular v1 on Node.Js.\n\n\n### Infrastructure\n\nThis service is packaged as a Docker image and stored on [Quay.io]\n\nThis service currently runs in AWS and has an associated [kubernetes configuration]\n\n## Building\n\nThis service is built using Gradle on Drone using [Drone yaml]\n\n## Versioning\n\nFor the versions available, see the [tags on this repository].\n\n## Authors\n\nSee the list of [contributors] who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENCE.md]\nfile for details.\n\n\n\n[contributors]:                     https://github.com/UKHomeOffice/pttg-ip-fm-ui/graphs/contributors\n[pttg-ip-api]:                      https://github.com/UKHomeOffice/pttg-ip-api\n[Quay.io]:                          https://quay.io/repository/ukhomeofficedigital/pttg-ip-fm-ui\n[kubernetes configuration]:         https://github.com/UKHomeOffice/kube-pttg-ip-fm-ui\n[Drone yaml]:                       .drone.yml\n[tags on this repository]:          https://github.com/UKHomeOffice/pttg-ip-fm-ui/tags\n[LICENCE.md]:                       LICENCE.md\n[GitHub]:                           https://github.com/UKHomeOffice/pttg-fm-ui\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-centos-tomcat","private":false,"url":"https://github.com/UKHomeOffice/docker-centos-tomcat","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# tomcat\n\n## Description\nApache Tomcat Container\n\n## Usage\n\nTo build this container you need to run:\n\n```\nmake build\n```\n\nIf you want TLS configured then you need to put your ca.crt, crt.pem and key.pem into the ssl directory for these to be mounted into the image (with those specific names). If you would like to enable Basic Auth as well then you need to rename and edit ssl/tomcat-users.xml.template to ssl/tomcat-user.xml adding any users as required. The SSL directory should then be mounted into the container to /opt/tomcat/ssl. To run the Tomcat container run which will dynamically start with SSL/Basic Auth if it finds the correct files:\n\n```\nmake run\n```\n\nThis will startup a Tomcat container running Catalina\n\n\n## Tests\n\nAs part of the build process the docker file will run the OpenSSL and Tomcat test exiting and failing the build if these fail.\n\n\n### Credits\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n[Cookiecutter](https://github.com/audreyr/cookiecutter)\n[audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-income-mongodb","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-income-mongodb","license":null,"readme":"# Proving things - mongodb database - test data\n\n### Kubernetes Deployment\n\nThis is the kubernetes deployment files for Proving Things mongo db (non production test data)\n\nrun deployment example\n\n\t./scripts/deploy_kd <mongo image version> <environment>\n\t\ne.g.\n\t\n\t./scripts/deploy_kd 0.1.0 preprod \n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-ip-gt-ui","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-ip-gt-ui","license":null,"readme":"# pttg-income-ui\nProving Things - Income UI\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-ip-api","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-ip-api","license":null,"readme":"## Proving Things - Income API -  Kubernetes Resources\n\n### Kubernetes Deployment\n\nThis is the kubernetes deployment files for Proving Things Income API\n\nAs it stands this is using [KB8OR for deployments](https://github.com/UKHomeOffice/kb8or)\n\nrun deployment\n\n\t./scripts/deploy -e dev ./pttg-ip-api.yaml\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-vault","private":false,"url":"https://github.com/UKHomeOffice/docker-vault","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Vault in Kubernetes\n\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/docker-vault/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/docker-vault)\n\nVault in a docker image with all the necessary scripts to run vault in\nkubernetes cluster.\n\nThere are two main components in this setup:\n- Vault container - main vault process which listens in a tcp socket\n- overlord container - bash script which takes care of unsealing vault,\n  creating admin user and persisting vault unseal key if `KUBERNETES_NAMESPACE` is set.\n\n\n## Getting Started\n\nFirst of all, you need to make sure that your kubernetes cluster supports\nservice accounts and that either the default or vault specific service account\nhas access to create kubernetes secrets in the namespace. However this is only\nneeded if you're bootstrapping vault.\n\nWe are going assume that vault is being deployed into a namespace called vault.\n\nIn the below example we will use AWS DynamoDB as a backend. So for that, you\nneed to create a DynamoDB table and an IAM user with required permissions. Then\nchange environment variables accordingly in [vault deployment file](kube/vault-deployment.yaml).\n\n\n### Configuration\n\n* `VAULT_BACKEND` - defaults to `inmem`.\n* `TLS_DISABLE` - defaults to 1.\n* `VAULT_ADMIN_PASSWORD` - admin password that overlord sets when creating an\n  admin user. If unset, overlord will generate a random one, which will be\n  logged, so changing it is advisable.\n* `KUBERNETES_NAMESPACE` - if service account is present, then the namespace\n  name will be taken from there and vault unseal key will be persisted as\n  kubernetes secret.\n\nAny other environment variables, which are supported by vault, can be set.\n\n\n### Deployment\n\n* Deploy an empty vault-unseal secret (will be updated by overlord script)\n```\nkubectl --namespace=vault create -f kube/vault-secrets.yaml\n```\n\n* Deploy vault pod (vault itself and overlord container)\n```\nkubectl --namespace=vault create -f kube/vault-deployment.yaml\n```\n\n* Deploy a kubernetes service endpoint for vault\n```\nkubectl --namespace=vault create -f kube/vault-svc.yaml\n```\n\n\n### Other\n\n#### TLS\n\nIf you want to provide TLS certs, you can place them in `/vault/certs/cert.pem`\nand `/vault/certs/key.pem`.\n\n\n## Contributing\n\nContributions are most certainly welcome. If you want to introduce a breaking\nchange or any other major change, please raise an issue first to discuss.\n\n## License\n\n[MIT](LICENSE)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/workshops","private":false,"url":"https://github.com/UKHomeOffice/workshops","license":null,"readme":"# workshops\nA Collection of Developer Workshop &amp; Presentation Documents\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-postgresql-patroni","private":false,"url":"https://github.com/UKHomeOffice/docker-postgresql-patroni","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"|Build Status| |Coverage Status|\n\nPatroni: A Template for PostgreSQL HA with ZooKeeper, etcd or Consul\n------------------------------------------------------------\nThere are many ways to run high availability with PostgreSQL; for a list, see the `PostgreSQL Documentation <https://wiki.postgresql.org/wiki/Replication,_Clustering,_and_Connection_Pooling>`__.\n\nPatroni is a template for you to create your own customized, high-availability solution using Python and — for maximum accessibility — a distributed configuration store like `ZooKeeper <https://zookeeper.apache.org/>`__, `etcd <https://github.com/coreos/etcd>`__ or `Consul <https://github.com/hashicorp/consul>`__. Database engineers, DBAs, DevOps engineers, and SREs who are looking to quickly deploy HA PostgreSQL in the datacenter—or anywhere else—will hopefully find it useful.\n\nWe call Patroni a \"template\" because it is far from being a one-size-fits-all or plug-and-play replication system. It will have its own caveats. Use wisely.\n\n.. contents::\n    :local:\n    :depth: 1\n    :backlinks: none\n\n==============\nHow Patroni Works\n==============\n\nPatroni originated as a fork of `Governor <https://github.com/compose/governor>`__, the project from Compose. It includes plenty of new features. \n\nFor an example of a Docker-based deployment with Patroni, see `Spilo <https://github.com/zalando/spilo>`__, currently in use at Zalando.\n\nFor additional background info, see:\n\n* `PostgreSQL HA with Kubernetes and Patroni <https://www.youtube.com/watch?v=iruaCgeG7qs>`__, talk by Josh Berkus at KubeCon 2016 (video)\n* `Feb. 2016 Zalando Tech blog post <https://tech.zalando.de/blog/zalandos-patroni-a-template-for-high-availability-postgresql/>`__\n\n===================\nRunning the service\n===================\nThe docker container has a number of environment variables that are available for use:\nMost can be seen in the Dockerfile, the most common are described below\n- SYNCHRONOUS - set to on to make replication synchronous\n- ADMINUSER - the main admin user for the database\n- ADMINPASS - the password for the admin user\n- ETCD_TTL - the period before a postgres master election occurs after the current master dies\n- ETCD_TIMEOUT - the period before the call to etcd times out, this is described as a string eg. \"2s - 2 seconds, 1m - 1 minute\"\n\nExample usage:\n```\ndocker run -t -i -e ADMINUSER=\"postgres\" -e ADMINPASS=\"password\" patroni-dev --etcd=192.168.99.100\n```\n\n================\nDevelopment Status\n================\n\nPatroni is in active development and accepts contributions. See our `Contributing <https://github.com/zalando/patroni/blob/master/README.rst#contributing>`__ section below for more details. \n\n===========================\nTechnical Requirements/Installation\n===========================\n\n**For Mac**\n\nTo install requirements on a Mac, run the following:\n\n::\n\n    brew install postgresql etcd haproxy libyaml python\n    pip install psycopg2 pyyaml\n\n===================\nRunning and Configuring\n===================\n\nTo get started, do the following from different terminals:\n::\n\n    > etcd --data-dir=data/etcd\n    > ./patroni.py postgres0.yml\n    > ./patroni.py postgres1.yml\n\nYou will then see a high-availability cluster start up. Test different settings in the YAML files to see how the cluster’s behavior changes. Kill some of the components to see how the system behaves.\n\nAdd more ``postgres*.yml`` files to create an even larger cluster.\n\nPatroni provides an `HAProxy <http://www.haproxy.org/>`__ configuration, which will give your application a single endpoint for connecting to the cluster's leader. To configure,\nrun:\n\n::\n\n    > haproxy -f haproxy.cfg\n\n::\n\n    > psql --host 127.0.0.1 --port 5000 postgres\n\n===============\nYAML Configuration\n===============\n\nGo `here <https://github.com/zalando/patroni/blob/master/SETTINGS.rst>`__ for comprehensive information about settings for etcd, consul, and ZooKeeper. And for an example, see `postgres0.yml <https://github.com/zalando/patroni/blob/master/postgres0.yml>`__. \n\n===============\nReplication Choices\n===============\n\nPatroni uses Postgres' streaming replication, which is asynchronous by default. For more information, see the `Postgres documentation on streaming replication <http://www.postgresql.org/docs/current/static/warm-standby.html#STREAMING-REPLICATION>`__.\n\nPatroni's asynchronous replication configuration allows for ``maximum_lag_on_failover`` settings. This setting ensures failover will not occur if a follower is more than a certain number of bytes behind the follower. This setting should be increased or decreased based on business requirements.\n\nWhen asynchronous replication is not optimal for your use case, investigate Postgres's `synchronous replication <http://www.postgresql.org/docs/current/static/warm-standby.html#SYNCHRONOUS-REPLICATION>`__. Synchronous replication ensures consistency across a cluster by confirming that writes are written to a secondary before returning to the connecting client with a success. The cost of synchronous replication: reduced throughput on writes. This throughput will be entirely based on network performance. \n\nIn hosted datacenter environments (like AWS, Rackspace, or any network you do not control), synchronous replication significantly increases the variability of write performance. If followers become inaccessible from the leader, the leader effectively becomes read-only.\n\nTo enable a simple synchronous replication test, add the follow lines to the ``parameters`` section of your YAML configuration files:\n\n.. code:: YAML\n\n        synchronous_commit: \"on\"\n        synchronous_standby_names: \"*\"\n\nWhen using synchronous replication, use at least three Postgres data nodes to ensure write availability if one host fails.\n\nChoosing your replication schema is dependent on your business considerations. Investigate both async and sync replication, as well as other HA solutions, to determine which solution is best for you.\n\n===============================\nApplications Should Not Use Superusers\n===============================\n\nWhen connecting from an application, always use a non-superuser. Patroni requires access to the database to function properly. By using a superuser from an application, you can potentially use the entire connection pool, including the connections reserved for superusers, with the ``superuser_reserved_connections`` setting. If Patroni cannot access the Primary because the connection pool is full, behavior will be undesirable.\n\n================\nContributing\n================\nPatroni accepts contributions from the open-source community; see the `Issues Tracker <https://github.com/zalando/patroni/issues>`__ for current needs. \n\nBefore making a contribution, please let us know by posting a comment to the relevant issue. \nIf you would like to propose a new feature, please first file a new issue explaining the feature you’d like to create.\n\n.. |Build Status| image:: https://travis-ci.org/zalando/patroni.svg?branch=master\n   :target: https://travis-ci.org/zalando/patroni\n.. |Coverage Status| image:: https://coveralls.io/repos/zalando/patroni/badge.svg?branch=master\n   :target: https://coveralls.io/r/zalando/patroni?branch=master\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/opensource-by-default","private":false,"url":"https://github.com/UKHomeOffice/opensource-by-default","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# opensource-by-default","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-neo4j","private":false,"url":"https://github.com/UKHomeOffice/docker-neo4j","license":null,"readme":"## Running Clustered Neo4j on Kubernetes.\n\n#### Cluster the Nodes\n\nOnce you've decided how many nodes you want to have then first create your services for each of your nodes to join the cluster like so.\n\n```yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: neo4j-<cluster-number>\n  name: neo4j-<cluster-number>\nspec:\n  ports:\n    -\n      name: cluster\n      port: 5001\n      targetPort: 5001\n    -\n      name: transaction\n      port: 6001\n      targetPort: 6001\n  selector:\n    name: neo4j-<cluster-number>\n```\n\nThis will mean that each pod will have their own static ip.\n\nThen from there you can spin up your pods. \n\n```yaml\napiVersion: v1\nkind: ReplicationController\nmetadata:\n  labels:\n    app: neo4j-<cluster-number>\n  name: neo4j-<cluster-number>\nspec:\n  replicas: 1\n  selector:\n    name: neo4j-<cluster-number>\n  template:\n    metadata:\n      labels:\n        name: neo4j-<cluster-number>\n        app: neo4j-<cluster-number>\n    spec:\n      containers:\n        -\n          imagePullPolicy: Always\n          image: neo4j:3.0.2-enterprise\n          name: neo4j-<cluster-number>\n          resources:\n            limits:\n              memory: \"2G\"\n              cpu: \"500m\"\n          ports:\n          - containerPort: 7474\n            name: \"http\"\n          - containerPort: 5001\n            name: \"cluster\"\n          - containerPort: 6001\n            name: \"transaction\"\n          env:\n          - name: \"NEO4J_dbms_mode\"\n            value: \"HA\"\n          - name: NEO4J_ha_host_coordination\n            value: 0.0.0.0:5001\n          - name: NEO4J_ha_host_data\n            value: neo4j-1:6001\n          - name: \"NEO4J_HA_ADDRESS\"\n            value: \"0.0.0.0\"\n          - name: \"NEO4J_ha_serverId\"\n            value: \"<cluster-number>\"\n          - name: \"NEO4J_ha_initialHosts\"\n            value: \"neo4j-1:5001,neo4j-2:5001,neo4j-3:5001\"\n      restartPolicy: Always\n```\n\n\nNote the environment variables:\n\n* `NEO4J_HA_ADDRESS` must be 0.0.0.0 to allow the pods ip's in as they can be any ip. \n* `NEO4J_ha_initialHosts` a comma separated list of your nodes using the service ips, or dns names if you have them.\n* `NEO4J_ha_serverId` id of a server must be unique within a cluster.\n* `NEO4J_ha_host_coordination` same as `NEO4J_HA_ADDRESS` but with the port added.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/firearms-prototype","private":false,"url":"https://github.com/UKHomeOffice/firearms-prototype","license":null,"readme":"# Unofficial Static Government Digital Prototype kit\nSimple prototyping kit for GOV.UK service designers. This kit does not contain all of the functionality of the express kit, however, you will not need node.js or git experience, and you will not need to run anything in command line.\n\nCreated internally at Home Office Digital - not supported, not created by GDS, supplied as-is\n\nThis is not finished! It's Alpha Alpha!\n\n## Getting Started\n\n#### You will need:\n- A mac (sorry, this isn't tested on PCs yet)\n\n#### Nice to have:\n- _Some_ HTML knowledge\n\nFirst, either:\n\n- Download a zip of this repository from https://github.com/tjharrop/simple_prototype_kit/archive/master.zip and unzip it to your computer\n\n*- OR -*\n\n- If you're comfortable with git, either clone the repo in the git desktop client or via command line (`git clone https://github.com/tjharrop/simple_prototype_kit.git`)\n\nOnce you have the folder on your computer, you will see the index.html and example files. The example files contain demonstrations of various pieces of functionality. index.html has buttons to guide you through each page. Full instructions on each demo to follow.\n\n## Running the thing\n\nThere are 2 options here. You can either open index.html in Safari or Firefox directly or you can run a small script which will allow you to use chrome.\n\n#### Using Safari or Firefox\n1. Cmd + click index.html in Finder\n2. Open With\n3. Select Safari or Firefox\n\n#### Using Chrome (recommended)\n\n_You may see an unauthorised developer warning message. If you do, cmd + click and click \"open\" instead (thanks Joe)_\n\n1. Double click run.command (see above if you get a warning)\n2. In chrome, go to http://localhost:1987/index.html\n\n## Working on it\n\nA good place to start in index.html.\n\n1. Open this in your chosen HTML editor (if you don't have one, see https://atom.io/).\n2. Hack away! Change some content, add some buttons or form fields according to your design\n3. Press refresh in your browser.\n\n#### Changing the service name\n\nThere is a file called service-name.txt which looks like this:\n\n```Digital Service Name```\n\n1. Open it\n2. Change it to your service name\n3. Save it\n\n#TODO\n\n1. Full instructions on the examples pages\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-integration-stub","private":false,"url":"https://github.com/UKHomeOffice/evw-integration-stub","license":null,"readme":"# EVW Integration Stub\n\nA stub service to mock RESTful communication between Electronic Visa Waiver Customer and Caseworker applications. Built using [Dyson](https://www.npmjs.com/package/dyson)\n\n[![npm version](https://img.shields.io/npm/v/evw-integration-stub.svg?style=flat-square)](https://www.npmjs.com/package/evw-integration-stub)\n\n## Run\n\n```\nINTEGRATION_SERVICE_URL={$someURL} ./node_modules/.bin/evw-interation-stub\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/centralteam_ci","private":false,"url":"https://github.com/UKHomeOffice/centralteam_ci","license":null,"readme":"# centralteam_ci\nLooking at CI solutions centrally as a strategic goal for HO\n\n## Open source\n\n* [Buildbot](http://buildbot.net/) - Python-based toolkit for continuous integration.\n* [Drone](https://github.com/drone/drone) - Continuous integration server built on Docker and configured using YAML files.\n* [Go](http://www.go.cd/) - Open source continuous delivery server.\n* [Jenkins](http://jenkins-ci.org/) - An extendable open source continuous integration server.\n* [Concourse](https://concourse.ci) Rather than a myriad of checkboxes, pipelines are defined as a single declarative config file\n* [ElectricFlow](http://electric-cloud.com/products/electricflow/)  ElectricFlow/ElectricCommander gives distributed teams shared control and visibility into infrastructure, tool chains and processes. It accelerates and automates the software delivery process to enable agility, predictability and security across many build-test-deploy pipelines\n* [rundesk](http://rundeck.org) Rundeck features fine-grain access controls, a built-in job scheduler, and the ability to define workflows that dispatch commands and scripts to your nodes.\n* [strider](http://stridercd.com) Strider is an Open Source Continuous Deployment / Continuous Integration platform. It is written in Node.JS / JavaScript and uses MongoDB as a backing store.\n\n## Services\n\n* [Buildkite](https://buildkite.io/)\n* [CircleCI](https://circleci.com/)\n* [Cloudbees](http://www.cloudbees.com/)\n* [Codeship](https://codeship.io/)\n* [Drone.io](https://drone.io/)\n* [Shippable](http://www.shippable.com/)\n* [Snap-CI](https://www.snap-ci.com/)\n* [Travis-CI](https://travis-ci.org/)\n* [Wrecker](https://app.wercker.com/)\n* [Solano CI](https://www.solanolabs.com)  Faster Continuous Integration and Deployment with patented auto-parallelization. See results 10 to 80x faster. 14-day free trial. No credit card required.\n* [Teamcity](http://www.jetbrains.com/teamcity/index.html)  Ready to work, extensible\n* [bamboo](https://www.atlassian.com/software/bamboo)  Bamboo does more than just run builds and tests. It connects issues, commits, test results, and deploys so the whole picture is available to your entire product team and developer-friendly build server out of the box\n* [quickbuild](http://www.pmease.com/)  GitHub integration. Perforce shelve support. Coverity report rendering. Subversion external change retrieval. Resource access info. Display reasons for waiting steps. Custom build and request columns. Favorite dash board list. Inheritable environment variables.And much more...\n* [pulse](http://zutubi.com) no free version.\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx","license":null,"readme":"# docker-nginx\nMinimal bare nginx docker image.\n\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/docker-nginx/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/docker-nginx)\n\n### Configuration\nBare in mind, that this container does not run as root, so you won't be able to\nbind to privileged ports.\n\nThere are two ways to pass nginx configuration.\n\n#### Config block via env variable\nRead in a config block preserving new lines, etc.\n\n```\nread -r -d '' NGINX_CONFIG <<'EOF'\nworker_processes auto;\nerror_log /dev/stderr error;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    server {\n        listen       10080 default_server;\n        server_name  _;\n        access_log   /dev/stdout;\n\n        location / {\n            default_type text/plain;\n            return 200 \"Everything is OK.\\n\";\n        }\n    }\n}\nEOF\n```\n\n```\nexport NGINX_CONFIG\ndocker run -ti --rm -e NGINX_CONFIG quay.io/ukhomeofficedigital/nginx:latest\n```\n\n#### Config file via env variable\nYou can provide a config file inside a container instead.\n\n```\ndocker run -ti --rm -e NGINX_CONFIG_FILE=/config/nginx.conf quay.io/ukhomeofficedigital/nginx:latest\n```\n\n\n### Extra Configs\n\nExtra config snippets can be found in [conf.d](conf.d) directory. You can\ninclude specific files or all by adding the following to the main `nginx.conf`\nfile:\n\n```\ninclude /etc/nginx/conf.d/logging.conf;\n\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drt-passenger-splits","private":false,"url":"https://github.com/UKHomeOffice/drt-passenger-splits","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"Voygage Passenger Splits\n====================\n\nService reads data from Advance Passenger Information (API) which is posted to an S3 bucket,\nperforms some data crunching, and then provides a rest query endpoint so that other parts of DRT can ask\n\n?) What is the paxSplit (passenger desk distribution) for flight BA123 @  2016-06-03 14:45 (i.e.\n  http://service:port/flight-pax-splits/port-LHR/BA123/scheduled-arrival-time-20160603T1445\n\n?) What are the paxSplits for flights a port, between 20160612T1231 and 201607T1830 (i.e.\n  http://service:port/flight-pax-splits/port-LHR?from=20160612T1231&to=2016071830\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-postgres-exec","private":false,"url":"https://github.com/UKHomeOffice/docker-postgres-exec","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-taurus","private":false,"url":"https://github.com/UKHomeOffice/docker-taurus","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-tuf","private":false,"url":"https://github.com/UKHomeOffice/docker-tuf","license":null,"readme":"# docker-tuf\nDocker The Update Framework\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-python","private":false,"url":"https://github.com/UKHomeOffice/docker-python","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Gradle\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-python.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-python)\n\nThis is a docker python image with pip installed\n\n## Getting Started\n\nThis is a base image for python, this can be used by python projects as the base image\n\n### Environment Variables\n\n### Volumes\n\n### Other\n\n## Contributing\n\nContributions are most certainly welcome. If you want to introduce a breaking\nchange or any other major change, please raise an issue first to discuss.\n\n## License\n\n[MIT](LICENSE)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-toolbox","private":false,"url":"https://github.com/UKHomeOffice/docker-toolbox","license":null,"readme":"# Docker Toolbox\n\n\n## Summary\n\nThis is a simple toolbox of tools for use within docker including sysdig.\n\n\n\n## Usage\n\nTo build this container or run it in your local environment use the Makefile by running:\n\n```\nmake build\n```\n\nor to run it do:\n\n```\nmake shell\n```\n\n\nTo run this container on a CoreOS node then you need to mount specific paths into the container and run it under priviledged mode to allow Sysdig to work correctly. This can be done with the following command:\n\n```\ndocker run -it --rm -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro --privileged --name NAME quay.io/ukhomeofficedigital/toolbox\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-acceptance","private":false,"url":"https://github.com/UKHomeOffice/pttg-acceptance","license":null,"readme":"pttg-acceptance\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-prototype","private":false,"url":"https://github.com/UKHomeOffice/passports-prototype","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-prototype\n\nPassport journeys\n\n# Setup\n\nClone/download this repo and run `npm install` then `npm start`.\n\nVisit <a href=\"http://localhost:3000/\" target=\"_blank\">http://localhost:3000/</a> in your browser.\n\n# Development\n\nWatch for JS and Sass changes and automatically compile using `npm run watch:js` and `npm run watch:sass`.\n\n# Redis\n\nWhen Redis is running on localhost:6379 (standard settings) your session data won't be lost during app restarts. [Download Redis](http://redis.io/download).\n\n# View the prototype online\n\n<a href=\"http://passports-prototype.herokuapp.com/\" target=\"_blank\">http://passports-prototype.herokuapp.com/</a>\n\nIt may take a few seconds to load.\n\n# Deploying to Heroku\n\nGet yourself a Heroku account and get yourself added to the prototype app.\n\nAdd Heroku remote (that you will push to, to deploy) `heroku git:remote -a passports-prototype`\n\nUse `git push heroku master` to deploy the master branch. To deploy another branch use `git push heroku <branch-name>:master`, where `<branch-name>` is the branch you want to push.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-kubectl","private":false,"url":"https://github.com/UKHomeOffice/docker-kubectl","license":null,"readme":"# kubectl\nKubernetes kubectl\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-ip-fm-ui","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-ip-fm-ui","license":null,"readme":"# pttg-ip-fm-ui\nProving Things - Family Migration Income UI\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-angular","private":false,"url":"https://github.com/UKHomeOffice/pttg-angular","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-scala-sbt","private":false,"url":"https://github.com/UKHomeOffice/docker-scala-sbt","license":null,"readme":"# docker-scala-sbt\n\nEnables build of Scala apps.\n\nThis has:\n- sbt\n- activator\n- OpenJDK\n- sonar-scanner\n\n### Usage\n\nThis image is to be used to build your scala apps. Below in an example of how you would do this in drone with caching enabled.\n\nContents of .drone.yml:\n```\npipeline:\n  drone_s3_cache_pull:\n     image: quay.io/ukhomeofficedigital/drone-s3cache:v0.1.0\n     drone_s3_cache_mode: \"pull\"\n\n  build:\n    commands:\n       - \"/root/entrypoint.sh 'sbt clean update test assembly'\"\n    image: quay.io/ukhomeofficedigital/scala-sbt:v0.2.0\n    when:\n      event:\n        - push\n        - pull_request\n\n  drone_s3_cache_push:\n    image: quay.io/ukhomeofficedigital/drone-s3cache:v0.1.0\n    drone_s3_cache_folders:\n      - .ivy2\n    drone_s3_cache_mode: \"push\"\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/so-acceptance","private":false,"url":"https://github.com/UKHomeOffice/so-acceptance","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# SO Acceptance\n\nSO Acceptance is a NodeJS acceptance testing framework build on top of [CodeceptJS](https://github.com/Codeception/CodeceptJS) and is designed to be used in SO applications\n\n## Installation\n\n```bash\n$ npm install so-acceptance --save-dev\n```\n\n## Application configuration\n\n### Simple usage\n\n#### Setup\n\nFor quickstart usage you can simply npm install the library and add the following script to your package.json.\n\npackage.json\n```json\n\"scripts\": {\n  \"test:acceptance\": \"so-acceptance --steps\"\n}\n```\n\nThe root of your acceptance tests will need to be located in a folder called `acceptance_tests` in the root of your app, features are located in a subdirectory named `features`.\n\n```\n<service name>\n  |__acceptance_tests/\n       |__features/\n          |__your tests go here.\n```\n\n#### Running\n\n```bash\n$ npm run test:acceptance\n```\n\n### Session Mocking\n\n#### Setup\n\nSO Acceptance comes with session mocking so you are able to test steps independently of one another. This assumes you are using  [hof-bootstrap](https://github.com/UKHomeOffice/hof-bootstrap/) and redis for session storage.\n\n#### API\n\nThe `I` actor in CodeceptJS has been extended with the following session manipulation methods:\n\n* `getSession(route_name)`: returns the session data for the given route_name (defined in bootstrap config).\n* `setSessionData(route_name, {data})`: sets the key: value pairs in data to session for given route_name.\n* `setSessionSteps(route_name, [steps])`: sets the visited steps to session for given route name.\n\nAs these API methods all return promises, they should be used within generator functions to ensure code execution is paused while the session is manipulated:\n\n```js\nScenario('I set session steps', function *(I) {\n  yield I.setSessionSteps('journey-name', ['/', '/step-1']);\n  I.amOnPage('/step-2');\n});\n```\n\n### Extensions to the actor (`I`)\n\nThe following methods have been added to `I`:\n\n* `completeToStep(step[, values])`: Completes a form as far as a given step, using values specified or default values inferred from the field names.\n* `submitForm()`: clicks the submit button `input[type=\"submit\"]`\n* `visitPage(page, [journey], [prereqs])`: visits `'/'`, then page, prepending journey if present, and setting prereq steps. Page and Prereqs are expected to be [PageObjects](https://github.com/Codeception/CodeceptJS/blob/master/docs/pageobjects.md) with a `url` property.\n* `seeErrors(errors)`: accepts either an array of keys or a single key, and checks for validation errors related to the element.\n* `seeElements(elements)`: accepts either an array of selectors or a single selector and checks all elements are present on the page.\n* `refreshPage()`: refreshes the page - async, should be called within a generator.\n* `seeEach(texts)`: accepts an array of text and checks all texts are present on the page`.\n* `dontSeeEach(texts)`: accepts an array of text and checks all texts are not present on the page`.\n\n### Customisation\n\nYou can add any customisation options in `acceptance_tests/codecept.conf.js`. The default options are extended with overrides defined here.\n\ncodecept.conf.js\n```js\nvar path = require('path');\n\nmodule.exports = {\n  name: 'name of your app',\n  include: {\n    customPage: path.resolve(__dirname, './pages/custom.js')\n  }\n}\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drone-trigger","private":false,"url":"https://github.com/UKHomeOffice/drone-trigger","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/court-flagging","private":false,"url":"https://github.com/UKHomeOffice/court-flagging","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"<<<<<<< HEAD\n# CFN (Court Flagging Notification)\n\n## Getting Started\n\n### Prerequisities\n\n- [Node.js](https://nodejs.org/en/) - Tested against LTS\n- NPM (installed with Node.js) - Works with versions 2 and 3.\n- [Redis server](http://redis.io/download) running on the default port\n\n### Up & Running\n\n```bash\n$ cd cfn\n$ npm install\n$ npm run dev\n```\n\nThen visit: [http://localhost:8080/](http://localhost:8080/)\n\n## Testing\n\n### Acceptance Tests\nWith the server running in development mode (`npm run dev`), start the acceptance tests:\n\n```bash\n$ npm run test:acceptance\n```\nPhantomjs is required to run the acceptance tests (`npm install phantomjs`), or alternatively, export `IN_BROWSER=true` to run the tests in Firefox.\n\n### Unit Tests\n```bash\n$ npm t\n```\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details\n=======\n# court-flagging\nWeb service for Court Flag Notifications\n>>>>>>> 85953f3c21d587096fbb21dfa64aa043b1625ed2\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/rtp-monitoring-metrics","private":false,"url":"https://github.com/UKHomeOffice/rtp-monitoring-metrics","license":null,"readme":"# RTP monitoring and metrics\n\nThis module is intended to be used with node.js web apps using Express. It exports an express router which provides useful endpoints.\n \n### Endpoints provided\n\nThe following endpoints are provided:\n\n##### GET `/metrics`\n\nThis will return metrics in the following JSON format, with HTTP 200:\n\n``` json\n{\n  \"cpu\": 5.5,\n  \"memory\": {\n    \"rss\": 92643328,\n    \"heapTotal\": 71131392,\n    \"heapUsed\": 40280776\n  }\n}\n```\n\n*Note: if an error occurs attempting to generate the metrics HTTP 500 will be returned with JSON containing the error*\n\n##### GET `/healthz`\n\nThis will check that a session store is available and return HTTP 200 all is ok. The JSON response will be in the following format:\n \n``` json\n{\n  \"app\": \"OK\",\n  \"session\": \"OK\"\n}\n```\n\nIf the request to the endpoint times out then the app is not alive. Also if there is not a session store available HTTP 500 will be returned and it will state \"unavailable\".\n\n##### GET `/readiness`\n\nThe readiness endpoint operates exactly the same as the `/healthz` endpoint.\n\n### How to use\n\n1. Add this module to your application using `npm install --save rtp-monitoring-metrics`\n2. Add the exported router to you app: `app.use(require('rtp-monitoring-metrics'));`\n\n### Additional configuration\n\nIf you would like to mount the middleware functions under a sub-route, you can do so using express out the box\n\n```\napp.use('/path-to-mount-at', require('rtp-monitoring-metrics'));\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-fs-ui","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-fs-ui","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-fs-stub","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-fs-stub","license":null,"readme":"## Proving Things - Income Barclays stub -  Kubernetes Resources\n\n### Kubernetes Deployment\n\nThis is the kubernetes deployment files for Proving Things Financial Status Barclays Stub\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-fs-service","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-fs-service","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kd","private":false,"url":"https://github.com/UKHomeOffice/kd","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# kd - Kubernetes resources deployment tool\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/kd.svg?branch=master)](https://travis-ci.org/UKHomeOffice/kd) [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/kd/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/kd)\n\nThis is a very minimalistic tool for deploying kubernetes resources.\n\n## Features\n\n- Go template engine support\n- Supports any kubernetes resource type\n- Polls deployment resources for completion\n\n## Running with Docker\nNote that kd can be run with docker, [check here for the latest image tags](https://quay.io/repository/ukhomeofficedigital/kd?tab=tags)\n\n```bash\ndocker run quay.io/ukhomeofficedigital/kd:latest --help\n```\n## Installation\n\nPlease download the required binary file from the [releases page](https://github.com/UKHomeOffice/kd/releases)\n\n## Getting Started\n\nThe is only requirement and that is a kubectl binary in your `${PATH}`. You\ncan use the docker image or download the binary for your OS from\n[releases](https://github.com/UKHomeOffice/kd/releases) page.\n\nFirst, let's create a simple deployment template. Templating data comes from\nthe environment, so in this example we'll use `NGINX_IMAGE_TAG` environment\nvariable to set nginx image tag.\n\nCreate a `nginx-deployment.yaml` with the following content:\n\n```yaml\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 5\n  template:\n    metadata:\n      labels:\n        name: nginx\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:{{.NGINX_IMAGE_TAG}}\n          ports:\n            - containerPort: 80\n          resources:\n            limits:\n              cpu: \"0.1\"\n          livenessProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 10\n            timeoutSeconds: 1\n```\n\n```bash\n$ export NGINX_IMAGE_TAG=1.11-alpine\n$ kd --context=mykube --namespace=testing --file nginx-deployment.yaml\n[INFO] 2016/09/21 14:06:37 main.go:153: deploying deployment/nginx\n[INFO] 2016/09/21 14:06:38 main.go:157: deployment \"nginx\" submitted\n[INFO] 2016/09/21 14:06:41 main.go:194: deployment \"nginx\" in progress. Unavailable replicas: 5.\n[INFO] 2016/09/21 14:06:56 main.go:194: deployment \"nginx\" in progress. Unavailable replicas: 5.\n[INFO] 2016/09/21 14:07:11 main.go:190: deployment \"nginx\" is complete. Available replicas: 5\n```\n\nYou can fail an ongoing deployment if there's been a new deployment by adding `--fail-superseded` flag.\n\n## Configuration\n\nConfiguration can be provided via cli flags and arguments as well as\nenvironment variables.\n\n```bash\n$ kd --help\n\nNAME:\n   kd - simple kubernetes resources deployment tool\n\nUSAGE:\n   kd [global options] command [command options] [arguments...]\n\nVERSION:\n   v0.3.0\n\nAUTHOR:\n   Vaidas Jablonskis <jablonskis@gmail.com>\n\nCOMMANDS:\n     help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --debug                              debug output [$DEBUG, $PLUGIN_DEBUG]\n   --insecure-skip-tls-verify           if true, the server's certificate will not be checked for validity [$INSECURE_SKIP_TLS_VERIFY, $PLUGIN_INSECURE_SKIP_TLS_VERIFY]\n   --kube-server URL, -s URL            kubernetes api server URL [$KUBE_SERVER, $PLUGIN_KUBE_SERVER]\n   --kube-token TOKEN, -t TOKEN         kubernetes auth TOKEN [$KUBE_TOKEN, $PLUGIN_KUBE_TOKEN]\n   --context CONTEXT, -c CONTEXT        kube config CONTEXT [$KUBE_CONTEXT, $PLUGIN_CONTEXT]\n   --namespace NAMESPACE, -n NAMESPACE  kubernetes NAMESPACE [$KUBE_NAMESPACE, $PLUGIN_KUBE_NAMESPACE]\n   --fail-superseded                    fail deployment if it has been superseded by another deployment. WARNING: there are some bugs in kubernetes. [$FAIL_SUPERSEDED, $PLUGIN_FAIL_SUPERSEDED]\n   --certificate-authority PATH         the path to a file containing the CA for kubernetes API PATH [$KUBE_CERTIFICATE_AUTHORITY, $PLUGIN_KUBE_CERTIFICATE_AUHORITY]\n   --certificate-authority-data PATH    the certificate authority data for the kubernetes API PATH [$KUBE_CERTIFICATE_AUTHORITY_DATA, $PLUGIN_KUBE_CERTIFICATE_AUHORITY_DATA]\n   --certificate-authority-file value   the path to file the certificate authority file from certifacte-authority-data option (default: \"/tmp/kube-ca.pem\")\n   --file PATH, -f PATH                 the path to a file or directory containing kubernetes resource/s PATH [$FILES, $PLUGIN_FILES]\n   --timeout TIMEOUT, -T TIMEOUT        the amount of time to wait for a successful deployment TIMEOUT (default: 3m0s) [$TIMEOUT, $PLUGIN_TIMEOUT]\n   --check-interval INTERVAL            deployment status check interval INTERVAL (default: 1s) [$CHECK_INTERVAL, $PLUGIN_CHECK_INTERVAL]\n   --help, -h                           show help\n   --version, -v                        print the version\n```\n\n\n## Build\n\nDependencies are located in the vendor directory and managed using\n[govendor](https://github.com/kardianos/govendor) cli tool.\n\n```\ngo test -v -cover\n\nmkdir -p bin\nGOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags \"-X main.Version=dev+git\" -o bin/kd_linux_amd64\n```\n\nYou can also build `kd` in a docker container:\n\n```bash\ndocker run --rm -v $PWD:/go/src/github.com/UKHomeOffice/kd -w /go/src/github.com/UKHomeOffice/kd -ti golang:1.6 bash\ncd /go/src/UKHomeOffice/kd\ngo get\nGOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags \"-X main.Version=dev+git\" -o bin/kd_linux_amd64\n```\n\n## Release process\n\nPush / Merge to master will produce a docker\n[image](https://quay.io/repository/ukhomeofficedigital/kd?tab=tags) with a tag `latest`.\n\nTo create a new release, just create a new tag off master.\n\n\n## Contributing\n\nWe welcome pull requests. Please raise an issue to discuss your changes before\nsubmitting a patch.\n\n\n## Author\n\nVaidas Jablonskis [vaijab](https://github.com/vaijab)\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-pentest","private":false,"url":"https://github.com/UKHomeOffice/docker-pentest","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/sheff-hub-dev-wiki","private":false,"url":"https://github.com/UKHomeOffice/sheff-hub-dev-wiki","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-versions","private":false,"url":"https://github.com/UKHomeOffice/evw-versions","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drt-scalajs-spa-exploration","private":false,"url":"https://github.com/UKHomeOffice/drt-scalajs-spa-exploration","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# DRT Dynamic Response Tool\n\n\nThis project is a tool used by UK Borderforce to help ensure sufficient resources are available at the border to deal \nwith anticipated demand. \nIt is the latest (as of Mar 2017) iteration of a tool to tackle this lofty goal. This repo replaces an earlier, PHP, database\nand Scala set of projects. \nWe began from the ground up here, consolidating back into a monolith per port. We'll cover the decisions in more detail in \n[Architectural Decision Records](doc/architecture/decisions/0001-record-architecture-decisions.md)\n\nDrt v2 is a replacement for an earlier system built primarily with PHP. \n\nIt is a tool which aims to provide Borderforce officers in airports with information that helps them \nA) respond to live changes to circumstances - flights coming in early or late, lower than expected resourcing due to people calling in sick, \nB) planning for future resourcing\n\nAs of 2017-03-39 it primarily focuses on the 'live' aspect. \n\n## Approach\nThe core of both drt v1 and v2 is an algorithm by Home Office Science. It's an optimization function which searches a space for the lowest cost based on: queue length (time), number of desks staffed, cost of changing staff and so on. \nThe underlying algorithm is based on NM1Q simulation. \n\n### Recognized flaws\nNM1 is based on the assumption that the processing times are normally distributed. In practice, we do not have a normal distribution. We've got a multi-modal distribution with a very long tail. \nThat is, we have a mean processing time of something like 40s, but we know different countries have different averages. Also, if there is a problem with someone's status, then that can take many minutes of an officers time, and may close a desk for 10-20 minutes, depending on the port. \n\nAn assumption/desire to operate with high utilization. Littles law shows us this is problematic.\n\n## Feeds\n\n### Airports/Flights\nWe take feeds from the Airports about flight statuses. Most ports use a Json based web service called Chroma, there's a couple of different flavours of that. LHR has their own proprietary feed based on CSV files on a web server. Gatwick use a push service in Microsoft's Azure cloud - we've not wired this one into the new system yet.\n\n### API (Advance Passenger Info)\nThis provides us data about the nationality breakdown on incoming flights. \n\n### Technical Stack\nScala server. Scalajs reactjs client. Communication between client server is primarily via lihaoyi's autowire. Server is hosted in play, uses Akka streams to read the feeds, state is store in Akka actors. Some of the actors use akka persistence. \nThe simulation/optimization algorithm is R, taken directly from Home Office Science. \n\n### Physical Deployment\nEach port has their own instance. The feeds are chose at application start based on envvars\n\n![System Flow](doc/architecture/diagrams/systemflow.svg?raw=true)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/home-office-pattern-library","private":false,"url":"https://github.com/UKHomeOffice/home-office-pattern-library","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# GOV.UK Prototype kit\n\n## News\n\n**Upgrading from version 1 to 2:** the latest version of the kit (2.0.0 and later) is not compatible with previous versions. If you update your old prototypes you'll need to [convert them as well](https://github.com/alphagov/govuk_prototype_kit/blob/master/docs/updating-the-kit.md).\n\n## About the prototype kit\n\nThe prototype kit provides a simple way to make interactive prototypes that look like pages on GOV.UK. These prototypes can be used to show ideas to people you work with, and to do user research.\n\nRead the [project principles](docs/principles.md).\n\n## Security\n\nIf you publish your prototypes online, they **must** be protected by a [username and password](docs/guides/publishing-on-heroku.md). This is to prevent members of the public finding prototypes and thinking they are real services.\n\nYou must protect user privacy at all times, even when using prototypes. Prototypes made with the kit look like GOV.UK, but do not have the same security provisions. Always make sure you are handling user data appropriately. \n\n## Installation instructions\n\n- [Installation guide for new users (non technical)](docs/install/introduction.md)\n- [Installation guide for developers (technical)](docs/developer-install-instructions.md)\n\n## Guides\n\n1. [Setting up git](docs/guides/setting-up-git.md)\n2. [Publishing on the web (Heroku)](docs/guides/publishing-on-heroku.md)\n3. [Using GOV.UK Verify](docs/guides/using-verify.md)\n\n## Other documentation\n\n- [Prototype kit principles](docs/principles.md)\n- [Making pages](docs/making-pages.md)\n- [Writing CSS](docs/writing-css.md)\n- [Updating the kit to the latest version](docs/updating-the-kit.md)\n- [Tips and tricks](docs/tips-and-tricks.md)\n- [Creating routes (server-side programming)](docs/creating-routes.md)\n\n## Community\n\nWe have two Slack channels for the Prototype kit. You'll need a government email address to join them.\n\n* [Slack channel for users of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit/)\n* [Slack channel for developers of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit-dev/)\n","travis":false,"contributing":"# Contribution guidelines\n\nWe really like contributions and bug reports, in fact the project wouldn't have got to this stage without them.\nWe do have a few guidelines to bear in mind.\n\n## Community\n\nWe have two Slack channels for the Prototype kit. You'll need a government email address to join them.\n\n* [Slack channel for users of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit/)\n* [Slack channel for developers of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit-dev/)\n\n## Raising bugs\n\nWhen raising bugs please explain the issue in good detail and provide a guide to how to replicate it.\nWhen describing the bug it's useful to follow the format:\n\n- what you did\n- what you expected to happen\n- what happened\n\n## Suggesting features\n\nPlease raise feature requests as issues before contributing any code.\n\nThis ensures they are discussed properly before any time is spent on them.\n\n## GOV.UK Elements\n\nThe project contains code taken from the [GOV.UK Elements](https://github.com/alphagov/govuk_elements/) project.\nPlease check that any issues related to that code are raised with that project, not this one.\n\n## Contributing code\n\n### Indentation and whitespace\n\n2-space, soft-tabs only please. No trailing whitespace.\n\n### Versioning\n\nFollow the guidelines on [semver.org](http://semver.org/) for assigning version\nnumbers.\n\nVersions should only be changed in a commit of their own, in a pull request of\ntheir own. This alerts team members to the new version and allows for\nlast-minute scrutiny before the new version is released. Also, by raising a\nseparate pull request, we avoid version number conflicts between feature\nbranches.\n\n### Commit hygiene\n\nPlease see our [git style guide](https://github.com/alphagov/styleguides/blob/master/git.md)\nwhich describes how we prefer git history and commit messages to read.\n","masterBranchProtection":false},{"name":"UKHomeOffice/technical-service-requirements","private":false,"url":"https://github.com/UKHomeOffice/technical-service-requirements","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-api-mock","private":false,"url":"https://github.com/UKHomeOffice/lev-api-mock","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# lev-api-mock\nA mock version of the LEV API (and downstream) backend systems\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-drone","private":false,"url":"https://github.com/UKHomeOffice/docker-drone","license":null,"readme":"# Drone docker image\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/drone/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/drone)\n\nThis image trusts [DSP CA](https://github.com/UKHomeOffice/dsp-root-ca).\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/dsp-root-ca","private":false,"url":"https://github.com/UKHomeOffice/dsp-root-ca","license":null,"readme":"# Digital Services Platform Public CA certificates\n\nThis repository contains Root and Intermediate CA certificates for DSP platform.\n\n\n## How to install\n\n### Alpine Linux\n\n```bash\napk add ca-certificates curl\ncurl -s https://raw.githubusercontent.com/UKHomeOffice/dsp-root-ca/master/root-ca.pem > /usr/local/share/ca-certificates/dsp_root_ca.crt\ncurl -s https://raw.githubusercontent.com/UKHomeOffice/dsp-root-ca/master/intermediate-ca.pem > /usr/local/share/ca-certificates/dsp_intermediate_ca.crt\nupdate-ca-certificates\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lcs-prototype","private":false,"url":"https://github.com/UKHomeOffice/lcs-prototype","license":null,"readme":"# Unofficial Static Government Digital Prototype kit\nSimple prototyping kit for GOV.UK service designers. This kit does not contain all of the functionality of the express kit, however, you will not need node.js or git experience, and you will not need to run anything in command line.\n\nCreated internally at Home Office Digital - not supported, not created by GDS, supplied as-is\n\nThis is not finished! It's Alpha Alpha!\n\n## Getting Started\n\n#### You will need:\n- A mac (sorry, this isn't tested on PCs yet)\n\n#### Nice to have:\n- _Some_ HTML knowledge\n\nFirst, either:\n\n- Download a zip of this repository from https://github.com/tjharrop/simple_prototype_kit/archive/master.zip and unzip it to your computer\n\n*- OR -*\n\n- If you're comfortable with git, either clone the repo in the git desktop client or via command line (`git clone https://github.com/tjharrop/simple_prototype_kit.git`)\n\nOnce you have the folder on your computer, you will see the index.html and example files. The example files contain demonstrations of various pieces of functionality. index.html has buttons to guide you through each page. Full instructions on each demo to follow.\n\n## Running the thing\n\nThere are 2 options here. You can either open index.html in Safari or Firefox directly or you can run a small script which will allow you to use chrome.\n\n#### Using Safari or Firefox\n1. Cmd + click index.html in Finder\n2. Open With\n3. Select Safari or Firefox\n\n#### Using Chrome (recommended)\n\n_You may see an unauthorised developer warning message. If you do, cmd + click and click \"open\" instead (thanks Joe)_\n\n1. Double click run.command (see above if you get a warning)\n2. In chrome, go to http://localhost:1987/index.html\n\n## Working on it\n\nA good place to start in index.html.\n\n1. Open this in your chosen HTML editor (if you don't have one, see https://atom.io/).\n2. Hack away! Change some content, add some buttons or form fields according to your design\n3. Press refresh in your browser.\n\n#### Changing the service name\n\nThere is a file called service-name.txt which looks like this:\n\n```Digital Service Name```\n\n1. Open it\n2. Change it to your service name\n3. Save it\n\n#TODO\n\n1. Full instructions on the examples pages\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/scala-skeleton-project","private":false,"url":"https://github.com/UKHomeOffice/scala-skeleton-project","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# scala-skeleton-project\nSkeleton project used for scala programming exercises\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/api-guide-for-developers","private":false,"url":"https://github.com/UKHomeOffice/api-guide-for-developers","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-proxy-govuk","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-proxy-govuk","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# GovUK-branded NGINX reverse proxy\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/nginx-proxy-govuk/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/nginx-proxy-govuk)\n\nSimply a version of [docker-nginx-proxy] with GovUK-branded error\npages. - Please read [the documentation for that image].\n\n## Debugging\nTo have the template render with more debugging information set `VERBOSE_ERROR_PAGES` to `TRUE`.\n\nIn the terminal\n```\ndocker run -e \"VERBOSE_ERROR_PAGES=TRUE\" -p \"10443:10443\" nginx-proxy-govuk\n```\n\n## Find Us\n\n* [GitHub]\n* [Quay.io]\n\n## Versioning\n\nThis image will be versioned alongside the version of\n[docker-nginx-proxy] it consumes, with a minor build number taggen on\nthe end. For the versions available, see the [tags on this repository].\n\n## Authors\n\n* **Daniel A.C. Martin** - *Initial work* - [daniel-ac-martin]\n\nSee also the list of [contributors] who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md]\nfile for details.\n\n[contributors]:                     https://github.com/UKHomeOffice/docker-nginx-proxy-govuk/graphs/contributors\n[daniel-ac-martin]:                 https://github.com/daniel-ac-martin\n[docker-nginx-proxy]:               https://github.com/UKHomeOffice/docker-nginx-proxy\n[GitHub]:                           https://github.com/UKHomeOffice/docker-nginx-proxy-govuk\n[LICENSE.md]:                       LICENSE.md\n[Quay.io]:                          https://quay.io/repository/ukhomeofficedigital/nginx-proxy-govuk\n[tags on this repository]:          https://github.com/UKHomeOffice/docker-nginx-proxy-govuk/tags\n[the documentation for that image]: https://github.com/UKHomeOffice/docker-nginx-proxy/blob/master/README.md\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-validation-rules","private":false,"url":"https://github.com/UKHomeOffice/evw-validation-rules","license":null,"readme":"# evw-validation-rules\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/evw-validation-rules.svg?branch=master)](https://travis-ci.org/UKHomeOffice/evw-validation-rules)\n[![npm version](https://badge.fury.io/js/evw-validation-rules.svg)](https://www.npmjs.com/package/evw-validation-rules)\n\nA collection of validation rules for all Electronic Visa Wavier applications to use","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-node-hello-world","private":false,"url":"https://github.com/UKHomeOffice/docker-node-hello-world","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Drone + Docker + Node \"Hello World\" Example\n\n\nThis repository gives you a quick introduction to getting docker running with Node. It is intended for the Docker beginner.\n\nYou can adapt the same approach to other languages but I chose Node because it's what I use most often.\n\n\n## Setup\n\nFirst, checkout this project locally and then follow these steps:\n\n0. Go through the Docker [installation](https://docs.docker.com/installation/) and [getting started guide](https://docs.docker.com/mac/started/) before you start.\n1. Install the [Docker Toolbox](https://www.docker.com/docker-toolbox).\n2. Start a \"Quickstart Terminal\" session (see the getting started guide).\n3. Build the Docker image: `docker build -t hello-world .`\n4. Run the image in a container: `docker run -d -p 4001:4000 hello-world`\n  - The `-d` flag says to run the container in the background (daemon mode).\n  - The `-p` flag maps port 4000 from the container to port 4001 on the docker machine.\n5. View your new container: `docker ps -a`\n6. Check the logs for your container: `docker logs <container-id>`\n7. Check the port of the container: `docker port <container-id>`\n8. Open the app running on the docker machine: `open http://$(docker-machine ip default):4001`\n\n\n\n## Notes & Tips\n\n- If you make changes to your application, you will need to rebuild your image and restart your container.\n- The `docker-machine` command controls the virtual machine that is running Docker on your machine.\n- View logs for a docker container: `docker logs <container-id>`\n- List the running containers: `docker ps -a`\n- List all local images: `docker images`\n- Remove an image: `docker rmi <image-id>`\n- Remove a container: `docker rm <container-id>`","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/scala-hello-world","private":false,"url":"https://github.com/UKHomeOffice/scala-hello-world","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"Hello World with Scala Play\n===========================\n\nThis is a vanilla Scala Play application for demo purposes.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/survey-tool-investigations","private":false,"url":"https://github.com/UKHomeOffice/survey-tool-investigations","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# survey_tool_investigations\nInvestigations into using the API of a variety of survey tools\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drone-s3cache","private":false,"url":"https://github.com/UKHomeOffice/drone-s3cache","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# drone-s3cache [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/drone-s3cache/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/drone-s3cache)\n\nDrone plugin for caching build artifacts in S3 \n\n\nThis plugin allows for caching build artifact directories containing external libraries, packages, etc in S3 which should speed up build process. Cache is currently keyed by repository name e.g. `UKHomeOffice/<project_name>`. This should suffice in most cases. S3 cache automatically expires after 7 days.  \n\n## Configuration\n\nThe following parameters are used to configure the plugin:\n\n- `drone_s3_cache_mode`: defines the mode of operation. Possible values `pull`, `push`.\n- `drone_s3_cache_folders`: list of local project directories to be cached in S3, e.g.:\n```\ndrone_s3_cache_folders: \n  - .bundle\n  - folder1\n  - folder2/foo\n```\n\n- `drone_s3_cache_bucket_name`: S3 bucket name. This can be configured in drone secrets as `DRONE_S3_CACHE_BUCKET_NAME`. Ensure drone has permissions to `get` and `put` objects in that bucket.\n\nAWS credentials need to be present in drone secrets (preferred!) as `DRONE_S3_CACHE_AWS_ACCESS_KEY_ID`, `DRONE_S3_CACHE_AWS_SECRET_ACCESS_KEY` or passed to the container via environment variables (local testing!) as `AWS_SECRET_KEY_ID`, `AWS_SECRET_ACCESS_KEY`\n\n\n### Drone configuration example\n\n```yaml\npipeline:\n  drone_s3_cache_pull:\n    image: quay.io/ukhomeofficedigital/drone-s3cache:latest\n    drone_s3_cache_mode: \"pull\"\n\n  build:\n    image: ruby:2.3.1-alpine\n    commands:\n      - bundle install --path .bundle\n    when:\n      event: [push, pull_request]\n\n  drone_s3_cache_push:\n    image: quay.io/ukhomeofficedigital/drone-s3cache:latest\n    drone_s3_cache_folders: \".bundle\"\n    drone_s3_cache_mode: \"push\"\n```\n\n## Release process\n\nPush / Merge to master will produce a docker\n[image](https://quay.io/repository/ukhomeofficedigital/drone-s3cache?tab=tags) with a tag `latest`.\n\nTo create a new release, just create a new tag off master.\n\n## Contributing\n\nWe welcome pull requests. Please check issues and existing PRs before submitting a patch.\n\n## Author\n\nMarcin Ciszak [marcinc](https://github.com/marcinc)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/github-org-team-creator","private":false,"url":"https://github.com/UKHomeOffice/github-org-team-creator","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"This will be a tool to add all users from a github org to a team within that github org\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-rpm-builder","private":false,"url":"https://github.com/UKHomeOffice/docker-rpm-builder","license":null,"readme":"# Docker RPM Builder\n\nA Docker image to build rpms, includes ruby, fpm and rpmbuild.\n\n### Usage\n\ndocker run -it -v ${PWD}:${PWD} -w ${PWD} quay.io/ukhomeofficedigital/rpm-builder:v0.1 <build rpm script>\n\n## Contributing\n\nContributions are most certainly welcome. If you want to introduce a breaking\nchange or any other major change, please raise an issue first to discuss.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-node-hello-world","private":false,"url":"https://github.com/UKHomeOffice/kube-node-hello-world","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# kube-node-hello-world\n\nThis repo is here as a demonstration for how to deploy to the DSP platform with Drone (or manually)\n\n## How to deploy manually\nYou will need to be on the dev VPN.\n\nYou will need to set the below environment variables:\nKUBE_NAMESPACE - namespace to deploy to\nKUBE_SERVER - kubernetes API server\nKUBE_TOKEN - token for talking to kubernetes API server\nDRONE_COMMIT_SHA - image tag to deploy\n\nThat that if they are not set the deploy will still happen but using the defaults in your ~/.kube/config file.\n\n## How to deploy with drone\nSection coming soon!\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-keystore","private":false,"url":"https://github.com/UKHomeOffice/passports-keystore","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-keystore\nStore and retrieve named objects an express session\n\n## Usage\n\n```\nconst Keystore = require('hmpo-keystore');\n\nkeystore = new Keystore(req, 'name');\n\nkeystore.setValue({ object: 'value' });\nlet obj = keystore.getValue();\nkeystore.clear();\n\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-neo4j-haproxy","private":false,"url":"https://github.com/UKHomeOffice/docker-neo4j-haproxy","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# docker-neo4j-haproxy\n\n## Instructions For Use\n\nJust simply run:\n\n`docker run -ti -e AUTH=<user:pass> -e proxy='proxy1;proxy2;proxy3' quay.io/ukhomeofficedigital/neo4j-haproxy:v0.0.1`\n\n##Environment Variables\n\nAUTH :- Either the colon delineated pair like this: `user:pass` or a base64 encoded string like this: `dXNlcjpwYXNz`\n\nPROXY :- Submit a full semicolon delineated string like this: `neo4j-1:7474;neo4j-2:7474;neo4j-3:7474`\n\n## Acknowledgements\n\nMost of the hard work was already done by Stefan Armbruster in his blog post here: http://blog.armbruster-it.de/2015/08/neo4j-and-haproxy-some-best-practices-and-tricks/\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-neo4j-haproxy)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/nginx-proxy)\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to \ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](CONTRIBUTING.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Authors\n\n* **Giles Hinchcliff** - *Initial work* - [gileshinchcliff](https://github.com/gileshinchcliff)\n\nSee also the list of \n[contributors](https://github.com/UKHomeOffice/docker-nginx-proxy/graphs/contributors) who \nparticipated in this project.\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hello-peeps","private":false,"url":"https://github.com/UKHomeOffice/hello-peeps","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hello-peeps\ntesting for drone on this simple application\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/end-tenancy","private":false,"url":"https://github.com/UKHomeOffice/end-tenancy","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# End Tenancy\n\n[![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/end-tenancy/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/end-tenancy) [![Build Status](https://travis-ci.org/UKHomeOffice/end-tenancy.svg?branch=master)](https://travis-ci.org/UKHomeOffice/end-tenancy)\n\nThis project is built with [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap) and uses [Docker](https://www.docker.com/).\n\n## Getting started\n\nGet the project from Github\n```bash\n$ git clone git@github.com:UKHomeOffice/end-tenancy.git && cd end-tenancy\n```\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\n[Install Docker Compose](https://docs.docker.com/compose/install/)\n\nRun the services locally with Docker Compose\n```bash\n$ docker-compose up\n```\n\nGetting your hands dirty (You'll need [Redis](http://redis.io/) for this)\n```bash\n$ npm run dev\n```\n\nFor anything else end-tenancy-related, look in [package.json](./package.json) for a full list of scripts etc, and\n[config.js](./config.js) for environment variables.\n\nOtherwise, see [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap).\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/keycloak-utils","private":false,"url":"https://github.com/UKHomeOffice/keycloak-utils","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-integration","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-integration","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# pttg-fs-integration","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kubernetes-e2e-binaries","private":false,"url":"https://github.com/UKHomeOffice/kubernetes-e2e-binaries","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# kubernetes-e2e-binaries\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/kubernetes-e2e-binaries/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/kubernetes-e2e-binaries)\n\n# tldr\nIf you've seen the readme before and you're after the _tldr_ version of how to build and contribute then go straight to the *Release process* section.\n\n# What is this software and what does it do\nThe purpose of this repository is to create an immutable artifact with pre-baked and compiled kubernetes binaries for the version of kubernetes that needs to be tested.\n\nThe artifact created from this repo can be used to import into a working kubernetes cluster code ( works even for a git checkout of the kubernetes source code with a matching tag ) the kubernetes upstream binaries including the binaries needed for end-to-end testing.\n\nThis way you get kubernetes compiled and versioned binaries, without having to wait the long time needed to compile them.\nThis will save additional time when testing against a kubernetes cluster in your continuous integration software !\n\n# How to use the software\nThis software is geared to be included by your CI in your custom build steps.\n\nOne of your purpose built build steps will need to copy the `_output` kubernetes directory from this image , from the directory `/kubernetes/${KUBERNETES_VERSION}/_output`, into your CI checked out source code.\n\n`KUBERNETES_VERSION` tracks the kubernetes upstream release tags.\n\n\n# Release process\nThe release process is done using drone.\n\n## local testing\nApart from the push to the upstream container registry, all the CI build steps can be reproduced on your laptop/workstation.\n\nThis makes it easy to test your changes before pushing them to the CI system.\n\n## kubernetes version\nTo target a specific version of kubernetes you have to change a few things in the repository.\n- for the `Makefile` export the KUBERNETES_VERSION environment variable before running any make targets\n- the make target `update_kube_version` will update the `.drone.yml` file to the same version as the one set in the exported variable above. In drone you have to setup the kubernetes version multiple times because at this time drone doesn't have support for setting global environment variables.\n\n\n# Licensing\nSee `LICENSE.md`\n\n# Raising issues\nUse the github issue functionality on this repository to raise issue against this project.\n\n# Contributing\nSee `CONTRIBUTING.md`\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/ubuntu-pxe","private":false,"url":"https://github.com/UKHomeOffice/ubuntu-pxe","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Secure ISO and PXE Desktop Creation\n\nThis simple script will create an unattended Ubuntu ISO from start to finish and enable a PXE Server which will enable building of a semi hardened build of 16.04 Ubuntu.\n\n\n## Usage\n\n* From your command line, run the following commands:\n\n```\nmake vagrant\n```\n\n## What it does\n\nThis script does a bunch of stuff, here's the quick walk-through:\n\n* Downloads the appropriate Ubuntu original ISO straight from the Ubuntu servers; if a file with the exact name exists, it will use that instead (so it won't download it more than once if you are creating several unattended ISO's with different defaults)\n* Downloads the matching Ubuntu Netboot files to allow for PXE booting\n* Sets up DNSMasq as a local DHCP Server and PXE/Tftp Server\n* Sets up apt-proxy-ng as a local Apt Cache to save bandwidth when installing multiple machine.\n* Language/locale: en_GB\n* Keyboard layout: UK\n* Root login disabled (so make sure you write down your default usernames' password!)\n* Partitioning: LVM, full disk, with LUKS encryption following CIS partitioning layout guidelines\n* Install the mkpasswd program (part of the whois package) to generate a hashed version of your password\n* Install the genisoimage program to generate the new ISO file\n* Mount the downloaded ISO image to a temporary folder\n* Copy the contents of the original ISO to a working directory\n* Set the default installer language\n* Add/update the preseed file\n* Add the autoinstall option to the installation menu\n* Generate the new ISO file\n* Cleanup\n* Show a summary of what happended:\n\n### Steps to install ...\n\nTo install a new desktop or laptop, connect a network cable from the machine to an isolated network. The seed server must also have on interface on the isolated network (it can be a point to point link) but must also have an internet connection to fetch remote packages. \nOnce ready either set the machine to boot via PXE if this is an option or use a USB key with the image burnt as a preboot.\nNotes:\n- Upon first boot the system will ask for a few user details and a new LUKS password (choose something secure)\n- this allows you to either add a single shared login root user or create a bespoke end user who has root permissions (@molliver still true?)\n- The system will also run a couple of other hardening desktop settings as per the CESG desktop guidelines. \n- During the install you may be asked for a hostname but at this point you can use anything. \n- Once the install is complete the machine will reboot - at this point set the machine to not boot from the network or from USB in the BIOS and set a BIOS password.\n\n\n\n\n\n\n### Steps to Create ISO ...\n\n* Run the make as per above which will produce you an ISO image in the local directory.\n* Burn the ISO to a USB key or CD as a bootable image.\n\nTo do this on OSx you can do:\n\n```\ndiskutil list\ndiskutil unmountDisk /dev/disk4\ndiskutil list\n# check that disk is the one you intend to overwrite\nsudo dd if=${PWD}/xenial-custom-amd64.iso of=/dev/rdisk4 bs=1m\ndiskutil eject /dev/disk4\n```\n\n(where disk4 is the USB disk, if not change as appropriate)\n\n\n## Design\n\nThis repo is designed as a base for the CESG Guidelines, these design decisions, mitigations and process are viewable here [development_desktops](development_desktops.md)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/node-hello-world","private":false,"url":"https://github.com/UKHomeOffice/node-hello-world","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Node \"Hello World\" Example\n\nThis repository is a sample hello-world application written with NodeJS. It's purpose is to help new developers practice Dockerising applications.\n\n## Dockerising the application\n1. Select an appropriate base image from the [list of UKHomeOffice base images here](https://github.com/UKHomeOffice/hosting-platform/blob/master/developer-docs/writing_dockerfiles.md)\n  1. **IMPORTANT NOTE!! If completing the developer induction please use the image ```node:6.9-alpine```**\n2. We recommend the NodeJS onbuild images, but if you want to play with one of the other images to get more practice that's ok too!\n3. Follow the instructions to write a Dockerfile\n4. Once you have the Dockerfile build and run your docker image and bind it to one of your host ports\n5. Show that the application works by loading it in your web browser\n\n## Running the application without Docker\n\n### Pre-requisites\nNode version 4+ and npm are required to run this project.\n\n### Running the application\nFirst, checkout this project locally and then follow these steps:\n\n```bash\nnode server.js\n```\n\n## MYSQL demo\nSet the following environment vars:\n\n - DBHOST (mysql host e.g. 127.0.0.1)\n - DBUSER (mysql user e.g. root)\n - DBPASS (mysql pass e.g. root)\n - DBNAME (mysql database e.g. my database)\n\n#### GET http://localhost:4000/table\nYou should see a table that increases with every request of the timestamp of the request\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-backup-to-s3","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-backup-to-s3","license":null,"readme":"# Docker Mysql Backup to S3\n\nThis will deploy a one shot pod to backup a mysql db to an s3 bucket.\n\n### Usage\n\nTemplate for the pod and s3 bucket are in the templates folder.\n\nThings to do manually:\n- Create an IAM user\n- Generate KMS and allow the IAM user access to it\n\nCopy the following:\n- s3.yaml to stacks-hod-platform\n- pod.yaml to your project\n\ns3.yaml:\nFill in top params\n\nsecrets.yaml:\nAdd base64 encoded secrets to each variable, and upload to namespace. DO NOT COMMIT THIS FILE WITH THE SECRETS TO ANY REPO.\n\npod.yaml:\nAdd this to your project, should be able to deploy to your namespace without any changes.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-sonar-scanner","private":false,"url":"https://github.com/UKHomeOffice/docker-sonar-scanner","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-revealjs","private":false,"url":"https://github.com/UKHomeOffice/docker-revealjs","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# docker-revealjs\nMake revealjs slideshows easily with docker\n\n# Usage\n\nWe recommend building a Dockerfile image with your presentation on top of this image, for example:\n```\nFROM quay.io/ukhomeofficedigital/revealjs\nADD index.html /app/revealjs/index.html\n```\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/developer-induction","private":false,"url":"https://github.com/UKHomeOffice/developer-induction","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Developer Induction\nThis repo contains the slides for developer induction, produced with prez/revealjs.\n\n## Viewing the slides\n### Viewing published slide deck\n[Published slide deck available here](http://developer-induction.notprod.homeoffice.gov.uk)\n[Published PDF slide deck available here](http://developer-induction.notprod.homeoffice.gov.uk/slides.pdf)\n\n### Running as a server with docker\n```\ndocker build -t dev-induction . \ndocker run -ti -p 9000:80 dev-induction\n```\n\n## Editing the slides\n### Pre-requisites\nYou must have node version 6+ installed. You can install the dependencies with:\n```\nnpm install\n```\n\n### Editing the slides\n```\nnpm start\n```\nThis will serve the slides from [http://localhost:9000](http://localhost:9000) and open it in your browser.\nThese will be reloaded automatically when changes are made to the slides.\nIt will also update pdf versions of the slides as you make edits.\n\nEdit the slides in the **slides** folder.\n\n\n## Presentation mode\nIf you're presenting you can syncronise everyone else's screen, in your browser console do:\n```js\nCookies.set(\"secret\", \"[insert secret\")\n```\n> Get the secret from @chrisns","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-piwik","private":false,"url":"https://github.com/UKHomeOffice/kube-piwik","license":null,"readme":"# kube-piwik","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-payment-stub","private":false,"url":"https://github.com/UKHomeOffice/passports-payment-stub","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Passports payment stub\n\nSimple payment form for stubbed payment service.\n\n## Routes\n\n### POST '/'\nRequires one required field, `redirectionData`. `redirectionData` should be a stringified JSON object containing `amount` as a number.\n\n### GET '/payment'\nOnly accessible after a successful POST to '/'.\n\nNo fields on this page are mandatory but can be filled (for example by automated tests). Submitting the form POSTs to the referrer website with a successful payment response.\n\n## Use the payment stub\n\nThis app is deployed on https://passports-payment-stub.cloudapps.digital/ (expect a 405 error though as the index requires a POST).\n\n## Test app\n\nThere's a test app to use with the payment stub. Run `npm run start:test` to POST and return to a locally running version of the app or `npm run start:test-remote` to POST and return to the service running on the remote server (https://passports-payment-stub.cloudapps.digital/).\n\n## Deployments\n\nThe payment stub is deployed on GOV.UK's PaaS. [Read the PaaS docs](https://docs.cloud.service.gov.uk/#overview).\n\nGet yourself access so that you can deploy. Due to current IP restrictions, this app can only be deployed from the Home Office networks. [Read about current limitations](https://docs.cloud.service.gov.uk/#limitations).\n\n[Read about deploying Node.js apps using GOV.UK's PaaS](https://docs.cloud.service.gov.uk/#deploying-apps).\n\n## Deploy\n\nLogin\n```\ncf login -u YOUR EMAIL ADDRESS\n```\n\nSet target\n```\ncf target -o hmpo-trial -s sandbox\n```\n\nPush\n```\ncf push passports-payment-stub\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/mozaik-hello-world-dashboard","private":false,"url":"https://github.com/UKHomeOffice/mozaik-hello-world-dashboard","license":null,"readme":"#Mozaïk trial - dashboard with simple drone widget\n\nVery simple repo to test out how hard it is to write a basic widget for mozaik.\n\n## Installation\n```\ngit clone git@github.com:UKHomeOffice/mozaik-hello-world-dashboard.git\ncd mozaik-hello-world-dashboard\nnpm install\n```\n\n## Running the application\nPlease check you have connectivity to the Drone instance first!!\n\n### Normally\n```\nnode app.js\n```\n\n### When developing\n```bash\ngulp dev\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/eba-envbuild-tool","private":false,"url":"https://github.com/UKHomeOffice/eba-envbuild-tool","license":null,"readme":"# EBA - Environment Build Automation\n\nThis is a collection of tools to aid creating environments in the Cloud from Visio diagrams \n\n## Structure\nThis repo has 3 directories, eba-platform, eba-acloud and eba-visio. Environments are designed in Visio using the stencil in eba-visio/src/VisioStencil.vss, then exported to XML by the export tool in eba-visio/src/VisioExport.vsd. This XML is then passed to the eba-acloud tool.\nTools for managing multiple environments are in eba-platform\n\nPlease see the readme files in /eba-acloud, /eba-visio and /eba-platform for more details.\n\n\n## Licence\n\nPlease contact the Home Office for details.\n\n## Documentation\n\nThe user guide for the Visio stencil and export tool can be found in the docs folder at ./eba-visio/docs/index.html\n\nThe user guide for the EBA ACloud tool can be found in the docs folder at ./eba-acloud/docs/index.html\n\nThe documentation for eba-platform can be found in the docs folder at ./eba-platform/docs\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/eba-cloud-tools","private":false,"url":"https://github.com/UKHomeOffice/eba-cloud-tools","license":null,"readme":"# EBA - Environment Build Automation\n\nThis is a collection of tools to aid creating environments in the Cloud from Visio diagrams \n\n## Structure\nThis repo has 2 directories, eba-acloud and eba-visio. Environments are designed in Visio using the stencil in eba-visio/src/VisioStencil.vss, then exported to XML by the export tool in eba-visio/src/VisioExport.vsd. This XML is then passed to the eba-acloud tool.\n\nPlease see the readme files in /eba-acloud and /eba-visio for more details.\n\n\n## Licence\n\nSee the LICENCE (/LICENCE) file.\n\n## Documentation\n\nThe user guide for the Visio stencil and export tool can be found in the docs folder at ./eba-visio/docs/index.html\n\nThe user guide for the eba-acloud tool can be found in the docs folder at ./eba-acloud/docs/index.html\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/smashing-hello-world-dashboard","private":false,"url":"https://github.com/UKHomeOffice/smashing-hello-world-dashboard","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/home-office-digital-patterns","private":false,"url":"https://github.com/UKHomeOffice/home-office-digital-patterns","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Home Office patterns library and design guide\n\nThis is the design pattern library for Home Office DDaT, Data and Technology (DDaT). It extends the GOV.UK design patterns with patterns and components for additional use cases and users, including internal services.\n\n\n### Powered by GOV.UK Prototype kit · [![Greenkeeper badge](https://badges.greenkeeper.io/alphagov/govuk_prototype_kit.svg)](https://greenkeeper.io/)\n\nGo to the [GOV.UK Prototype Kit site](https://govuk-prototype-kit.herokuapp.com/docs) to download the latest version and read the documentation.\n","travis":false,"contributing":"# Contribution guidelines\n\nWe really like contributions and bug reports, in fact the project wouldn't have got to this stage without them.\nWe do have a few guidelines to bear in mind.\n\n## Community\n\nWe have two Slack channels for the Prototype kit. You'll need a government email address to join them.\n\n* [Slack channel for users of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit/)\n* [Slack channel for developers of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit-dev/)\n\n## Raising bugs\n\nWhen raising bugs please explain the issue in good detail and provide a guide to how to replicate it.\nWhen describing the bug it's useful to follow the format:\n\n- what you did\n- what you expected to happen\n- what happened\n\n## Suggesting features\n\nPlease raise feature requests as issues before contributing any code.\n\nThis ensures they are discussed properly before any time is spent on them.\n\n## GOV.UK Elements\n\nThe project contains code taken from the [GOV.UK Elements](https://github.com/alphagov/govuk_elements/) project.\nPlease check that any issues related to that code are raised with that project, not this one.\n\n## Contributing code\n\n### Indentation and whitespace\n\nYour JavaScript code should pass [linting](docs/linting.md).\n\nFor anything else, maintain 2-space, soft-tabs only indentation. No trailing whitespace.\n\n### Versioning\n\nFollow the guidelines on [semver.org](http://semver.org/) for assigning version\nnumbers.\n\nVersions should only be changed in a commit of their own, in a pull request of\ntheir own. This alerts team members to the new version and allows for\nlast-minute scrutiny before the new version is released. Also, by raising a\nseparate pull request, we avoid version number conflicts between feature\nbranches.\n\n### Commit hygiene\n\nPlease see our [git style guide](https://github.com/alphagov/styleguides/blob/master/git.md)\nwhich describes how we prefer git history and commit messages to read.\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-rabbitmq","private":false,"url":"https://github.com/UKHomeOffice/docker-rabbitmq","license":null,"readme":"# Docker RabbitMQ\n\nRabbitMQ with Management plugin enabled. Enables Clustering in Kubernetes.\n\n## Usage\n\n```\ncd kube\nkubectl create configmap rabbitmq  --from-file=rabbitmq.config --from-file=enabled_plugins\n```\n\nThen copy files from kube folder to your project, and customize if needed.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ho-example-dashboard","private":false,"url":"https://github.com/UKHomeOffice/ho-example-dashboard","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# HO Example Dashboard\nThis repo is here to provide a quick and easy way for teams to get running with a basic dashboard.\nOver time it will be expanded with more features.\n\nFor a richer dashboarding experience we recommend forking this repo and customizing the dashboard to your heart's content.\n\nThe dashboard is built on Smashing - check out https://github.com/SmashingDashboard/smashing for more information.\n\n## Configuration settings\nAll config is taken in with environment variables, you can set the following parameters:\n**For dashboarding Github repo statuses**\n- GITHUB_REPOS - comma separated list of Github repos\n- GITHUB_TOKEN (whilst not required for open source repos it increases the rate limit dramatically so highly recommend setting this)\n- DRONE_GH_SERVER - Drone server used for Github CI\n- GITHUB_SERVER (defaults to https://api.github.com)\n\n**For dashboarding Gitlab repo statuses**\n- GITLAB_REPOS - command separated list of Gitlab repos in format TeamName/RepoName\n- DRONE_GL_SERVER\n- DRONE_GL_TOKEN\n- GITLAB_SERVER\n- GITLAB_TOKEN\n\n## Managing tokens for Gitlab and Gitlab Drone\nYou will need to request an O365 dashboard account to be created by [contacting the Home Team](https://github.com/UKHomeOffice/central-devteam-board/wiki#office-365-accounts)\nand requesting a dashboard account. **It's important you specify that it is a dashboard account** \n\nThese will then need to be granted **read only** access to the relevant repos, and API tokens for Drone and Gitlab created for them.\n\n## Deploying with kubernetes\n\n**IMPORTANT NOTE - if dashboarding private projects please ensure the project names and branch names aren't sensitive.\nThere currently isn't any auth on the dashboards with the following deployments**\n\n### Long term deploy solution\nYou will need:\n\n1. A namespace to deploy to\n1. A step in your drone yaml to do the deploy (you can use the deploy step in this repos [.drone.yml](.drone.yml) as a \nguide, and the files in [kubernetes_deployment](kubernetes_deployment))\n1. Drone secrets for KUBE_TOKEN to deploy to your chosen namespace\n1. Secrets within that namespace for TLS encryption matching the name given in the ingress controller (external-tls)\n\n### Customizing the dashboard\nThe above gives you a basic dashboard with some core capabilities. If you would like to customize it further please fork this repo and tinker to your heart's content!\nLet us know in [the issue here](https://github.com/UKHomeOffice/ho-example-dashboard/issues/9) if you do this please :)\n\n## Running the dashboard on your machine\nYou can run the dashboard locally or with docker. Passing in environment variables lets you specify github credentials \nand the repos you wish to monitor. If you don't specify github credentials it will still work with public repos, \nbut the rate limit will be lower.\n\n**Note your local machine must have access to drone for this to work!**\n\n### Running the dashboard with docker\n```\ngit clone https://github.com/UKHomeOffice/ho-example-dashboard.git\ncd ho-example-dashboard\ndocker build -t my-dashboard . \ndocker run -ti -p 3030:3030 -e GITHUB_REPOS=UKHomeOffice/my-project-1,UKHomeOffice/my-project2 -e GITHUB_TOKEN=mypassword my-dashboard\n```\nYou will find the dashboard on http://localhost:3030\n\n### Running the dashboard locally\n```\ngit clone https://github.com/UKHomeOffice/ho-example-dashboard.git\ncd ho-example-dashboard\nbundle install\nGITHUB_REPOS=UKHomeOffice/my-project-1,UKHomeOffice/my-project2 GITHUB_TOKEN=mypassword smashing start\n```\nYou will find the dashboard on http://localhost:3030\n\n## Running tests\nTests are written with rspec, to run them do:\n```\ncd ho-example-dashboard\nrspec\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/service_monitoring","private":false,"url":"https://github.com/UKHomeOffice/service_monitoring","license":null,"readme":"# service_monitoring","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/homeoffice-countries","private":false,"url":"https://github.com/UKHomeOffice/homeoffice-countries","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# HomeOffice Countries\n\nExports a list of non-EU countries or EU and non-EU countries.\n\nCan be used with the [Typeahead Aria](https://github.com/UKHomeOffice/typeahed-aria), which is exported with [HOF Frontend Assets](https://github.com/UKHomeOfficeForms/hof-frontend-assets).\n\n## Example Usage\n\nThe following is an example of HomeOffice Countries in a HOF `field` with Typeahead Aria:\n```\n'country-select'-step: {\n  mixin: 'select',\n  className: ['typeahead', 'js-hidden'],\n  options: [''].concat(require('homeoffice-countries').allCountries),\n  legend: {\n    className: 'visuallyhidden'\n  },\n  validate: ['required']\n},\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/designinternships","private":false,"url":"https://github.com/UKHomeOffice/designinternships","license":null,"readme":"# Interaction design internships\nThis plan outlines what to expect on an interaction design internship with the Home Office.\n\n[The plan](https://ukhomeoffice.github.io/designinternships/) :boom:\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/signed-commit-check","private":false,"url":"https://github.com/UKHomeOffice/signed-commit-check","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Signed commit checker\n[![Build Status](https://travis-ci.org/UKHomeOffice/signed-commit-check.svg?branch=master)](https://travis-ci.org/UKHomeOffice/signed-commit-check)\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/signed-commit-check/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/signed-commit-check)\n\nThis is a github integration for checking if all your commits are signed\nThere is a limitation in that it can with with **only 250 commits** between master and the branch, anything beyond that and it 'may' (according to github) throw an error.\n\n## Installation\ngit checkout\nSet a environment variable of `GITHUB_PRIVATEKEY` to your installation private key\n\n```bash\nGITHUB_PRIVATEKEY=`cat private.key` npm start\n```\nor\n```bash\ndocker build -t signed-checker .\ndocker run -e GITHUB_PRIVATEKEY=`cat private.key` -p 4000:4000 signed-checker\n```\nYou then need to make an installation that'll point at https://yourexternaladdress/github\n\nI'll presume you can figure out a https endpoint above this service, which you really should.\n\n## Roadmap\n - [ ] verify request is from github see req.headers['x-hub-signature'] and https://developer.github.com/webhooks/securing/#validating-payloads-from-github\n - [ ] verify request is from a known github ip address\n - [x] authenticate to github with integration JWT https://developer.github.com/early-access/integrations/authentication/\n - [x] set status of head commit to 'pending' https://developer.github.com/v3/repos/statuses/#create-a-status\n - [x] get difference between head commit and master^HEAD https://developer.github.com/v3/repos/commits/#compare-two-commits\n - [x] check all commits in difference are signed commit.verification.verified === true\n - [x] set status of head commit to success/failure https://developer.github.com/v3/repos/statuses/#create-a-status\n - [ ] reproduce everything for gitlab\n - [ ] reproduce everything for bitbucket\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/secret-checker","private":false,"url":"https://github.com/UKHomeOffice/secret-checker","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# secret-checker\nChecks repositories for secrets that may have been accidentially committed\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/mercury","private":false,"url":"https://github.com/UKHomeOffice/mercury","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Mercury for Scala\n=================\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- AWS SQS\n\n- AWS S3\n\n- Play Web Services\n\nIntroduction\n------------\nSubscribes to messages (specifically emails) published to AWS SQS.\nThese messages are consumed and translated (1st phase will be to PDF) and any associated attachments will be streamed in from AWS S3.\nFinally, messages and associated attachments are streamed to another service.\n\nApplication\n-----------\nThe application is configured as per a typical Scala application, where the default configuration file is \"application.conf\" (or reference.conf).\nThis default file can be overridden with other \"conf\" files and then given to the application upon boot with the following example Java option:\n```\n-Dconfig.file=test-classes/application.test.conf\n```\n\nIndividual configuration properties can be overridden again by Java options e.g. to override which Mongodb to connect:\n```\n-Dmongo.db=some-other-mongo\n```\n\nwhere this overrides the default in application.conf.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```\nbrew install typesafe-activator\n```\n\nTo compile:\n```\nsbt compile\n```\n\nor\n```\nactivator compile\n```\n\nTo run the specs:\n```\nsbt test\n```\n\nTo actually run the application, you can simply:\n```\nsbt run\n```\n\nor first \"assemble\" it:\n```\nsbt assembly\n```\n\nThis packages up an executable JAR - Note that \"assembly\" will first compile and test.\n\nThen just run as any executable JAR, with any extra Java options for overriding configurations.\n\nFor example, to use a config file (other than the default application.conf) which is located on the file system\n```\njava -Dconfig.file=test-classes/my-application.conf -jar target/scala-2.11/mercury.jar\n```\n\nNote that the log configuration file could also be included e.g.\n```bash\n-Dlogback.configurationFile=path/to/my-logback.xml\n```\n\nSo a more indepth startup with sbt itself could be:\n```\nsbt test:run -Dconfig.file=target/scala-2.11/test-classes/application.test.conf -Dlogback.configurationFile=target/scala-2.11/test-classes/logback.test.xml\n```\n\nNote the use of test:run. Usually we would only use \"run\", but as this is a library, there is no default \"main\" class, but we do have an example test \"main\" class.\n\nAnd another example:\n\nrunning from directory of the executable JAR using a config that is within said JAR:\n```\njava -Dconfig.resource=application.uat.conf -jar target/scala-2.11/mercury.jar\n```\n\nAs a sidenote, [Ammonite](http://www.lihaoyi.com/Ammonite) is referenced in this module - to use it's powerful REPL:\n```\nsbt test:console\n```\n\nDocker - SBT\n------------\nFirstly, using the Docker SBT plugin.\n\nBuild an image (includes running tests and generating a fat JAR):\n```\nsbt docker\n```\n\nA built image can be pushed:\n```\nsbt dockerPush\n```\n\nTo build and push an image:\n```\nsbt dockerBuildAndPush\n```\n\nTo run and check the running service via its \"health\" endpoint:\n```\nsbt docker run\nOR\ndocker run -p 9100:9100 uk.gov.homeoffice/mercury\n\ncurl http://localhost:9100/health\n```\n\nNoting that using \"sbt docker run\" will in fact do everything i.e. run tests, build image and run in container.\n\nDocker\n------\nAnd now for using Docker directly.\n\nBuild a docker image by utilising Dockerfile:\n```\ndocker build -t mercury .\n```\n\nTo run:\n```\ndocker run --name mercury -it mercury\n```\n\nHowever, as Mercury depends on other services, instead use docker-compose, as described next.\n\nThere is a docker-compose.yml describing all services to start up for this module to run:\n```\ndocker-compose up\n```\n\nOnce all services are up (locally) try posting a message to SQS:\n```\ncurl -k  -L -X POST -H 'Content-Type: application/x-www-form-urlencoded' -d 'Action=SendMessage&MessageBody=Ye%20Baby&AWSAccessKeyId=x&AWSSecretAccessKey=x' 'http://localhost:9324/queue/mercury'\n```\n\nAt the time of writing the docker images used for each service are:\n- kcomlabs/elasticmq to run an instance of Elasticmq, an implementation of AWS SQS.\n- lphoward/fake-s3 to run an instance of a trimmed down implementation of AWS S3.\n- hocs-fake to run an inhouse custom version of the HOCS system, with the minimal functionality faking the real system. \n\nSBT - Revolver (keep things going while developing/testing)\n-----------------------------------------------------------\n[sbt-revolver](https://github.com/spray/sbt-revolver) is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press <ENTER> SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nGatling - Performance (Integration) Testing\n-------------------------------------------\nPerformance tests are under src/it, and test reports are written to the \"target\" directory.\n\nTo execute Gatling performance integration tests from withing SBT:\n```\ngatling-it:test\n```\n\nArchitecture/Design\n-------------------\n![Architecture](/doc/architecture.png)","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/file-vault","private":false,"url":"https://github.com/UKHomeOffice/file-vault","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# File-vault a RESTful service to store and retrieve files\n\nFile-vault is a simple REST service that allows POSTing a file to an S3 bucket. Upon a successful virus check the service will return with a URL that can be used to retrieve the file.\n\n## Configuration\n\nThe following environment variables are used to configure file-vault.\n```\n  FILE_VAULT_URL            | URL of file-vault, this is used when returning a URL upon successful upload to S3\n  CLAMAV_REST_URL           | Location of ClamAV rest service\n  AWS_ACCESS_KEY_ID         | AWS Key ID\n  AWS_SECRET_ACCESS_KEY     | AWS Secret Access Key\n  AWS_REGION                | AWS Region (defaults to eu-west-1)\n  AWS_SIGNATURE_VERSION     | AWS Signature Version (defaults to v4)\n  AWS_BUCKET                | AWS Bucket Name\n  AWS_EXPIRY_TIME           | Length of time (in seconds) the URL will be valid for (defaults to 1 hour)\n  STORAGE_FILE_DESTINATION  | Temp directory for storing uploaded file (this is deleted on upload or fail and defaults to 'uploads')\n  REQUEST_TIMEOUT           | Length of time (in seconds) for timeouts on http requests made by file-vault (when talking to clamAV and s3, defaults to 15s)\n  FILE_EXTENSION_WHITELIST  | A comma separated list of file types that you want to white-list (defaults to everything). If the file is not in this list file-vault will respond with an error.\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/developer_user_environments","private":false,"url":"https://github.com/UKHomeOffice/developer_user_environments","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# developer_user_environments\nBootstrap Developer User Environment and Tooling\n","travis":false,"contributing":"ontributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/mercury-aws-lib","private":false,"url":"https://github.com/UKHomeOffice/mercury-aws-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"AWS Library for Scala\n=====================\nScala library to interact with AWS e.g. easier coding and testing against SQS and S3.\nElasticMQ can be used for embedded testing of the SQS messaging system and S3 Mock for AWS S3 testing.\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- AWS SQS / ElasticMQ\n\n- AWS S3\n\nApplication\n-----------\nThe application is configured as per a typical Scala application, where the default configuration file is \"application.conf\" (or reference.conf).\nThis default file can be overridden with other \"conf\" files and then given to the application upon boot with the following example Java option:\n```\n-Dconfig.file=test-classes/application.test.conf\n```\n\nIndividual configuration properties can be overridden again by Java options e.g. to override which Mongodb to connect:\n```bash\n-Dmongo.db=some-other-mongo\n```\n\nwhere this overrides the default in application.conf.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```\nbrew install typesafe-activator\n```\n\nTo compile:\n```\nsbt compile\n```\n\nor\n```\nactivator compile\n```\n\nTo run the specs:\n```\nsbt test\n```\n\nTo actually run the application, you can simply:\n```\nsbt run\n```\n\nor first \"assemble\" it:\n```\nsbt assembly\n```\n\nThis packages up an executable JAR - Note that \"assembly\" will first compile and test.\n\nThen just run as any executable JAR, with any extra Java options for overriding configurations.\n\nFor example, to use a config file (other than the default application.conf) which is located on the file system (in this case in the boot directory)\n```\njava -Dconfig.file=test-classes/my-application.conf -jar <jar name>.jar\n```\n\nNote that the log configuration file could also be included e.g.\n```\n-Dlogback.configurationFile=path/to/my-logback.xml\n```\n\nSo a more indepth startup with sbt itself could be:\n```\nsbt test:run -Dconfig.file=target/scala-2.11/test-classes/application.test.conf -Dlogback.configurationFile=target/scala-2.11/test-classes/logback.test.xml\n```\n\nNote the use of test:run. Usually we would only use \"run\", but as this is a library, there is no default \"main\" class, but we do have an example test \"main\" class.\n\nAnd another example:\n\nrunning from directory of the executable JAR using a config that is within said JAR:\n```\njava -Dconfig.resource=application.uat.conf -jar <jar name>.jar\n```\n\nDependencies\n------------\nAt the time of writing, this module uses [JitPack](https://jitpack.io/).\nIf you would like your module to depend on this module, add the following to your build sbt resolvers:\n```scala\nresolvers ++= Seq(\n  ...\n  \"jitpack\" at \"https://jitpack.io\",\n  ...\n)\n```\n\nand within your dependencies refer to this module via its Github repository including user name (in this case UKHomeOffice) i.e.\n```scala\nlibraryDependencies ++= Seq(\n  ...\n  \"com.github.UKHomeOffice\" %% \"aws-scala-lib\" % \"1.9.6\",\n  \"com.github.UKHomeOffice\" %% \"aws-scala-lib\" % \"1.9.6\" % Test classifier \"tests\",\n  ...\n)\n```\n\nSBT - Revolver (keep things going while developing/testing)\n-----------------------------------------------------------\n[sbt-revolver](https://github.com/spray/sbt-revolver) is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nGatling - Performance (Integration) Testing\n-------------------------------------------\nPerformance tests are under src/it, and test reports are written to the \"target\" directory.\n\nTo execute Gatling performance integration tests from withing SBT:\n```\ngatling-it:test\n```\n\nExample Usage\n-------------\nExample of booting an application to publish/subscribe to an Amazon SQS instance.\n\n1) Start up an instance of ElasticMQ (to run an instance of Amazon SQS locally) - From the root of this project:\n```bash\njava -jar ./libexec/elasticmq-server-<version>.jar\n```\nwhich starts up a working server that binds to localhost:9324\n\nor with a custom configuration that could create queues:\n```\njava -Dconfig.file=src/test/resources/application.test.conf -jar ./libexec/elasticmq-server-<version>.jar\n```\n   \n2) Boot this application:\n```\nsbt test:run\n```\n   \nwhere the example application can be found under the \"test\" directory and is also show here:\n```scala\nobject ExampleBoot extends App {\n  val system = ActorSystem(\"aws-sqs-actor-system\")\n\n  implicit val sqsClient = new SQSClient(new URL(\"http://localhost:9324/queue\"), new BasicAWSCredentials(\"x\", \"x\"))\n\n  val queue = new Queue(\"test-queue\")\n\n  system actorOf Props {\n    new SQSActor(new SQS(queue)) with ExampleSubscription\n  }\n\n  new SQS(queue) publish compact(render(\"input\" -> \"blah\"))\n}\n\ntrait ExampleSubscription extends JsonSubscription with Exit {\n  this: SQSActor =>\n\n  def receive: Receive = {\n    case m: Message => exitAfter {\n      val result = s\"Well Done! Processed given message $m\"\n      println(result)\n      result\n    }\n  }\n}\n```\n\nReleasing\n---------\nVersion control of this library can be achieved through the SBT Release plugin e.g.\n```\nsbt release\n```\n\nwhere the following default value will be chosen:\n- Continue with snapshots dependencies: no\n- Release Version: current version without the qualifier (eg. 1.2.0-SNAPSHOT -> 1.2.0)\n- Next Version: increase the minor version segment of the current version and set the qualifier to '-SNAPSHOT' (eg. 1.2.1-SNAPSHOT -> 1.3.0-SNAPSHOT)\n- VCS tag: abort if the tag already exists\n- VCS push:\n    - Abort if no remote tracking branch is set up.\n    - Abort if remote tracking branch cannot be checked (eg. via git fetch).\n    - Abort if the remote tracking branch has unmerged commits.\n    - Set release version and next version as command arguments\n\nYou can set the release version using the argument release-version and next version with next-version.\n\nExample (within sbt):\n```\nrelease release-version 1.0.99 next-version 1.2.0-SNAPSHOT\n```\n\nor\n```\nrelease with-defaults\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/centre-of-excellence","private":false,"url":"https://github.com/UKHomeOffice/centre-of-excellence","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Centre of Excellence\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-graphics","private":false,"url":"https://github.com/UKHomeOffice/docker-graphics","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# docker-graphics\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/docker-graphics/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/docker-graphics)\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/docker-graphics/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/docker-graphics)\n\n## What is this software and what does it do\nThe software in this image is used to generate png files from graphviz dot files and from plantuml puml files.\n\nThe graphviz files and plantuml files can be used to create:\n- logical infrastructure diagrams\n- application sequence diagrams\n- application environment progression diagrams\n- any other type of diagrams ...\n\nIt will make it easier to create/update/maintain diagrams in git repos.\n\n## How to use the software\nTeams are meant to have a docs git repo with graphics source files ( dot and/or plantuml files ).\n\nThis container comes with all necessary software so that people can generate `png` files out of the source files on laptops/workstations/ci without having to install any software.\n\n## Release process\nThe release process is done using drone, have a look at `.drone.yml`\n\n## Local iteration cycle\nThis paragraph should contain some links to actual repositories using this container for accurate docker commands.\n\nThis container comes with a local, non-priviledged user, called `graphics`, which has its `$HOME` set to `/home/graphics`. This user can't write to any other location, make sure your source files are bind mounted in `/home/graphics`.\n\nThe use of a `Makefile` make it so that local development and iteration cycles on this container look and behave exactly like they would inside drone. The local devel and iteration cycles will mirror the drone cycle up to the point when the container has to be pushed to a container registry.\n\nSimply run `make` to see the list of supported make targets.\n\nThe following docker commands are presented as an example and are not 100% accurate since your git repo layout might be slightly different.\n\nIf a teams' docs git repo has this layout:\n```\n.\n├── docs\n├── graphicsrc\n│   ├── dot\n│   │   └── img\n│   └── plantuml\n├── graphictarget\n├── README.md\n└── util\n```\n\nTherefore to generate `png` files out of `dot` source files using the graphics container one needs to run:\n```\ndocker run \\\n  --rm \\\n  -ti \\\n  -v $PWD/graphicsrc/dot:/home/graphics/dot \\\n  -v $PWD/graphictarget:/home/graphics/graphictarget \\\n  docker-graphics \\\n  <dot_command_from_dotfile_to_png>\n```\n\nTherefore to generate `png` files out of `puml` plantuml source files using the graphics container one needs to run:\n```\ndocker run \\\n  --rm \\\n  -ti \\\n  -v $PWD/graphicsrc/plantuml:/home/graphics/plantuml \\\n  -v $PWD/graphictarget:/home/graphics/graphictarget \\\n  docker-graphics \\\n  <plantuml_command_from_puml_to_png>\n```\n\n# Raising issues\nUse the github issue functionality on this repository to raise issues against this project.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/mercury-test-lib","private":false,"url":"https://github.com/UKHomeOffice/mercury-test-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Test - Scala testing functionality\n==================================\nScala testing functionality for general use (originally written for Registered Traveller UK).\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Specs2\n\n- Scalatest\n\nIntroduction\n------------\nKeep your module's test dependencies consistent and up to date, and access to useful test functionality. \n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```\nbrew install typesafe-activator\n```\n\nTo compile:\n```\nsbt compile\n```\n\nor\n```\nactivator compile\n```\n\nTo run the specs:\n```\nsbt test\n```\n\nTo run integration specs:\n```\nsbt it:test\n```\n\nDependencies\n------------\nAt the time of writing, this module uses [JitPack](https://jitpack.io/).\nIf you would like your module to depend on this module, add the following to your build sbt resolvers:\n```scala\nresolvers ++= Seq(\n  ...\n  \"jitpack\" at \"https://jitpack.io\",\n  ...\n)\n```\n\nand within your dependencies refer to this module via its Github repository including user name (in this case UKHomeOffice) i.e.\n```scala\nlibraryDependencies ++= Seq(\n  ...\n  \"com.github.UKHomeOffice\" %% \"test-scala-lib\" % \"1.9.6\",\n  \"com.github.UKHomeOffice\" %% \"test-scala-lib\" % \"1.9.6\" % Test classifier \"tests\",\n  ...\n)\n```\n\nSBT - Revolver (keep things going while developing/testing)\n-----------------------------------------------------------\n[sbt-revolver](https://github.com/spray/sbt-revolver) is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nReleasing\n---------\nVersion control of this library can be achieved through the SBT Release plugin e.g.\n```\nsbt release\n```\n\nwhere the following default value will be chosen:\n- Continue with snapshots dependencies: no\n- Release Version: current version without the qualifier (eg. 1.2.0-SNAPSHOT -> 1.2.0)\n- Next Version: increase the minor version segment of the current version and set the qualifier to '-SNAPSHOT' (eg. 1.2.1-SNAPSHOT -> 1.3.0-SNAPSHOT)\n- VCS tag: abort if the tag already exists\n- VCS push:\n    - Abort if no remote tracking branch is set up.\n    - Abort if remote tracking branch cannot be checked (eg. via git fetch).\n    - Abort if the remote tracking branch has unmerged commits.\n    - Set release version and next version as command arguments\n\nYou can set the release version using the argument release-version and next version with next-version.\n\nExample (within sbt):\n```\nrelease release-version 1.0.99 next-version 1.2.0-SNAPSHOT\n```\n\nor\n```\nrelease with-defaults\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/mercury-io-lib","private":false,"url":"https://github.com/UKHomeOffice/mercury-io-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Scala library for IO functionality\n==================================\nGeneral Scala IO functionality such as reading resources, JSON schema validation and web services.\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Play Web Services\n\n- Json4s and Play JSON\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```\nbrew install typesafe-activator\n```\n\nTo compile:\n```\nsbt compile\n```\n\nor\n```\nactivator compile\n```\n\nTo run the specs:\n```\nsbt test\n```\n\nTo run integration specs:\n```\nsbt it:test\n```\n\nDependencies\n------------\nAt the time of writing, this module uses [JitPack](https://jitpack.io/).\nIf you would like your module to depend on this module, add the following to your build sbt resolvers:\n```scala\nresolvers ++= Seq(\n  ...\n  \"jitpack\" at \"https://jitpack.io\",\n  ...\n)\n```\n\nand within your dependencies refer to this module via its Github repository including user name (in this case UKHomeOffice) i.e.\n```scala\nlibraryDependencies ++= Seq(\n  ...\n  \"com.github.UKHomeOffice\" %% \"io-scala-lib\" % \"1.9.6\",\n  \"com.github.UKHomeOffice\" %% \"io-scala-lib\" % \"1.9.6\" % Test classifier \"tests\",\n  ...\n)\n```\n\nSBT - Revolver (keep things going while developing/testing)\n-----------------------------------------------------------\n[sbt-revolver](https://github.com/spray/sbt-revolver) is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nExample Usage - JSON\n--------------------\n- Validate JSON against a JSON schema:\n```scala\n  val json: JValue = getYourJson()\n  val schema: JValue = getYourSchema()\n  \n  val Good(result) = JsonSchema(schema).validate(json) // Assuming successful validation\n```\n\n- Transform JSON from one structure to another:\n```scala\n  val yourJsonTransformer = new JsonTransformer {\n    def transform(json: JValue): JValue Or JsonError = {\n      val JsonTransformation(oldJson, newJson) = (\n        map(\"name\" -> \"superName\") ~\n        mapArray(\"fee\" -> \"payment.feeInPence\", field => JInt(BigInt(field.extract[String])))\n      )(json)\n      \n      Good(newJson)\n    }\n  }\n  \n  val flatJson = parse(\"\"\"\n  {\n    \"name\": \"Batman\",\n    \"fee_1\": \"12\",\n    \"fee_2\": \"15\",\n    \"fee_3\": 18\n  }\"\"\")\n\n  val json = parse(\"\"\"\n  {\n    \"superName\": \"Batman\",\n    \"payment\": [\n      { \"feeInPence\": 12 },\n      { \"feeInPence\": 15 },\n      { \"feeInPence\": 18 }\n    ]\n  }\"\"\")\n\n  // Assuming successful transformation\n  transform(flatJson) mustEqual Good(json) \n```\n\nNote - if required (though not advised) the EmptyJsonSchema can be used to all JSON to be validated successfully.\n\nJSON Schema Validation\n----------------------\nThere are several online JSON schema validation tools such as [JSON Schema Validator](http://www.jsonschemavalidator.net/)\n\nAlternatively, a JSON schema can be validated from the Scala REPL by doing the following:\n\n```scala\nsbt\n\nconsole\n\nimport org.json4s.JValue\nimport uk.gov.homeoffice.io.Classpath\nimport uk.gov.homeoffice.json._\n\nClasspath(\"/schema-test.json\").as[JValue] map { JsonSchema(_) }\n```\n\nIf you've given a valid file path and the schema is valid, the result will be something like:\n\n```\nres0: scala.util.Try[uk.gov.homeoffice.json.JsonSchema] = Success(uk.gov.homeoffice.json.JsonSchema@2728f35d)\n```\n\nExample Usage - Web Services\n----------------------------\nYou have some service that can publish a file to some web service:\n```scala\nclass ExamplePublisher(ws: WebService) {\n  val publish: File => Future[WSResponse] = { file =>\n    ws.endpoint(\"/my-file-endpoint\").post(file)\n  }\n}\n```\n\nLet's test this by faking the endpoint i.e. an integration test but without requiring a separately running service with the required endpoint:\n```scala\nclass ExamplePublisherSpec(implicit env: ExecutionEnv) extends Specification with WebServiceSpecification {\n  \"File\" should {\n    \"be published to endpoint\" in {\n      withRoutes {\n        case POST(p\"/my-file-endpoint\") => Action(parse.multipartFormData) { request =>\n          request.body.files.foreach { filePart =>\n            println(\"Thank you for file \" + filePart.filename)\n            filePart.ref.moveTo(new File(s\"./read-${filePart.filename}\"))\n          }\n\n          Ok(\"blah\")\n        }\n      } { webService =>\n        val examplePublisher = new ExamplePublisher(webService)\n\n        examplePublisher.publish(new File(\"my-file\")) must beLike[WSResponse] {\n          case r: WSResponse =>\n            r.status mustEqual OK\n            r.body mustEqual \"blah\"\n        }.await\n      }\n    }\n  }\n}\n```\n\nReleasing\n---------\nVersion control of this library can be achieved through the SBT Release plugin e.g.\n```\nsbt release\n```\n\nwhere the following default value will be chosen:\n- Continue with snapshots dependencies: no\n- Release Version: current version without the qualifier (eg. 1.2.0-SNAPSHOT -> 1.2.0)\n- Next Version: increase the minor version segment of the current version and set the qualifier to '-SNAPSHOT' (eg. 1.2.1-SNAPSHOT -> 1.3.0-SNAPSHOT)\n- VCS tag: abort if the tag already exists\n- VCS push:\n    - Abort if no remote tracking branch is set up.\n    - Abort if remote tracking branch cannot be checked (eg. via git fetch).\n    - Abort if the remote tracking branch has unmerged commits.\n    - Set release version and next version as command arguments\n\nYou can set the release version using the argument release-version and next version with next-version.\n\nExample (within sbt):\n```\nrelease release-version 1.0.99 next-version 1.2.0-SNAPSHOT\n```\n\nor\n```\nrelease with-defaults\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drone-config-transformer","private":false,"url":"https://github.com/UKHomeOffice/drone-config-transformer","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Drone Config Transformer\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/mercury-akka-lib","private":false,"url":"https://github.com/UKHomeOffice/mercury-akka-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Akka - Reusable functionality\n=============================\nAkka reusable functionality such as clustering, scheduling and booting Akka Http.\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- Specs2\n\nIntroduction\n------------\nUseful functionality related to Akka e.g.\n- Clustering via ClusterActorSystem\n- Schedulers\n- Booting an Akka Http microservice\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```\nbrew install typesafe-activator\n```\n\nTo compile:\n```\nsbt compile\n```\nor\n```\nactivator compile\n```\n\nTo run the specs:\n```\nsbt test\n```\n\nTo run integration specs:\n```\nsbt it:test\n```\n\nTo run integration specs:\n```\nsbt it:test \n```\n\nDependencies\n------------\nAt the time of writing, this module uses [JitPack](https://jitpack.io/).\nIf you would like your module to depend on this module, add the following to your build sbt resolvers:\n```scala\nresolvers ++= Seq(\n  ...\n  \"jitpack\" at \"https://jitpack.io\",\n  ...\n)\n```\n\nand within your dependencies refer to this module via its Github repository including user name (in this case UKHomeOffice) i.e.\n```scala\nlibraryDependencies ++= Seq(\n  ...\n  \"com.github.UKHomeOffice\" %% \"akka-scala-lib\" % \"1.9.6\",\n  \"com.github.UKHomeOffice\" %% \"akka-scala-lib\" % \"1.9.6\" % Test classifier \"tests\",\n  ...\n)\n```\n\nSBT - Revolver (keep things going while developing/testing)\n-----------------------------------------------------------\n[sbt-revolver](https://github.com/spray/sbt-revolver) is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nExample Usage\n-------------\n- Actor scheduling:\n```scala\nclass SchedulerSpec extends Specification with ActorSystemSpecification {\n  \"Actor\" should {\n    \"be scheduled to act as a poller\" in new ActorSystemContext {\n      val exampleSchedulerActor = system actorOf Props(new ExampleSchedulerActor)\n      exampleSchedulerActor ! IsScheduled\n      expectMsgType[Scheduled]\n    }\n\n    \"not be scheduled to act as a poller\" in new ActorSystemContext {\n      val exampleSchedulerActor = system actorOf Props(new ExampleSchedulerActor with NoSchedule)\n      exampleSchedulerActor ! IsScheduled\n      expectMsg(NotScheduled)\n    }\n  }\n}\n\nclass ExampleSchedulerActor extends Actor with Scheduler {\n  lazy val schedule: Cancellable = context.system.scheduler.schedule(initialDelay = 1 second, interval = 5 seconds, receiver = self, message = Schedule)\n\n  def receive = LoggingReceive {\n    case Schedule => println(\"Hello World!\")\n  }\n}\n```\n\n- Create Akka Http routings - HTTP contract/gateway to your microservice:\n```scala\nobject ExampleRouting1 extends ExampleRouting1\n\ntrait ExampleRouting1 extends Routing with Json4sMarshaller {\n  val route =\n    pathPrefix(\"example1\") {\n      pathEndOrSingleSlash {\n        get {\n          complete { OK -> JObject(\"status\" -> JString(\"Congratulations 1\")) }\n        }\n      }\n    }\n}\n\nobject ExampleRouting2 extends ExampleRouting2\n\ntrait ExampleRouting2 extends Routing with Json4sMarshaller {\n  val route =\n    pathPrefix(\"example2\") {\n      pathEndOrSingleSlash {\n        get {\n          complete { JObject(\"status\" -> JString(\"Congratulations 2\")) }\n        }\n      }\n    }\n}\n```\n\n- Create your application (App) utilitising your routings (as well as anything else e.g. configuration and booting/wiring Akka actors):\n```scala\nobject ExampleBoot extends App with AkkaHttpBoot with Json4sMarshaller with Unmarshallers with Directives {\n  val rejectionHandler = RejectionHandler.newBuilder()\n    .handleNotFound { complete(NotFound -> JObject(\"error\" -> JString(\"Whoops\"))) }\n    .result()\n\n  val exceptionHandler = ExceptionHandler {\n    case _: TestException =>\n      extractUri { uri =>\n        complete(UnprocessableEntity -> \"I'm sorry but this does not work\")\n      }\n  }\n\n  implicit val akkaHttpConfig = AkkaHttpConfig(rejectionHandler = Some(rejectionHandler), exceptionHandler = Some(exceptionHandler))\n\n  boot(ExampleRouting1, ExampleRouting2, ExampleRoutingExceptionHandler)\n}\n```\n\nTo run ExampleBoot:\n```\nsbt test:run\n```\n\nAkka Clustering\n---------------\nCluster Singleton:\n\nActors can be managed in a cluster to run as a singleton - an actor will be distributed on multiple nodes, but only one will be running.\n\nYour application.conf for a Cluster Singleton, can use the following template:\n```javascript\nakka {\n  actor {\n    provider = \"akka.cluster.ClusterActorRefProvider\"\n  }\n\n  remote {\n    enabled-transports = [\"akka.remote.netty.tcp\"]\n\n    netty.tcp {\n      hostname = \"127.0.0.1\"\n      port = 0 # To be overridden in code for each running node in a cluster\n    }\n  }\n\n  cluster {\n    seed-nodes = [\n      \"akka.tcp://your-actor-system@127.0.0.1:2551\",\n      \"akka.tcp://your-actor-system@127.0.0.1:2552\",\n      \"akka.tcp://your-actor-system@127.0.0.1:2553\"\n    ]\n\n    roles = [\"your-service\"]\n    min-nr-of-members = 2\n    auto-down-unreachable-after = 30 seconds\n  }\n}\n```\n\nEach node that starts up on the same box would need a different port e.g. 2551, 2552 etc.\nIn production, the nodes would be on different boxes and so can all have the same ports and said port could then also be declared for akka.actor.remote.netty.tcp.port.\n\nThere is an example app showing a makeshift cluster of 3 nodes:\n```scala\nobject ClusterActorSystemExampleApp extends App with Network {\n  withConfig {\n    // Imagine we are starting up 3 nodes on 3 separate boxes (here we simply utilise 3 separately configured ports).\n    val actorSystem1 = ClusterActorSystem(1)\n    val actorSystem2 = ClusterActorSystem(2)\n    val actorSystem3 = ClusterActorSystem(3)\n    ...\n  }\n}    \n```\n\nReleasing\n---------\nVersion control of this library can be achieved through the SBT Release plugin e.g.\n```\nsbt release\n```\n\nwhere the following default value will be chosen:\n- Continue with snapshots dependencies: no\n- Release Version: current version without the qualifier (eg. 1.2.0-SNAPSHOT -> 1.2.0)\n- Next Version: increase the minor version segment of the current version and set the qualifier to '-SNAPSHOT' (eg. 1.2.1-SNAPSHOT -> 1.3.0-SNAPSHOT)\n- VCS tag: abort if the tag already exists\n- VCS push:\n    - Abort if no remote tracking branch is set up.\n    - Abort if remote tracking branch cannot be checked (eg. via git fetch).\n    - Abort if the remote tracking branch has unmerged commits.\n    - Set release version and next version as command arguments\n\nYou can set the release version using the argument release-version and next version with next-version.\n\nExample (within sbt):\n```\nrelease release-version 1.0.99 next-version 1.2.0-SNAPSHOT\n```\n\nor\n```\nrelease with-defaults\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/platform-hub","private":false,"url":"https://github.com/UKHomeOffice/platform-hub","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Platform Hub – the software powering the Application Container Platform Hub at the UK Home Office\n\n## General architecture\n\n### `platform-hub-web`\n\n[README](platform-hub-web/README.md)\n\n[Source code](platform-hub-web) for the web app for users of the PaaS.\n\n- Uses AngularJS 1.5 as the main framework\n- Runs fully client side (served as static assets)\n- Talks to the backend API via `/api` calls in the browser\n- A local development and build stack is used for easy development, testing and building of the static assets\n\n### `platform-hub-auth-proxy`\n\n[README](platform-hub-auth-proxy/README.md)\n\n[keycloak-proxy](https://github.com/gambol99/keycloak-proxy) sits in front of the API server and handles authentication using [Keycloak](http://www.keycloak.org/).\n\n**All** `/api` requests go through this and keycloak-proxy takes care of proxying upstream to the API server when authenticated (or whitelisted).\n\n[The folder in this repo](platform-hub-auth-proxy) only provides scripts to manage a **local** keycloak-proxy (in a container), not for production environments.\n\n### `platform-hub-api`\n\n[README](platform-hub-api/README.md)\n\n[Source code](platform-hub-api) for the backend API server – handling most of the business logic and persistence for the hub, and communicating with other backend and external services.\n\n- Provides a mainly JSON based API\n- Uses [Ruby on Rails](http://rubyonrails.org/) 5.0 (in API-only mode)\n- Authentication credentials are expected to be provided by the keycloak-proxy (where needed)\n- Handles all the authorisation business logic\n\n### [PostgreSQL](https://www.postgresql.org/)\n\n… is used as the persistence store.\n\n## Drone build\n\nSee [the pipeline](.drone.yml) for all the steps involved in the various build pipelines.\n\n## Versioning and release process\n\nAll services/components provided by this repo are currently versioned together using the same version identifier on every release, determined by Git tags and corresponding Docker image tags.\n\nCreating and pushing a Git tag in this repo will trigger a drone pipeline that builds Docker images tagged with the same tag value, and pushes them to the relevant Quay.io repositories.\n\nThe general process to trigger a new release of Docker images:\n\n- Switch to / pull the latest `master` branch (ensuring this has previously built successfully)\n- Find the latest version using `git tag`\n- Tag a new incremental version (either major, minor or patch)\n  - e.g. `git tag -a v0.5.1 -m \"v0.5.1\"`\n- Push tags using `git push --tags`\n- Monitor the triggered drone build to ensure it builds and pushes images sucessfully\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/repo-security-scanner","private":false,"url":"https://github.com/UKHomeOffice/repo-security-scanner","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# repo-security-scanner\n\n- CLI tool that finds secrets accidentally committed to a git repo, eg passwords, private keys\n- Run it against your entire repo's history by piping the output from `git log -p`\n\n-----------------------------------------------------------\n\n## Installation\n1. [Download](../../releases) the latest stable release of the CLI tool for your architecture\n2. Extract the tar and move the ```scanrepo``` binary to somewhere in your `$PATH`, eg `/usr/bin`\n\n-----------------------------------------------------------\n\n## Usage\n\nCheck the entire history of the current branch for secrets.\n\n```\n$ git log -p | scanrepo\n\n------------------\nViolation 1\nCommit: 4cc087a1b4731d1017844cc86323df43068b0409\nFile: web/src/db/seed.sql\nReason: \"SQL dump file\"\n\n------------------\nViolation 2\nCommit: 142e6019248c0d53a5240242ed1a75c0cc110a0b\nFile: config/passwords.ini\nReason: \"Contains word: password\"\n\n...\n```\n\n-----------------------------------------------------------\n### Add false positives to `.secignore`\n\n```\n$ cat .secignore\nfile/that/is/not/really/a/secret/but/looks/like/one/to/diffence\nthese/pems/are/ok/*.pem\n```\n\n[See example in this repo](./.secignore).\n\n\n-----------------------------------------------------------\n## Notifications\nWork in progress.\n\n### Local Testing\n#### Set environment variables needed\nCreate `env` file and update environment variables.\n```\n$ cp .env{.example,}\n# update .env values\n$ vi .env\n$ source .env\n```\n\n#### Launch containers\n```\n$ docker-compose up -d\n```\n\n#### Run test offenses\n```\n$ make test-run-offenses\n```\n\n\n### Debugging Elastalert\n```\n$ docker exec -it <elastalert_container_hash> sh\n# run elastalert test rule utility within elastalert container\n$ elastalert-test-rule --config $ELASTALERT_CONFIG --count-only \"$RULES_DIRECTORY/new_violation.yaml\"\n$ elastalert-test-rule --alert --config $ELASTALERT_CONFIG \"$RULES_DIRECTORY/new_violation.yaml\"\n# run elastalert in debug mode\n$ elastalert --config \"$ELASTALERT_CONFIG\" --rule \"$RULES_DIRECTORY/new_violation.yaml\" --debug\n```\n\n#### Logs\n```\n$ tail -f /log/elastalert_new_violation_rule.log\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-example-components","private":false,"url":"https://github.com/UKHomeOffice/passports-example-components","license":null,"readme":"# passports-example-components\nExample components for use with passports forms.\n\nSee /components which contains 2 examples: dates and birds. 'Components' are reusable form elements, such as fields or form controllers. They can be created using the base component - https://github.com/UKHomeOffice/passports-form-component.\n\nExample usage:\n```\nconst components = require('hmpo-example-components');\nconst date = new components.dates;\nconst birds = new components.birds;\n\nconst steps = {\n    '/seabirds': {\n        fields: ['name-seabird', 'name-big-one'],\n        next: '/date'\n    },\n    '/date': {\n        fields: ['day', 'month', 'year'],\n        // use the controller supplied by the date component\n        controller: date.controller({\n            fields: { d: 'day', m: 'month', y: 'year' }\n        })\n    }\n};\n\nconst fields = {\n    'name-seabird': birds.seabird(), // just use the component defaults\n    'name-big-one': birds.bigSeabird(),\n    'day': date.day({\n        validate: ['numeric'] // extend 'day' default validators\n    }),\n    'month': date.month({\n        formatter: 'removehyphens',\n        overrides: ['legend'] // turn off default 'month' legend, rather than extending\n    }),\n    'year': date.year(), // no overrides or extensions\n};\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-form-component","private":false,"url":"https://github.com/UKHomeOffice/passports-form-component","license":null,"readme":"# passports-form-components\nBase component for use with passports forms.\n\n## Intro\n\nThis is the base component class that can be used to create custom components. 'Components' are reusable form elements, such as fields or form controllers.\n\n## How to use\n\nComponents that inherit from the base should implement at least one of two methods:\n\n- 'controller': provide a form controller for use at step level.\n- 'defaults': provide default field settings (if providing more than one field you can instead call the fields method directly from custom methods, for example see https://github.com/UKHomeOffice/passports-example-components/blob/master/components/dates/index.js)\n\nExample usage:\n```\n// index.js\nconst Component = require('hmpo-form-component');\nconst fields = require('./fields');\nconst fieldController = require('./controller');\n\nclass Field extends Component {\n\n    controller(settings) {\n        settings.base = settings.base || this.baseController();\n        return fieldController(settings);\n    }\n\n    defaults(settings) {\n        return this.field(settings, fields);\n    }\n\n}\n\n// controller.js\nmodule.exports = function (settings) {\n\n    // field keys can be passed in through settings.fields\n    let fields = settings.fields || {};\n\n    return class Field extends settings.base {\n        constructor(options) {\n            super(options);\n        }\n\n        getValues(req, res, callback) {\n            super.getValues(req, res, (err, values) => {\n                debug('GetValues called, settings', settings);\n                values[fields.myField] = 'MyField value set by getValues';\n                callback(null, values);\n            });\n        }\n    };\n\n};\n\n// fields.js\nmodule.exports = {\n    'myField': {\n        legend: {\n            value: 'My field'\n        },\n        labelClassName: 'form-label-my-component',\n        validate: ['required']\n    }\n}\n\n```\n\nThis component could then be implemented with:\n```\nconst Component = require('my-component');\nconst component = new Component();\n\nconst steps = {\n    '/page': {\n        fields: ['my-field'],\n        controller: component.controller({\n            fields: { 'my-field' } // pass in field keys\n        })\n    }\n};\n\nconst fields = {\n    'my-field': component.field(), // use field defaults\n};\n```\n\nFor more examples see - https://github.com/UKHomeOffice/passports-example-components.","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ansible-role-aws","private":false,"url":"https://github.com/UKHomeOffice/ansible-role-aws","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# AWS Role\n\n\n## Description\nSimple role to fix up AMI environments.\n\n\n### Current Tasks\n\n* Fix centos user with a frozen password so it does not get locked out for testing\n","travis":false,"contributing":"Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/ansible-role-rsyslog","private":false,"url":"https://github.com/UKHomeOffice/ansible-role-rsyslog","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"#This is a role to cause rsyslog to output to a server over tcp\n\nThe server is defined by setting the rsyslog_server variable\n","travis":false,"contributing":"Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/ansible-role-logstash","private":false,"url":"https://github.com/UKHomeOffice/ansible-role-logstash","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Logstash Role\n\n\n## Description\nPull a logstash container to the server\n\n\n### Current Tasks\n\n* Gets logstash to run in a docker container on the local server\n* Picks up the specified files and sends them to a remote endpoint\n","travis":false,"contributing":"Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/ansible-base-role","private":false,"url":"https://github.com/UKHomeOffice/ansible-base-role","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Base Ansible Role \n\nThis role is a generic install role, that pulls in upstream meta roles. It is intended to be called via an upstream meta process which contains the environment specific roles\n\nThis repo is configured with a test build docker container pushing to Quay via an automated drone CI server\n","travis":false,"contributing":"Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/ansible-role-minikube","private":false,"url":"https://github.com/UKHomeOffice/ansible-role-minikube","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# MiniKube Role\n\nThis role installs the pinned version of Minikube\n","travis":false,"contributing":"Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/ansible-role-kubectl","private":false,"url":"https://github.com/UKHomeOffice/ansible-role-kubectl","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Kubectl Role\n\nThis role installs the pinned version of Kubectl\n","travis":false,"contributing":"Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/government-digital-services-stickers","private":false,"url":"https://github.com/UKHomeOffice/government-digital-services-stickers","license":null,"readme":"# Government Digital Services Stickers!\n\n## Purpose\nThis is a repo to collect the images of the stickers people working in government digital services from all over the world make as positive propaganda! \n\nStickers, the currency of government digital services. :)\n\n## How do I add our sticker?\nIf you have a sticker, send a PR with a picture, photo or the sticker image itself. Give a little bit of info about it too.\n\n## Who's crazy idea was this?\nThis was the badly thought out idea of Bernard Tyers. You can complain to him on Twitter using @bernardtyers.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drone-ansible","private":false,"url":"https://github.com/UKHomeOffice/drone-ansible","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# drone-ansible\nAnsible Drone plugin\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ansible-gui-role","private":false,"url":"https://github.com/UKHomeOffice/ansible-gui-role","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Base Ansible Role\n\nThis role is a generic install role, that pulls in upstream meta roles. It is intended to be called via an upstream meta process which contains the environment specific roles\n","travis":false,"contributing":"Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/acp-infra","private":false,"url":"https://github.com/UKHomeOffice/acp-infra","license":null,"readme":"\n## Inputs\n\n| Name | Description | Default | Required |\n|------|-------------|:-----:|:-----:|\n| allow_teardown | Will enable the teardown of resources for testing environemnt | `false` | no |\n| cloudtrail_bucket | A bucket to push the cloudtrail events to | `` | no |\n| create_kms | Indicates you wish to enable a managed kms key for this cluster | `false` | no |\n| create_zone | Indicates you want this module to create the hosting domain for you | `true` | no |\n| dns_zone | The route53 hosting zone for this cluster | `` | no |\n| elb_netmask_offset | The network mask used to calculate the ELB subnets | `8` | no |\n| elb_subnet_offset | The network offset for the ELB subnets | `20` | no |\n| enable_kms_rotation | If create_kms is enabled you can control key rotation from here | `false` | no |\n| environment | The unique environment being created e.g. dev, production etc | - | yes |\n| ingress_sg_name | The name of the security group for the ingress nodes | `ingress-additional` | no |\n| kms_deletion_window | The number of days for the KMS will stay post deletion | `30` | no |\n| kops_state_bucket | The name of the state bucket to use for kops | `` | no |\n| nat_gateway | Indicates if you wish to create a NAT gatewaes or not | `true` | no |\n| nat_netmask_offset | The network mask used to calculate the NAT subnets | `8` | no |\n| nat_subnet_offset | The network offset for the NAT subnets | `30` | no |\n| tags | A set of tags applied to the vpc being created | `<map>` | no |\n| terraform_lock_table | The terraform bucket name used for state | `` | no |\n| vpc_cidr | The CIRDR network block | `10.111.0.0/16` | no |\n| zones | A collection of availability zones to build in | - | yes |\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| default_rt_id |  |\n| dns_zone |  |\n| dns_zone_id |  |\n| elb_cidr |  |\n| elb_subnets |  |\n| environment |  |\n| ingress_sg |  |\n| kms_id |  |\n| nat_cidr |  |\n| nat_gateway_private_ips |  |\n| nat_gateway_public_ips |  |\n| nat_subnets |  |\n| vpc_id |  |\n| zone_rt_id |  |\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hocs-fake","private":false,"url":"https://github.com/UKHomeOffice/hocs-fake","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"HOCS Fake - Scala Play Application\n==================================\nProviding fake endpoints for integration testing of submitting documents that would be processed by HOCS.\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Play\n\nApplication\n-----------\nThe application is configured as per a typical Scala application, where the default configuration file is \"application.conf\" (or reference.conf).\nThis default file can be overridden with other \"conf\" files and then given to the application upon boot with the following example Java option:\n```\n-Dconfig.file=test-classes/application.test.conf\n```\n\nIndividual configuration properties can be overridden again by Java options e.g. to override which Mongodb to connect:\n```\n-Dmongo.db=some-other-mongo\n```\n\nwhere this overrides the default in application.conf.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```\nbrew install typesafe-activator\n```\n\nTo compile:\n```\nsbt compile\n```\n\nor\n```\nactivator compile\n```\n\nTo run the specs:\n```\nsbt test\n```\n\nTo actually run the application, you can simply:\n```\nsbt run\n```\n\nEven though this is a Play application, \"assembly\" has been chosen to distribute and run it:\n\njava -jar target/scala-2.11/hocs-fake.jar\n\n\nDocker - SBT\n------------\n```\nsbt docker:publishLocal\n\ndocker run -p 9000:9000 hocs-fake:0.1-SNAPSHOT\n```\n\nDocker\n------\n```\ndocker build -t hocs-fake .\n\ndocker run -ti -p 9000:9000 hocs-fake\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ansible-package-management","private":false,"url":"https://github.com/UKHomeOffice/ansible-package-management","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Ansible Package Role\n\nThis role allows overriding of default package locations to a local mirror if required\n","travis":false,"contributing":"Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-centos-build","private":false,"url":"https://github.com/UKHomeOffice/docker-centos-build","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Build Image for the Home Office\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-centos-build.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-centos-build)\n\nThis is a build image to ensure that all home office containers are built on a stable base.  This means that problems with the build image being updated\ncan be discounted as it is a fixed point.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nThis container has no entrypoint.\n\nThis will run bash (or anything else if you replace bash).\n\n```shell\ndocker run -it quay.io/ukhomeofficedigital/centos-build bash\n```\n\n## Built With\n\n* CentOS 7\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-centos-build)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/centos-build)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting\npull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-centos-build/tags). \n\n## Authors\n\n* **[PhilipHarries](https://github.com/PhilipHarries)**\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-centos-build/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/right-to-rent-check","private":false,"url":"https://github.com/UKHomeOffice/right-to-rent-check","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Right to Rent Check [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/rent-check/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/rent-check)\n\n## Running the app\n\nyou can run the app locally with\n\n`npm start`\n\nNote: this will need a local redis instance running.\n\nYou can then access your service in a browser at http://localhost:8080.\n\nAlternatively, a basic docker-compose configuration is included, which will bundle redis and an nginx proxy. Run docker-compose up to start these services. You can then access your service in a browser at https://localhost.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/testing-guide-for-developers","private":false,"url":"https://github.com/UKHomeOffice/testing-guide-for-developers","license":{"key":"unlicense","name":"The Unlicense","spdxId":"Unlicense","url":"https://api.github.com/licenses/unlicense","featured":false},"readme":"#Testing Guide for Developers\n\n##Guiding principles\n(1) use the [Testing Pyramid](https://www.mountaingoatsoftware.com/blog/the-forgotten-layer-of-the-test-automation-pyramid) - you should have many more unit tests than UI tests\n\n![alt text](http://www.alwaysagileconsulting.com/blog/wp-content/uploads/2015/11/End-To-End-Testing-Considered-Harmful-Labelled-Test-Pyramid.png \"Testing Pyramid\")\n\nUnit tests are good because:\n* they are fast\n* they are reliable\n* they isolate failures\n\nAcceptance tests may be UI tests, but end-to-end tests always are.\nMinimise UI tests! They are expensive to write, time consuming to run, and sometimes non-deterministic (ie there are often false positives) and brittle (easily broken). They can be useful but we shouldn't have many of them. If they fail and expose a bug, unit test(s) should be written to address the failing scenario first.\n\nGoogle reported how end-to-end testing had the following problems:\n* difficult to find root cause of problems\n* partner failures and lab failures ruined the test results \n* many smaller bugs were hidden behind bigger bugs. \n\nEase of fixing bugs (mean time to repair) should be prioritised over having fewer test failures. \n\n\n\n\n## Interesting reading\n\n[Google blog - just say no to more end to end tests](https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html)\n[End to end testing considered harmful](http://www.alwaysagileconsulting.com/articles/end-to-end-testing-considered-harmful/)\n[Yet another testing pyramid](https://watirmelon.blog/2011/06/10/yet-another-software-testing-pyramid/)\n[Ice Cream Cone anti-pattern](https://watirmelon.blog/2012/01/31/introducing-the-software-testing-ice-cream-cone/)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drone-test-induction","private":false,"url":"https://github.com/UKHomeOffice/drone-test-induction","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drone-induction-test2","private":false,"url":"https://github.com/UKHomeOffice/drone-induction-test2","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/submission-service","private":false,"url":"https://github.com/UKHomeOffice/submission-service","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# submission-service [![Build Status](https://travis-ci.org/UKHomeOffice/submission-service.svg?branch=master)](https://travis-ci.org/UKHomeOffice/submission-service)\n \nA mongo queue implementation written in the Scala play framework.\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at james@yobriefca.se or rnehru@deloitte.co.uk. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/","masterBranchProtection":false},{"name":"UKHomeOffice/cwi-gateway","private":false,"url":"https://github.com/UKHomeOffice/cwi-gateway","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# cwi-gateway","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at james@yobriefca.se or rnehru@deloitte.co.uk. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/worldpay-stub","private":false,"url":"https://github.com/UKHomeOffice/worldpay-stub","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# worldpay-stub\nStub conforming to the WorldPay API and interactions\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at james@yobriefca.se or rnehru@deloitte.co.uk. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/kris-sandbox","private":false,"url":"https://github.com/UKHomeOffice/kris-sandbox","license":null,"readme":"Example project\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/dsp-hello-world-js","private":false,"url":"https://github.com/UKHomeOffice/dsp-hello-world-js","license":null,"readme":"# Docker + Node \"Hello World\" Example\n\nSom eother stuff\n\ntest\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-dsp-hello-world-js","private":false,"url":"https://github.com/UKHomeOffice/kube-dsp-hello-world-js","license":null,"readme":"# kube-dsp-hello-world","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/content-best-practice","private":false,"url":"https://github.com/UKHomeOffice/content-best-practice","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# content-best-practice\nA place to share the standardised content for government services\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/product-catalogue","private":false,"url":"https://github.com/UKHomeOffice/product-catalogue","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Product Catalogue\n\nProduct catalogue offers a time based versioning system for \"products\". Loosely a product is something that you can \"apply\" for, for example a Visa or a Drivers License. The concept of a product is to map the questions that people are asked when applying for a product back to the reason why they need to be asked. It is not a place to define what questions should be asked but why they are being asked (e.g. back to policy or legislation or law references). As policy changes or fee change new versions of products can be activated and the catalogue provides the API for that.\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at james@yobriefca.se or rnehru@deloitte.co.uk. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/upbot","private":false,"url":"https://github.com/UKHomeOffice/upbot","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"![Logo of the project](./images/robot-1.png)\n<!-- Base icon made by Roundicons on www.flaticon.com -->\n\n# UpBot\n\n> An awesome little Slack bot to help update and communicate the stuses of a\n  project's services to Slack\n\nWelcome to **UpBot**! I'm a bot app that connects to Slack and responds to\nrequests for the current status of services that are being monitored by `upbot`\nand allows authorised users to update the statuses and register new services to\nbe monitored.\n\n## Installing & getting started\n\nUpbot can be installed either from source or as a `docker` image. It requires\na Redis server for data storage.\n\n## Developing\n\nThe `upbot` project is maintained in the Home Office GitHub organisation. As an\nopen source project you are free to clone and install the project with the\nfollowing command:\n\n```\ngit clone ssh://git@github.com:UKHomeOffice/upbot.git\ncd upbot\nnpm i --only=dev\n```\n\nOnce cloned you can run the application (and Redis database) using\n`docker-compose up` from the project's root directory. This will launch two\ncontainers; one running the app and one running the Redis database.\n\n```\n# launch the app and database locally in Docker containers\ndocker-compose up\n```\n\n## Building and Publishing\n\nThis application is intended to be built and published as a docker app using\n`docker build` based on the project's `Dockerfile`.\n\n```\ndocker build -t homeoffice/upbot:0.0.2 .\n```\n\nThe current `docker` image is published to Quay.\n\n## Deploying\n\nThe application is deployed as `docker` container(s). If you only want to\ndeploy locally we recommend using `docker-compose` otherwise you should `docker\npull` the image from Quay.\n\n\n### Deploying locally\n\nThe following command will deploy `upbot` along with a fresh, standalone Redis\nserver:\n\n```\ngit clone ssh://git@gitlab.digital.homeoffice.gov.uk:2222/dacc-dq/upbot.git\ncd upbot\ndocker-compose up\n```\n\n### Deploying in Production\n\n> Update this section once the image is hosted on Quay\n\n## Configuration\n\n`upbot` requires certain environment variables to be present. These are:\n\n* the redis connection requires a `host` and `port` - set in `UPBOT_REDIS_HOST`\n  & `UPBOT_REDIS_PORT`)\n* the Slack API token to use - set in `HODQ_SLACK_API_TOKEN`\n\nYou will usually want to treat the Slack API token as a `secret`.\n\n### Currently using `config.yaml` for setting the intents\n\n`upbot` uses a `config.yaml` file to register the phrases that `upbot` monitors\nfor to determine intent. For a standard deployment you can leave this file as\nis. This method may be changed in the future.\n\n## Running the application locally (not in a container)\n\nRunning `upbot` is really simple, just:\n\n```\n# at the project's root directory\nnpm start\n```\n\n## Features\n\n`upbot` is a simple Slack bot that helps the DevOps team quickly manage the\nstatus of the team's services, directly from Slack.\n\nCurrently `upbot` provides the following features:\n\n- register new services\n- update a service's status (including a timestamp of when the status last\n  changed)\n- list the services currently being monitored\n- request the current state of all services\n\nFurther features are currently work-in-progress and some are still to be\nimagined.\n\n> One feature that we intend to add soon is to allow a (short) message to be\n  entered when updating a service's status, so that the message can be used to\n  provide context to those viewing the status. This is currently work in\n  progress.\n\n## Contributing\n\nFeel free to `fork` our project and/or open any `issues`, we appreciate all\ninput and feedback.\n\nThe following people have contributed to the development of `upbot`:\n\n- Tom Fitzherbert\n\n## Licensing\n\n`upbot` is released under the MIT license.\n\n## Credits\n\nOur logo is based on an icon made by\n[Roundicons](http://www.flaticon.com/authors/roundicons) from www.flaticon.com\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ansible-role-displayLinkDriver","private":false,"url":"https://github.com/UKHomeOffice/ansible-role-displayLinkDriver","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# ansible-role-displayLinkDriver","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/marc-helloWorld","private":false,"url":"https://github.com/UKHomeOffice/marc-helloWorld","license":null,"readme":"# marc-helloWorld\nTest for Deploying to Kuberneters Cluster from Drone CI \n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/version-check-task","private":false,"url":"https://github.com/UKHomeOffice/version-check-task","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Grunt Dependency Version Check For Build Tasks\n=============================================\n\nThis repository contains a working Grunt task together with example `package.json` designed for incorporation into UK Government projects that rely on the [govuk frontend toolkit](://github.com/alphagov/govuk_frontend_toolkit).\n\nRunning the command `$ grunt checkVersion` will produce the following result if your dependency or dependencies are up to date\n\n![Success](./images/Success.png)\n\nAnd the following if you are out of date\n\n![Failure](./images/Failure.png)\n\nInstallation\n-----------\n\nTo install simply clone this repository into your chosen directory then:\n```\ncd versionCheckTask\n```\n\n```\nnpm install\n```\n\n```\ngrunt versioncheck\n```\n\nModification, Extension and Gerneral Information\n-----------------------------------------------\n\nThis example has been setup with two tasks. The first `grunt versioncheck` will check the version of dependencies specified in the `package.json` and will exit with an error code when one is out of date. The second `grunt checkVersion` will notify the user whether the dependency is in or out of date but will not cause the task to exit if the dependency is out of date. This is particularly useful when including this task as part of a projects build scripts.\n\nBy default the task will check all project dependencies specified in your project's `package.json` to skip this add the name of the dependecy to the `skip` array held under the versioncheck task.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-cached-model","private":false,"url":"https://github.com/UKHomeOffice/passports-cached-model","license":null,"readme":"# hmpo-cached-model\nCached polling model.\n\nPoll an API at a given interval and save the data to a data storoe such as redis. Multiple nodes can synchronise by sharing the redis instance and key.\n\n## Usage\n\n```\nconst HmpoCachedModel = require('hmpo-cached-model');\n\nlet redisFactory = {\n    getClient() {\n        return redisInstance;\n    }\n}\n\nlet model = new HmpoCachedModel(\n    { // optional seed data\n        foo: 'bar',\n        boo: 'baz'\n    },\n    { // options\n        url: 'http://example.com/api',\n        key: 'root-key',\n        store: redisFactory,\n        storeInterval: 1000,\n        apiInterval: 2000\n    }\n);\n\n// start polling\nmodel.start();\n\n\nlet data = model.get('data');\n\n\n// stop polling\ncountriesLib.stop();\n```\n\nIf the API returns an object, all keys are saved to the model, otherwise the data from the API is saved to the `data` key.\n\nExtend and override `parse()` to change the way the incomming data from the API is processed.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/iqbal-helloworld","private":false,"url":"https://github.com/UKHomeOffice/iqbal-helloworld","license":null,"readme":"# iqbal-helloworld\nHello world Drone test\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-countries-lib","private":false,"url":"https://github.com/UKHomeOffice/passports-countries-lib","license":null,"readme":"# hmpo-countries-lib\nCountry data API cache and wrapper library\n\n## Usage\n\n```\nconst CountriesLib = require('hmpo-countries-lib');\n\nlet redisFactory = {\n    getClient() {\n        return redisInstance;\n    }\n}\n\nlet countriesLib = new CountriesLib({\n    store: redisFactory,\n    key: 'store-key-prefix',\n    storeInterval: 10000, // 10 seconds\n    countryUrl: 'http://example.com/api/countries',\n    countryInterval: 3000000, // 5 minutes\n    policyUrl: 'http://example.com/api/policies',\n    policyInterval: 6000000, // 10 minutes\n});\n\n// start polling\ncountriesLib.start();\n```\n\n```\nlet allCountries = countriesLib.getAllCountries();\nlet residentCountries = countriesLib.getResidentCountries();\nlet countryData = countriesLib.getCountryDataById('UK');\nlet countryData = countriesLib.getCountryDataBySlug('united-kingdom');\n```\n\n```\n// stop polling\ncountriesLib.stop();\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ansible-role-wifi-fix","private":false,"url":"https://github.com/UKHomeOffice/ansible-role-wifi-fix","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# ansible-role-wifi-fix\nA small role to fix WiFi issues after a suspend on Ubuntu 16.04\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/removals_kube","private":false,"url":"https://github.com/UKHomeOffice/removals_kube","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# removals_kube","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-ffs","private":false,"url":"https://github.com/UKHomeOffice/evw-ffs","license":null,"readme":"# EVW flight forecast service integration\n\n![evw-ffs](https://travis-ci.org/UKHomeOffice/evw-ffs.svg?branch=master) [![npm](https://img.shields.io/npm/v/evw-ffs.svg)]()\n\n## Run\n\nTo spin up a stub version of the evw flight forecast service:\n\n```\n  node ./node_modules/.bin/evw-ffs\n```\n\n## Query\n\nTo query either the stub or the real service:\n\n```\nconst flightLookup = require('evw-ffs').flightLookup;\n\nflightLookup\n  .findFlight('ku101', '2017-06-09')\n  .then(data => {\n   // do what you want with flight data\n  }).catch(error => {\n    console.error('oh noes', error);\n  });\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/cdar-sandbox","private":false,"url":"https://github.com/UKHomeOffice/cdar-sandbox","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/chac-sb","private":false,"url":"https://github.com/UKHomeOffice/chac-sb","license":null,"readme":"Example project\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/keycloak-theme-govuk","private":false,"url":"https://github.com/UKHomeOffice/keycloak-theme-govuk","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# keycloak-theme-govuk\nA Keycloak theme using GOV.UK Template and Elements.\n\n- [Using](#using)\n- [Developing](#developing)\n    - [Building](#building)\n    - [Local Keycloak server](#local-keycloak-server)\n    - [Testing Keycloak e-mails](#testing-keycloak-emails)\n- [Releasing](#releasing)\n\n## Using\nThis theme has been deployed to the UK Home Office hosting platform Keycloak Docker container. To use it in your Keycloak realm:\n\n1. Sign into your realm's admin console.\n\n    <img alt=\"\" src=\"docs/images/use-1.png\" width=\"512\" height=\"337\">\n\n2. Go to the “Themes” tab in “Realm Settings”\n\n    <img alt=\"\" src=\"docs/images/use-2.png\" width=\"512\" height=\"370\">\n\n3. Select “govuk” as your login theme, and click on “Save”\n\n    <img alt=\"\" src=\"docs/images/use-3.png\" width=\"512\" height=\"370\">\n\nThe theme will now be used for all Keycloak log in screens on your realm - including logging in to the admin console. If you sign out, you should see the GOV.UK themed log in screen.\n\n<img alt=\"\" src=\"docs/images/use-4.png\" width=\"512\" height=\"421\">\n\n\n## Developing\n\n### Building\nThe theme can be built using the following commands:\n```bash\n$ npm install\n$ npm run build\n```\nThe theme will then be built at `/govuk`, ready for use in the local Keycloak server.\n\n### Local Keycloak server\nA local Keycloak server for developing and testing the theme is available as a Docker container.\n\nTo bring up the server, make sure you’ve installed and started [Docker Community Edition](https://docs.docker.com/engine/installation/), then use the following commands:\n```bash\n$ npm install\n$ npm run build\n$ docker-compose up\n```\nThe Keycloak server will now be available on <http://localhost:8080>. You can log into the Administration Console using “**admin**” as both username and password.\n\n<img alt=\"\" src=\"docs/images/keycloak-local.png\" width=\"512\" height=\"300\">\n\nTo enable the GOV.UK theme in the local Keycloak server, follow steps 2 and 3 in [the “Using” section above](#using).\n\nYou will now see the GOV.UK theme when logging into the local Keycloak server. Changes made to the theme files in `/govuk` will be visible on the local Keycloak server when you refresh the page in your browser.\n\n### Testing Keycloak e-mails\nThe local Keycloak server includes MailDev, a mock SMTP server that you can use to receive and view Keycloak e-mails. It is available on <http://localhost:8081>.\n\nTo set up the local Keycloak server to send e-mails to MailDev:\n\n1. Log in to [the local Keycloak server](http://localhost:8080).\n\n2. Go to the “Email” tab in “Realm Settings”\n\n3. Enter the following details:\n\n    - Host: **maildev**\n\n    - From: **keycloak@keycloak**\n\n4. Click on “Save”\n\n5. Click on “Admin” in the top-right-hand corner of the page, and click on “Manage Account”\n\n6. Add an e-mail address to the admin account.\n\n    It doesn’t matter what e-mail address you add, as all e-mails will be caught by MailDev. But you do need to add one, otherwise Keycloak will not send e-mails for this account.\n\nThe local Keycloak server should now be set up to send e-mails to MailDev. To check that it’s working:\n\n    1. Click on the “Back to Security Admin Console” link\n\n    2. Click on the “Login” tab in “Realm Settings”\n\n    3. Enable “Forgot password”, and click on “Save”\n\n    4. Sign out.\n\n    5. On the Keycloak log in screen, click on the “Forgot your password?” link\n\n    6. Enter your username (**admin**) in the text field, and submit the form.\n\n    7. Visit [MailDev](http://localhost:8081). You should see a reset password e-mail from Keycloak.\n\n        <img alt=\"\" src=\"docs/images/maildev.png\" width=\"512\" height=\"338\">\n\n\n## Releasing\nThe theme can be packaged for release using the following command:\n```bash\n$ npm install\n$ npm run build\n$ npm run dist\n```\nThe theme will then be packaged at `/govuk.tar.gz`.\n\nTODO: deploying to the UK Home Office hosting platform Keycloak Docker container. (i.e. ask for a new Docker Keycloak image to be built and deployed to Kubernetes on https://github.com/UKHomeOffice/hosting-platform-bau/issues)","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/html-pdf-converter","private":false,"url":"https://github.com/UKHomeOffice/html-pdf-converter","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# HTML PDF Converter\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/html-pdf-converter/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/html-pdf-converter)\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/html-pdf-converter/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/html-pdf-converter)\n[![Build Status](https://travis-ci.org/UKHomeOffice/html-pdf-converter.svg?branch=master)](https://travis-ci.org/UKHomeOffice/html-pdf-converter)\n\n#### Uses Chrome Headless to convert HTML to a PDF\n\nSend a HTML or Mustache template and recieve a PDF stream as the response.\n\nThis implementation uses Docker to run [Chrome Headless (tip-of-tree)](https://chromedevtools.github.io/devtools-protocol/tot/). Using Docker is not a requirement but makes installation much easier.\n\n## Install and start\n\n### Chrome Headless\n```bash\ndocker pull yukinying/chrome-headless/\ndocker run yukinying/chrome-headless\n```\n\n`chrome-headless` defaults to running at `localhost:9222`. You can override these settings with `CHROME_HOST` and `CHROME_PORT`.\n\n### Node App\n```bash\ndocker pull quay.io/ukhomeofficedigital/html-pdf-converter\ndocker run -p 8001:8001 html-pdf-converter\n```\n\n## Development\n\n```bash\ngit clone git@github.com:UKHomeOffice/html-pdf-converter.git\ncd html-pdf-converter\n\ndocker-compose build;docker-compose up\n```\n\n## Example usage\n\nMustache and Data\n```bash\ncurl -H \"Content-Type:application/json\" \\\n     -d '{\n            \"template\": \"'\"\\\n              <html>\\\n                <head>\\\n                  <title>{{title}}</title>\\\n                </head>\\\n                <body>\\\n                  <h1>{{header}}</h1>\\\n                  <p>{{para}}</p>\\\n                </body>\\\n              </html>\\\n            \"'\",\n            \"data\": {\n              \"title\": \"My title\",\n              \"header\": \"My header\",\n              \"para\": \"My content\"\n            }\n         }' \\\n     -i localhost:8001/convert\n```\n\nHTML\n```bash\ncurl -H \"Content-Type:application/json\" \\\n     -d '{\n            \"template\": \"'\"\\\n              <html>\\\n                <head>\\\n                  <title>My title</title>\\\n                </head>\\\n                <body>\\\n                  <p>Hello world</p>\\\n                </body>\\\n              </html>\\\n            \"'\"\n         }' \\\n     -i localhost:8001/convert\n```\n\nResponse (example)\n```bash\n%PDF-1.4\\n1 0 obj\\n<<\\n/Title ...\n```\n\n## External Resources\n\nThis service cannot resolve external resources such as linked CSS, JavaScript or images.\nIf your template includes links to any of these resources, we suggest you use [https://github.com/remy/inliner](https://github.com/remy/inliner). The source for Inliner can be a URL, a file location or an HTML string.\n\n## Environment Variables\n\n```bash\nAPP_PORT:    Defaults to 8001\nAPP_HOST:    Defaults to 'localhost'\nCHROME_HOST: Defaults to 'localhost'\nCHROME_PORT: Defaults to 9222\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/design-patterns","private":false,"url":"https://github.com/UKHomeOffice/design-patterns","license":null,"readme":"# Home Office design system\n\nThis kit contains the Home Office internal design system library.\nUse this to refer to patterns and components not covered by the GOV.UK kit.\nThe Home Office system library consist of:\n\n-Badges\n-Buttons\n-Confirmation pages\n-Flash cards\n-Header\n-Help\n-Highlighted search matches\n-Icons\n-In-page tabs\n-Interruption card\n-Labels\n-Modal window\n-Navigation\n-Service header\n-Subnavigation links\n-Table\n-Tabs\n-Task checklist\n-Vertical timeline\n\n# How to use\n\nAll the components and patterns are saved as symbols. Symbols are Sketch's way of importing an element that has already been created. It allows you to simply drop in an element without needing to build them yourself every time. To insert a symbol into your wireframe, choose the 'insert' button, and then hover over 'symbol'. This will show a list of desktop symbols that are available to import.\n\nTo modify text on the symbol without overwriting the default elements, type in the overrides in the right hand side.\n\nhttp://g.recordit.co/MOO1aJLxtU.gif\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-test-harness","private":false,"url":"https://github.com/UKHomeOffice/evw-test-harness","license":null,"readme":"### evw test harness 🔍\n\n*to use:*\n\n```\ngit clone\nnpm i\n# take a failing case from customer db\n# save it to evws/test.js\nnode test\n```\n\n*generate a document udpate*\n\n```\n# check your document\nnode test\n# generate an update\nnode generate\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/terraform-infra-template","private":false,"url":"https://github.com/UKHomeOffice/terraform-infra-template","license":null,"readme":"# terraform-infra-template\nbased template for aws\n=======\n\nThis folder contains code/automation that sets up the network, firewall, servers. It also contains code for setting up the\n\nStructure\n-------\n\n* Terraform scripts follow best practices set out by Hashicorp [Terraform BestPractices](https://github.com/hashicorp/best-practices/tree/master/setup)\n* Ansible scripts follow best practices set out[Ansible BestPractices](http://docs.ansible.com/playbooks_best_practices.html)\n````\nThe structure of this repository is laid out as follows.\n\n├── 01-terraform            # <-- All infrastructure on cloud services are done throught Terraform scripts\n│   ├── aws                 # <-- AWS infrastructure\n│   ├── bin                 # <-- Terraform Binaries\n│   ├── init_script         # <-- Some services started up by the estate.\n│   └── modules             # <-- Following Terraform best practice - standardize modules installation.\n│   └── policies            # <-- AWS Policy templates (IAM templates)\n│   └── scripts             # <-- Global scripts for cretaing and destroying the entire estate.\n│   └── user_data           # <-- This contain scripts for cloud init. This should not be used in future.\n├── 02-ansible              # <-- All Ansible code related to dfeployments and service installation.\n│   ├── host/               # <-- Needs to be removed\n│   ├── inventory/          # <-- Should contain all host record references and variables.\n│   ├── plugins/            # <-- contains hooks to cloud services\n│   ├── products/           # <-- This contains all service definitions.\n│   └── roles/              # <-- This contains setup scripts for different components.\n│   └── test/               # <-- This contains the test for each product.\n├── 03-dev/                 # <-- Localhost Dev enviroment setup\n\n\n````\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/learning-git","private":false,"url":"https://github.com/UKHomeOffice/learning-git","license":null,"readme":"##Intro\n\nThis is a test repo to help people getting familiar with using git and software repositories.\n\n## Update\n10:33\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/esapi-policeuk-proxy","private":false,"url":"https://github.com/UKHomeOffice/esapi-policeuk-proxy","license":null,"readme":"# Falcor Demo of PoliceUK\n\nA simple discovery/spike into the viability of using Falcor to proxy an existing API at http://data.police.uk to address some of the short comings. \n\nWe were looking at ways to better show how the data is structured. While also enabling powerful and simple query semantics that would reduce the number of requests to answer simple questions. \n\n\n## Installation\n\nClone the repo and then run:\n\n    npm install\n    node index.js\n\nNavigate to localhost:3000\n\nDemonstrations of certain queries / requests are encoded in index.js in comments. Uncomment and refresh to see them. \n\n## Reconized issues\nThis doesn't address stable sorting of the order of the various identifiers. Falcor seems to suggest having the canonical records for entities in arrays, and index them, which suggests that we'd need to keep those ids consistent to avoid breaking the graph so we'd want to look at that before taking this further. \n\n## License\nMIT\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-atlassian-jira-service-desk","private":false,"url":"https://github.com/UKHomeOffice/docker-atlassian-jira-service-desk","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Atlassian JIRA Service Desk in a Docker container\n\n> Project name: docker-atlassian-jira-service-desk\n\nThis project exists in order to enable the deployment of JIRA Service Desk in\nthe UK Home Office Kubenetes cluster.\n\nThis project is based on [Martin Aksel Jensen's](https://github.com/cptactionhank)\nproject and borrows heavily from that project - many thanks to Martin for Open\nSourcing his work under the MIT License. His project can be found\n[on GitHub here](https://github.com/cptactionhank/docker-atlassian-jira-service-desk).\n\nThis project is not forked from Martin's project as some modifications may be\nrequired to the `Dockerfile` to ensure certain configuration settings are\nmaintained and any updates are controlled.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/eud-iso-creator","private":false,"url":"https://github.com/UKHomeOffice/eud-iso-creator","license":null,"readme":"# eud-iso-creator\n\nThis is a simple script to generate an ISO that is functionally the same as:\n\nhttps://github.com/UKHomeOffice/development_environment\n\nThe idea is that a script is run to generate an ISO so that everything is centralized instead of using the ansible playbooks with their many dependencies.\n\n\n## Things to be aware of\n\nAfter installation, run the post_install.sh script in the /root/install directory of the installed file system.\n\n\n## Instructions on how to use\n\nAfter generating the ISO you must copy this onto a USB stick:\n`dd if=<location of ISO>.iso of=/dev/sd[a-z] bs=4M status=progress`\nWhere sd[a-z] is the location of the USB stick\n\nAfter this boot from the USB stick.\n\nAfter the live disk has loaded, open a terminal and change to root:\n`sudo su -`\nThen run the ubuntu installer:\n`ubiquity`\n\nDuring the installation wizard make sure you tick 'Encrypt the new Ubuntu installation for security' option on the Installation type window.\n\nOn the Who are you? window, use this configuration:\n\nName: DSAB Admin\n\nComputer's name (replace X's with asset tag number): dadmin-workstation.dsab-eud-000XXX.homeoffice.gov.uk\n\nUsername: dadmin\n\nPassword: (if you do not know this check with DevOps BAU)\n\n\n## If an SSD is present - not applicable to the ASUS laptops\nIf an SSD is present in the computer then you must install grub manually as this step of the installation will fail.\n\nTo do so, open another terminal as the root user - \nhaving installed the system onto the hard disk you should now have access to the newly created logical volumes.\nRun the following command to refresh the list of logical volumes:\n`vgchange -a y`\nYou should get a message about logical volumes being added.\n\nNext, you must mount the filesystem - to do so, run the following (still as root) make sure to mount the root directory first:\n`mount /dev/vg-workstation/root /mnt/`\n`mount /dev/vg-workstation/var /mnt/var`\n`mount /dev/vg-workstation/tmp /mnt/tmp`\n`mount /dev/vg-workstation/var_tmp /mnt/var_tmp`\nNext you must mount the filesystem containing the boot directory into the correct place of the mounted root filesystem.\n`mount /dev/nvme0n1p1 /mnt/boot`\n\nHaving mounted the filesystem correctly you must now bind the dev / proc / sys directories into the mounted filesystem to be able to install grub to it.\nTo do so - the following line is useful:\n`for i in dev proc sys ; do mount -B /$i /mnt/$i ; done`\n\nFinally you must chroot inside of this filesystem:\n`chroot /mnt/`\n\nInside, you must do the following:\n`grub-install /dev/nvme0n1`\nThen generate the grub config:\n`grub-mkconfig -o /boot/grub/grub.cfg`\n\nFinally, change the UID of the admin user to 999 in order to hide them from the user login screen:\n`usermod -u 999 <admin username>`\n\nLog out of the chroot environment using: Ctrl-D\n\nNow you can complete the installation / reboot, make sure to remove the USB stick after rebooting.\n\n\n## After Installation\n\nAfter installation you must log in as root and while connected to the internet, run the post_install.sh script present in the /root/install/ directory.\n\nIf you can not log in as root from the GUI, you will have to log in using a tty - if this is the case, you will find it straightforward to connect to the network using nmtui - alternatively, log into the guest account and configure the Wifi from there.\n\nend\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ddat-scala-core","private":false,"url":"https://github.com/UKHomeOffice/ddat-scala-core","license":null,"readme":"# ddat-scala-core","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-proxy","private":false,"url":"https://github.com/UKHomeOffice/docker-proxy","license":null,"readme":"A simple, generic, reverse proxy\n================================\n\nIt is configured using the following environment variables:\n* `HOST`, the host to proxy to. e.g. google.com\n* `PORT`, the port to proxy to. e.g. 80\n* `LISTEN_PORT`, the port to listen for connections on. Default: 1337\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-etcd-backup","private":false,"url":"https://github.com/UKHomeOffice/docker-etcd-backup","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# docker-etcd-backup\n\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/docker-etcd-backup/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/docker-etcd-backup)\n\nBackup process for etcd2 (etcd3 is much simpler)\n\n## Design\n\nDue to the complexities of restoring a cluster two approaches are used:\n\n1. node backup (quick to restore but dependant on a quorum of restored nodes)\n2. cluster backup (complex to restore)\n\n## Node backup\n\nA node backup (tar) is performed throughout the day. Each node will push all data content to a backup location.\n\n## Cluster backup\n\nA cluster backup is taken once a day. Only one node will save the latest backup.\n\nA cluster backup is made with `etcdctl backup` which strips node information thus requiring a cluster rebuild.\n\n## Environment Variables\n\n* `CLUSTER_BACKUP_TIMES:-0000` Times to carry out node agnostic cluster backups\n* `NODE_BACKUP_TIMES:-0100 0700 1300 1900` Times to backup node data\n* `ETCD_DATA_DIR` Location to backup from (will result in NOOP if not present)\n* `ETCD_BACKUP_DIR` The root directory to backup to\n* `ENV_FILE:-/etc/environment` Will be sourced if specified\n* `NODE_NAME` Will be audited from ETCD_ENDPOINTS if not present\n* `ETCD_ENDPOINTS:-https://localhost:2379`\n* `EXIT_AT` Allows setting a time to exit (for testing)\n* `S3_PATH` Will backup to this path and delete off host when done\n* `KMS_ID` Specifies which KMS encryption key to use in S3\n\n## BackUp Now Flag\n\nCreate a file called `${ETCD_BACKUP_DIR}/bunf` to initiate a node and cluster backup (it will be deleted when done).\n\n## Restore process\n\n### From Node Backup\n\n1. Stop ETCD everywhere\n2. Restore the latest .tar.gz file from `${ETCD_BACKUP_DIR}/YY/MM/DD/*.tar.gz` to the `${ETCD_DATA_DIR}`\n\n### From Cluster Backup\n\n1. Stop ETCD everywhere\n2. See: https://github.com/coreos/etcd/blob/master/Documentation/v2/admin_guide.md#disaster-recovery\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-cassandra-backup-to-s3","private":false,"url":"https://github.com/UKHomeOffice/docker-cassandra-backup-to-s3","license":null,"readme":"# docker-cassandra-backup-to-s3\n\nBacks up cassandra to an s3 bucket daily\n\n## Environment Variables\n\n* `AWS_ACCESS_KEY_ID:` AWS Access Key\n* `AWS_SECRET_ACCESS_KEY` AWS Secret Access Key\n* `AWS_KMS_ID` AWS KMS ID to encrypt the contents of the bucket with\n* `AWS_BUCKET_NAME` The name of the AWS Bucket to backup to\n* `CASSANDRA_HOST:-localhost` the cassandra host to connect to\n* `CASSANDRA_PORT:-7199` The cassandra port to connect to\n* `CASSANDRA_KEYSPACE:-draios` The cassandra keyspace to backup\n* `CASSANDRA_DATA:-/var/lib/cassandra/data` The cassandra data directory\n\n## Restore process\n\nUse the node restart method:\nhttp://docs.datastax.com/en/archived/cassandra/2.0/cassandra/operations/ops_backup_noderestart_t.html\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/mapping-participants","private":false,"url":"https://github.com/UKHomeOffice/mapping-participants","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"## Mapping participants application\n\nCalls the Mapping Research Participants smart survey api and generates reports\n\n## Map Research participants project aims\n\nThe basic user needs underpinning this project are:\n\n* User researchers on all digital projects need to accurately put research participants into digital inclusions categories so that they can prove they are researching with users across the digital inclusion scale and no user groups are excluded.\n\n* Senior management and teams in the centre of excellence need to see this data so that they can engage with project teams about user research participants before entering service assessments.\n\nWe need to do this because:\n\n* Morally government shouldn't be building software that excludes groups\n* It makes the design of service better for all users\n* Government legally can't exclude groups (The Equalities Act)\n* Civil Servants can't breach the Civil Service Code of Conduct (Impartiality)\n* The government digital service standard says we must to pass assessment (Point 2, 12, & 14)\n\nThe tool is about providing transparency, an audit trail, and accountability.\n\nFor managers and specialist teams in the center of excellence it would mean they could help project teams research with the right users before it’s too late e.g. project teams failing assessments because they haven’t done any user research with users who are in lower digital inclusion (DI) categories or they haven’t done any research with users who have access needs\n\nFor senior managers, the tool provides evidence they need to push our cause at more senior levels. As we should be able to link our successful projects back to hard numbers.\n\nProving our way of working:\n* reduces cost to the overall business\n* reduces and manages projects risks\n\nThe user needs around this are at the heart of the digital inclusion strategy\n\nhttps://www.gov.uk/government/publications/government-digital-inclusion-strategy/government-digital-inclusion-strategy\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-filebeat-jenkins","private":false,"url":"https://github.com/UKHomeOffice/docker-filebeat-jenkins","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"**User story**\n\nAs a member of DevOps team I want to send Jenkins' build logs to [Elastic Stack](https://www.elastic.co/products) so that all logs are available in a central logging system for analysis.\n\n**Requirements:**\n- Filebeat container is to be deployed on the same host as Jenkins\n- Filebeat container is to be managed by systemd as `filebeat.service`\n- Filebeat state has to be persisted on the host\n- If Jenkins goes down, Filebeat has to stop too and Filebeat only starts again if Jenkins starts\n\n**Assumptions:**\n- Jenkins container is already running with `--name jenkins` docker flag\n- Jenkins container is being managed with systemd as `jenkins.service`\n- Elasticsearch, Logstash _(optional)_ and Kibana are already running\n\n**Configurations:**\n- Edit `config/filebeat.yml` file as appropriate for your system:\n    ```\n    paths:\n      # or legacy jenkins jobs\n      - /var/lib/jenkins/jobs/*/builds/*/log\n      # For jenkins blue ocean pipeline jobs\n      - /var/lib/jenkins/jobs/*/jobs/*/branches/*/builds/*/log\n\n    output.elasticsearch:\n      # Array of hosts to connect to.\n      hosts: [\"HOST_NAME:9200\"]\n      # Optional protocol and basic auth credentials.\n      protocol: \"http\"\n      username: \"USER_NAME\"\n      password: \"PASSWORD\"\n    ```\n- Edit `systemd/filebeat.service` file as appropriate for your system. This file declares a dependency on jenkins. So, if jenkins goes down, Filebeat has to go down too. Otherwise Filebeat will not be able to read build logs once Jenkins comes up.\n\n  ```\n  After=jenkins.service\n  Requires=jenkins.service\n  ExecStartPre=-/usr/bin/docker stop filebeat\n  ExecStart=/usr/bin/docker run --rm --name filebeat --volume filebeat_data:/data --volumes-from jenkins:ro docker-filebeat-jenkins\n  ```\n    - **_NOTE:_** `--volume filebeat_data:/data` is required in order to persist Filebeat state. Failing to persist Filebeat state will lead to Filebeat re-sending all build logs to Elasticsearch on restart\n\n**Build Filebeat image**\n*\n    ```\n    docker build --rm --no-cache --tag docker-filebeat-jenkins .\n    ```\n\n\n**Run Filebeat container**<br>\nIf Jenkins container is stopped, removed and run again, Filebeat will not be able to read Jenkins' log files. Jenkins' container ID would have changed, so Filebeat would have lost the visibility of Jenkins' volume.\n\nFilebeat has a dependency on Jenkins being up and running. So, if Jenkins goes down, Filebeat has to go down at the same\ntime and both these services have to be brought up again; Jenkins first and Filebeat second\n1. Copy all files from the systemd directory in this repo and place them in `/etc/systemd/system` directory on the host\nfile system\n2. Run the following commands: <br>\n ```sudo systemctl enable $(pwd)/systemd/filebeat.service\n sudo systemctl daemon-reload\n sudo systemctl start filebeat.service\n docker ps -a\n ```\n to check if filebeat and jenkins are up and running.\n\n  `docker exec -it filebeat ls -latr /var/lib/jenkins` to see if Jenkins' volume is visible from within Filebeat's\n  container\n\nIn Kibana, create an index called `logstash-*` to view Jenkins' build logs.\n\nFilebeat documentation: https://www.elastic.co/guide/en/beats/filebeat/current/index.html<br>\nFilebeat FAQ: https://www.elastic.co/guide/en/beats/filebeat/current/faq.html\n\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/coe","private":false,"url":"https://github.com/UKHomeOffice/coe","license":null,"readme":"## Centre of excellence site\n\nThis is a jekyll powered static site for showcasing some of the things that the Home Office centre of excellence can offer delivery teams.\n\nAnyone can make changes to it if they have a Github account and have been added to the Home Office organisation on Github.\n\n## Setting up for use on Github Pages\n\nThis site uses the Cayman theme as a base theme, then overrides defaults. To use this in Github pages:\n\n1. First fork this repo\n2. Then go to Settings\n3. Scroll down to the Github Pages section\n4. Choose a source - choose 'master branch' if you're not sure\n5. Click the 'Change theme' button and choose the Cayman theme.\n6. That's it. Your site will be available to the public at: https://yourusername.github.io/your-repo-name/\n\n## Running locally\n\nYou will need to setup Jekyll to run locally. Follow the instructions here https://jekyllrb.com\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ihs-stub","private":false,"url":"https://github.com/UKHomeOffice/ihs-stub","license":null,"readme":"# IHS Stub [![Build Status](https://travis-ci.org/UKHomeOffice/ihs-stub.svg?branch=master)](https://travis-ci.org/UKHomeOffice/ihs-stub)\n\n## Synopsis\n\nStub conforming to the IHS (Immigration Health Surcharge) payment request API, mocking the interactions of the user.\n\nThis project acts as a stub for IHS to enable development of that integration without needing a full IHS instance running.\n\nThe stub allows the user to mock a successful or failed IHS payment.\n\n## Before Usage\n\nIn order to fully mimic the IHS system, you will need to regenerate keystore.jks with the IHS keys. The current keystore uses dummy keys, which enables development of this stub independently.\n\nWhen directed to the stub, the user will be presented with a developer page that allows them to see the details from the decrypted token, along with the ability to mark the request as either successful or failed (mimicking the response of a successful or failed IHS payment).\n\nIf successful, the completionURL will be sent an x-www-form-urlencoded POST request, that contains ihs_token in the body, with the value of the signed IHS token.\n\nIf unsuccessful, the failureURL will be sent a GET request, that contains an Error_Code and Error_Description.\n\nBoth the completionURL and failureURL are configured in application.conf and is tested in IhsControllerSpec.\n\n## Usage\n\nTo use this stub run \"./sbt run <port>\".\n\n## Motivation\n\nThis project exists because it is useful for the Home Office Visa exemplar and for any other projects that need to allow the user to make payment to IHS.\n\nThis stub is designed to be used as a replacement for IHS during development, and is not designed for production use.\n\n## Tests\n\nTests can be executed by running \"./sbt test\".\n\nHowever if you are learning how the service works through running individual tests, this is best done in an IDE such as IntelliJ.\n\n## Contributors\n\nIf you want to contribute to the project you can do it by creating a pull request.\n\nFor more information on how to effectively contribute, please consult the CONTRIBUTING.md file.\n\n## Known issues\n\nAt present there are no known issues\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at james@yobriefca.se or rnehru@deloitte.co.uk. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/","masterBranchProtection":false},{"name":"UKHomeOffice/messaging","private":false,"url":"https://github.com/UKHomeOffice/messaging","license":null,"readme":"# Messaging API Dev Scripts\n\n## Usage\nMessages and translations can be added by means of the various scripts in the `messaging` directory.\n  * `messaging/push`\n  * `messaging/pull`\n  * `messaging/delete`\n  * `messaging/generate`\n  \nFor your convenience, each of the scripts can be called with a `-h` or `--help` option to display a help message reminding you of the script's usage options. \n\n### Working locally\nWhile working locally, you can override the messages pulled from the messaging API by creating a JSON file in `messages_dir`. This file should take the format `[story number]_[language code].json` - for example, `DJ-1234_en.json`.\n\nThe file should contain the new messages you wish to use (either overwriting the values of existing terms or adding new ones) in JSON format (the `generate` script will create this for you, see below):\n```json\n[\n  {\n    \"term\": \"ref.alternateLanguages.en\",\n    \"definition\": \"English-New\"\n  },\n  {\n    \"term\": \"ref.alternateLanguages.zh\",\n    \"definition\": \"Chinese-New\"\n  }\n]\n```\n\nWhen the application is loaded, the 'local' terms will be loaded in preference of any existing terms, allowing you to see the changes before pushing them.\n\n#### Generate a local working file\n##### `messaging/generate`\nTo generate a file which fits the above criteria, you can use the `messaging/generate` script. By default, the script will prompt for a story number and generate a file for each default language containing a single term-definition pair. The following options can also be used:\n  * `-n` to set the number of entries (term-definition pairs) to include in the file\n  * `-s` to set the story number (no prompt will be shown in this case)\n  * `-l` to generate a file only for one specific language\n  * `-t` to add an additional 'tag' which can be used in the translation tool to identify certain messages. To add more than one tag, put the entire set of tags in a single set of quotes and comma-separate them (for example `-t \"new_terms, release_55\"`)\n\nThere is an entry in `.gitignore` for these files which prevents them being added in stash/git     \n\nThe following are valid usages:\n  * `messaging/generate` - will prompt for the story number and create one file for each language, each containing one entry\n  * `messaging/generate -n 3` - will prompt for the story number and create a file for each language, each containing three entries\n  * `messaging/generate -l en` - will prompt for the story number and create one file for the language 'en' containing one entry\n  * `messaging/generate -n 6 -s DJ-1234` - will create a file for each language with the story number DJ-1234, each containing six entries\n  * `messaging/generate -s DJ-1234 -n 5 -l zh` - will create one file for language 'zh' with story number DJ-1234, containing five entries\n  * `messaging/generate -t release_55` - will prompt for the story number and create a file for each language with one entry each, with an additional tag of 'release_55'\n  * `messaging/generate -t \"release_55, new_terms\"` - will prompt for the story number and create a file for each language with one entry each, with two additional tags, \"release_55\" and \"new_terms\"\n\n### Pulling messages\n##### `messaging/pull`\nRun `messaging/pull` to pull the up-to-date messages from the API and insert them into the local messages files (which take the format `messages_[languade code].json` e.g. `messages_en.json`, `messages_zh.json`).\n\nRunning this script will overwrite the contents of the file.\n\nSince you will typically want to avoid pulling all translations, the `messaging/pull` provides a `-l` option which enables you to pull only the English messages as follows:\n    * `messaging/pull -l en`\n\n### Pushing messages\n##### `messaging/push`\nOnce you are happy with your changes to the messages in your local working file, you can use the `messaging/push` script to push your local messages, which should be in a file in the format described above. By default, the script will upload all files beginning `DJ-` from the `messages_dir` directory.\n\nIf you have only one active story in progress (so have only one local working file) then running the script with no parameters will do exactly what you need.\n\nBut if you have two or more active stories, each having their own local working file, then when you complete the first story you will probably not want to upload the messages for any other stories than the one you have completed. Therefore the `messaging/push` script allows you to specify a `-s` parameter to name just one file to be pushed as follows:\n    * `messaging/push -s DJ-1234`\n \nWhether you push one or all local working files, you will receive a message back from the API indicating whether or not the push was successful, and giving a summary of the changes you have made (for example, the number of new terms you have added).\n\n### Deleting keys\n#### `messaging/delete`\nDeletion of keys can be performed using the `messaging/delete` script.\n\n**Note:** this operation will delete the key and **all** translations and therefore should not be used to simply remove a translation which is not required.\n\nThe script can take two options:\n  * `-f` to specify a plain text file which contains the keys to be deleted. The keys should each be on a new line with no separator\n  * `-s` to specify the story number that the deletion relates to\n  * the script can also be called by passing a comma-separated list of keys to delete directly (optionally with the `-s` option)\n  * if the `-s` option is not specified, the user will be prompted to enter the story number\n  * if both `-s` and `-f` options are specified, any additional arguments specified will be ignored\n\nThe following are all valid usages:\n  * `messaging/delete -s DJ-1234 -f terms.txt` - will delete the keys in terms.txt\n  * `messaging/delete -f terms.txt` - will prompt for the story number and delete the keys in terms.txt\n  * `messaging/delete -s DJ-1234 ref.alternateLanguages.en, ref.countries.ISL - will delete the keys shown\n  * `messaging/delete ref.completeCountriesListing.IDN, calendarPicker.wednesday` - will prompt for the story number and delete the keys shown\n  \n### Developer Workflow\n  1. [Generate a local working file](#Generate-a-local-working-file).\n  2. [Work locally, by adding/updating messages in the local working file](#Working-locally).\n  3. Before pushing your code changes to master, [push your new/updated messages to the server](#Pushing-messages).\n  4. [Pull the updated messages](#Pulling-messages). You will most likely only need to pull the English messages. Since we are not adding messages to the master messages file, you should never get a conflict when you pull the messages or pull the customer project.\n  5. At this stage you may wish to verify that your new messages are present in the pulled messages.\n  6. Delete your local working message file(s) from your project. This is a simple file delete which can be done from IntelliJ or the command prompt.\n  7. Prepare your commit, which must include the pulled message file(s), and push to master in the usual way.\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at james@yobriefca.se or rnehru@deloitte.co.uk. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/","masterBranchProtection":false},{"name":"UKHomeOffice/passports-ticket-status","private":false,"url":"https://github.com/UKHomeOffice/passports-ticket-status","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-ticket-status\nTicket status monitor to join up gitlab, jenkins, and jira statuses into a single visualisation\n\n# Running\n\n`node .`\n\n# Configuration\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/keto-tokens","private":false,"url":"https://github.com/UKHomeOffice/keto-tokens","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"### **Keto Tokens**\n----\n\nIs a small utility service used to either produce or consume kubernetes registration tokens by the compute nodes. The service effectively discovers auto scaling group by filters, iterate the group membership and looks for compute nodes in need of registration token. The one-time are then applied the tags in the instance and consumed by the compute node.\n\n#### **Command Line Usage**\n\n```shell\n[jest@starfury keto-tokens]$ bin/keto-tokens --help\nNAME:\n   keto-tokens - is a client/server used to generate and consume kubelet registration tokens\n\nUSAGE:\n   keto-tokens [global options] command [command options] [arguments...]\n\nVERSION:\n   v0.0.1\n\nAUTHOR:\n   devops@digital.homeoffice.gov.uk\n\nCOMMANDS:\n     server   starts the service, generating the registration tokens for kubelets\n     client   retrieves a kubenetes registration tokens for compute kubelets\n     help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   -c NAME, --cloud NAME  specify the cloud provider (aws, gce) NAME (default: \"aws\") [$CLOUD_PROVIDER]\n   --verbose BOOL         switch on verbose logging mode BOOL [$VERBOSE]\n   --help, -h             show help\n   --version, -v          print the version\n```\n\n#### **IAM Permissions**\n\nFor the **server** component the following permissions are required;\n\n```JSON\n{\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"autoscaling:DescribeAutoScalingGroups\",\n                \"ec2:CreateTags\",\n                \"ec2:DescribeTags\",\n                \"ec2:DescribeInstances\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        }\n    ]\n}\n```\nAnd for the client, we need to be able to read our own tags and the permission to update them.\n```JSON\n{\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"ec2:CreateTags\",\n                \"ec2:DescribeTags\",\n                \"ec2:DescribeInstances\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        }\n    ]\n}\n```\nNote: the above it just a guideline, it would be preferable to lock permissions down to the specific instance - i.e. ensure the compute instance itself can describe it's own tags.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-cassandra-sysdig","private":false,"url":"https://github.com/UKHomeOffice/docker-cassandra-sysdig","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-1","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-1","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-2","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-2","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-3","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-3","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-4","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-4","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-5","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-5","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-6","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-6","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-7","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-7","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-8","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-8","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-9","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-9","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-10","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-10","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-11","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-11","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-12","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-12","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-13","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-13","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-14","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-14","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-15","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-15","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-16","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-16","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-17","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-17","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-18","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-18","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-19","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-19","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-20","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-20","license":null,"readme":"# Docker + Node \"Hello World\" Example\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-stubber","private":false,"url":"https://github.com/UKHomeOffice/passports-stubber","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-stubber\nCreate dynamic stub API services using a simple JSON configuration\n\n## Usage\n```\nconst stubber = require('hmpo-stubber');\n\napp.use('/stubs', stubber.middleware('./services.json', 'My Stub Server'));\n```\n\nstubber.middleware(services, [name], [basePath]);\n    services: Array, // array of Service config objects\n        (can be a filename, each service can be a filename)\n    name: String(Stub), // name of stub server for debug logging\n    basePath: String(./), // relative location when looking up filenames\n\n## Command line interface\n```\nhmpo-stubber [options] [services.json...]\n\n  -c, --config path::String  Use configuration from this file\n  -p, --port Number          Specify port to listen on - default: 3030\n  -m, --mount String         Base path to mount mocks on - default: /\n  -s, --scenario String      Specify the default scenario - default: default\n  -h, --help                 display help\n```\n\n### Command line config file\n    {\n        port: Number(3030), // port number\n        mount: String('/'), // base URL to mount the standalone server\n        scenario: String(), // default scenario\n        stubs: Array,       // array of service filenames or service lists, \n    }\n\n## Configuration\n\n### Service config object\n    {\n        name: String,        // service name for debug logging\n        method: String(GET), // method to mount in the stub server\n        url: String,         // url to mount in the stub server\n        scenarios: Object,   // object of named Scenario config objects\n            (can be a filename, each scenario can be a filename)\n        defaultScenario:\n            String(default), // specify the default scenario\n        sessionID: {         // locations to look for the session ID\n          header: String,\n          param: String,\n          body: String,\n          query: String\n        },\n        scenarioID: {        // locations to look for the scenario ID\n          header: String,\n          param: String,\n          body: String,\n          query: String\n        }\n    }\n\n### Scenario config object\n    {\n        responses: Array,     // array of Response config objects to step through on each call\n            (can be a filename, each response can be a filename, each response can be a function)\n        loop: Boolean(false), // loop around the response list instead of staying on the last response\n    }\n\n### Response config object\n    {\n        body: Object,          // body to send as JSON\n            (can be a filename or a function)\n        status: Number(200),   // status code to respond with\n        delay: Number(0),      // delay before sending the response\n            (in milliseconds)\n        repeat: Number(1),     // number of times to repeat this response\n        close: Boolean(false), // close the connection before sending a response\n    }\n\n## Exposed additions to the stub req object:\n```\nreq: {\n  stub{\n    stubtub: Stub,\n    service: Service,\n    scenario: Scenario,\n    response: Response,\n    session: {\n      services: {\n        [service.name]: {\n          scenario: Scenario,\n          scenarioID: String,\n          scenarioParam: String\n        }\n      }\n    }\n  }\n}\n```\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/IDAM","private":false,"url":"https://github.com/UKHomeOffice/IDAM","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/Hosting","private":false,"url":"https://github.com/UKHomeOffice/Hosting","license":null,"readme":"# Hosting\n\n\n![Preview](https://rawgit.com/UKHomeOffice/Hosting/master/Hosting-KPI.svg)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hillsborough-disclosure","private":false,"url":"https://github.com/UKHomeOffice/hillsborough-disclosure","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-systemd","private":false,"url":"https://github.com/UKHomeOffice/docker-systemd","license":null,"readme":"# docker-systemd\n\nBase image for running systemd in a container.\n\n### Example Usage\n\nCreate a sample Dockerfile.\n\n```Dockerfile\nFROM quay.io/ukhomeofficedigital/systemd\n\nRUN dnf upgrade -y && dnf install rkt -y && dnf clean all\n\nCMD [\"/usr/sbin/init\"]\n```\n\nBuild it.\n```\ndocker build -t rkt .\n```\n\nRut it.\n```\ndocker run -ti --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro rkt\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/jobdsl-jenkins-template","private":false,"url":"https://github.com/UKHomeOffice/jobdsl-jenkins-template","license":null,"readme":"# JenkinsJobs\n\n## Overview\n\n  This document explains how to generate multibranch pipeline jobs using the JobDSL plugin on a Jenkins instance which is configured to use the Keycloak authentication plugin in conjunction with Project-based Matrix Authorization Strategy  \n\n##  Prerequisites\n\n  See screenshots below for guidance. (Setup may appear slightly different on London Jenkins)\n\n1. Keycloak server setup\n\n2. Roles created on Keycloak which have the same name as their corresponding group on Jenkins. These roles should be assigned via role mappings to similarly named Keycloak groups within the Keycloak realm associated with Jenkins\n\n3. JobDSL, Keycloak Athentication and Project Based Matrix Authorization Strategy Jenkins Plugins installed\n\n![alt text](screenshots/keycloak_roles.png \"Keycloak Roles page\")\n\n![alt text](screenshots/keycloak_groups_rolemappings.png \"An example of a Keycloak group with available roles and applied role mappings\")\n\n![alt text](screenshots/jenkins_configureglobalsecurity.png \"Jenkins Configure Security page\")\n\n## Editing the Job DSL groovy script\n\nTo define each view and the projects within them change:\n\n```\n\ndef blueProjectsjobDefn = \t[\n\t\"Blue Projects\"\t:\t// Each Element is a Entry with Key being the project Name and Value being the Git URL\n\t[\n\t\t\"springboot-companies\"     \t: \t\"https://github.com/dogbonnahNB/springboot.git\",\n\n  ]\n]\n\ndef redProjectsjobDefn = \t[\n\t\"Red Projects\"\t:\t// Each Element is a Entry with Key being the project Name and Value being the Git URL\n\t[\n\t\t\"DavidIMS\"     \t: \t\"https://github.com/dogbonnahNB/DavidIMS.git\",\n\n\t]\n]\n\n```\n\nThis section of code defines the names for two views and the repositories within them. This should be changed to contain the correct view header name. More repositories can be added to the view as demonstrated below:\n\n```\n  [\n    \"DavidIMS\"     \t: \t\"https://github.com/dogbonnahNB/DavidIMS.git\",\n    \"fake-repo\"     :   \"https://github.com/nonexistantuser/fake-repo.git\"  \n  ]\n\n```\n\nTo set the permissions required for each group in relation to the jobs within a single view, you must create a `List` defining which permissions are required. For each group a `List` of permissions must be defined for each view\n\n```\n\ndef testBlueProjectsPermissionsList = ['hudson.model.Item.Delete']\ndef testRedProjectsPermissionsList = [ 'hudson.model.Item.Read', 'hudson.model.Item.Build', 'hudson.model.Item.Move', 'hudson.model.Item.Discover', ]\ndef devBlueProjectsPermissionsList = [ 'hudson.model.Item.Workspace', 'hudson.model.Item.Read', 'hudson.model.Item.Configure', 'hudson.model.Item.Delete', 'hudson.model.Item.Cancel', 'hudson.model.Item.Move', 'hudson.model.Item.Discover', 'hudson.model.Item.Create']\ndef devRedProjectsPermissionsList = [ 'hudson.model.Item.Workspace', 'hudson.model.Item.Read', 'hudson.model.Item.Build', 'hudson.model.Item.Configure', 'hudson.model.Item.Delete', 'hudson.model.Item.Cancel', 'hudson.model.Item.Move', 'hudson.model.Item.Discover', 'hudson.model.Item.Create']\n\n```\n\nHere we have 4 `Lists` - 2 per group. The example code above defines the following:\n* Testers group permissions for the Blue Projects View\n* Testers group permissions for the Red Projects View\n* Developers group permissions for the Blue Projects View\n* Developers group permissions for the Red Projects View\n\nFor each view, include an `if` block which will add all the defined permissions for a view onto the `PermissionsList`. Each `List` holding permissions for the view should have a `while` loop iterating over it. Give each list a relevant name and stick to a single naming convention to avoid confusion when referring to them later.  \n\n```\n\nif(projectType.equals('blueProject')) {\n\n  while(outerIndex < devBlueProjectsPermissionsList.size())\n  {\n    String tempString = devBlueProjectsPermissionsList.get(outerIndex)\n\n    permString = tempString + \":\" + \"developers\"\n    PermissionsList.add(permString)\n\n    outerIndex++\n  }\n\n  outerIndex = 0\n\n  while(outerIndex < testBlueProjectsPermissionsList.size())\n  {\n    String tempString = testBlueProjectsPermissionsList.get(outerIndex)\n\n    permString = tempString + \":\" + \"testers\"\n    PermissionsList.add(permString)\n\n    outerIndex++\n  }\n\n}\n\n```\n\nWhen iterating over a groups permissions for a view, within the `permString` definition, be sure to place the name of the group after the colon exactly as it appears in the Jenkins Authorization Section of Configure Global Security page.\n\nFinally an `each` block should be appended to the groovy script. This block builds each view and the project within it.\n\n```\n\nblueProjectsjobDefn.each { entry ->\n  println \"View  \" + entry.key\n\tentry.value.each { job ->\n        println \"Job  \" + job.key\n\t\tjobName = job.key;\n\t\tjobVCS = job.value;\n\t\tprojectType = 'blueProject';\n\t\tbuildMultiBranchJob(jobName, jobVCS, projectType)\n\t}\n  listView(\"${entry.key}\") {\n    jobs {\n      entry.value.each { job ->\n        name(\"${job.key}\")\n      }\n    }\n    columns {\n        status()\n        weather()\n        name()\n        lastSuccess()\n        lastFailure()\n        lastDuration()\n        buildButton()\n    }\n  }\n\n}\n\n```\nThe only parts of this block that ought to be different is the variable representing the view's name which in the below example is `blueProjectsjobDefn` and the `projectType` assignment which should be the same as what is defined in its corresponding if statement:\n\n```\nif(projectType.equals('blueProject'))\n\n```\n\n## Creating the Seed Job in Jenkins\n\nTo create the seed job create a new freestyle job in Jenkins and within the Source Code Management section insert the name of the repository containing your groovy script.\n\n![alt text](screenshots/jenkins_sourcecodemanagement.png \"Source Code Management section\")\n\nScroll down the page to the Build section and select Add build step > Process Job DSLs\n\n![alt text](screenshots/jenkins_build.png \"Build section\")\n\nIf configured correctly your seed job should run successfully and generate views with the defined projects within them.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/dockerfile-linting","private":false,"url":"https://github.com/UKHomeOffice/dockerfile-linting","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-bdd-base","private":false,"url":"https://github.com/UKHomeOffice/pttg-bdd-base","license":null,"readme":"# pttg-bdd-base\nBase docker image for node with chrome headless\n\nIt will use the specifed version of node and the latest version of chrome","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-ip-stub","private":false,"url":"https://github.com/UKHomeOffice/pttg-ip-stub","license":null,"readme":"# pttg-ip-stub\nStub replication HMRC HAL interface\n\nSee [HMRC documentation](http://hmrc-docs.notprod.homeoffice.gov.uk/public/api-docs/index.html)","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-ip-stub","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-ip-stub","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/HO-blogs","private":false,"url":"https://github.com/UKHomeOffice/HO-blogs","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# HO-blogs\nA repo for Home Office blogs\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/weprotect","private":false,"url":"https://github.com/UKHomeOffice/weprotect","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-ip-hmrc","private":false,"url":"https://github.com/UKHomeOffice/pttg-ip-hmrc","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-openjdk8-openssl","private":false,"url":"https://github.com/UKHomeOffice/docker-openjdk8-openssl","license":null,"readme":"# docker-openjdk8-openssl\n\nBased off of the latest apline jdk8 image with openssl\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-tf-subnet","private":false,"url":"https://github.com/UKHomeOffice/acp-tf-subnet","license":null,"readme":"Module usage:\n\n      module \"github.com/UKHomeOffice/acp-tf-pool\" {\n        name            = \"ingress\"\n        environment     = \"dev\"            # by default both Name and Env is added to the tags\n        tags            = {\n          Role = \"ingress\"\n        }\n        tables  = \"${module.infra.routing_tables}\"\n        zones   = [ a_list_zones ]\n        # You can specify the CIDR either by subnet_cidr or passing the var.network_mask and var.network_offtset which uses cidrsubnet\n        subnet_cidr     = \"10.100.0.0/24\"\n        # or\n        network_mask    = 8                # assuming vpc 10.100/16 this would give 10.100.20.0/24\n        network_offset  = 20               # will use the cidrsubnet function to calculate or use cidr\n      }\n\n\n\n## Inputs\n\n| Name | Description | Default | Required |\n|------|-------------|:-----:|:-----:|\n| default_table | The default routing table, which overrides the per availability zones | `` | no |\n| dns_zone | The DNS zone for the kubernetes cluster, due because the tools require the subnet is tagged with it | - | yes |\n| environment | An envionment name for the subnets i.e. prod, dev, ci etc | - | yes |\n| name | A descriptive name for this subnets | - | yes |\n| network_mask | The network mask which is applied when creating the subnets | `8` | no |\n| network_offset | A network offset to generate the subnets from i.e. if mask = 8 and offset 100, it will create 10.40.10{1,2,3} | `` | no |\n| subnet_cidr | The subnet cidr which you are creating, you can use this or the cidrsubnet() calculated by var.network_mask and var.network_offset | `` | no |\n| tables | A map of availability zone to routing table id, so we can association subnets | `<map>` | no |\n| tags | A map of cloud tags which added to the subnets, note Name, Env and KubernetesCluster are added by default | `<map>` | no |\n| vpc_cidr | The VPC network cidr for this cluster, required if you are using var.network_mask and var.network_offset | `` | no |\n| vpc_id | The VPC id where you want to create the cluster | - | yes |\n| zones | A list of availability zones where you want to build the subnets | - | yes |\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| cidrs |  |\n| subnets |  |\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-tf-elb","private":false,"url":"https://github.com/UKHomeOffice/acp-tf-elb","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-deploy","private":false,"url":"https://github.com/UKHomeOffice/lev-deploy","license":null,"readme":"LEV Deployment Image\n====================\n\nA docker image used for deploying the Life Event Verification service.\n\nIn the future this may form the basis of a generic Kubernetes deployment image.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-ip-hmrc","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-ip-hmrc","license":null,"readme":"# kube-pttg-ip-hmrc\nKubernetes config for Income Proving hmrc service \n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-tf-rds","private":false,"url":"https://github.com/UKHomeOffice/acp-tf-rds","license":null,"readme":"Module usage:\n\n     module \"rds\" {\n        source              = \"git::https://github.com/UKHomeOffice/acp-tf-rds?ref=master\"\n\n        name                = \"fake\"\n        allocated_storage   = \"20\"\n        cidr_blocks         = [ \"${values(module.compute.cidrs)}\" ]\n        database_name       = \"keycloak\"\n        database_password   = \"password\"\n        database_port       = \"3306\"\n        database_user       = \"root\"\n        db_parameter_family = \"default.mysql5.6\"\n        dns_zone            = \"${var.dns_zone}\"\n        engine_type         = \"MariaDB\"\n        engine_version      = \"10.1.19\"\n        environment         = \"${var.environment}\"\n        instance_class      =  \"db.t2.medium\"\n        db_parameters       = [\n          {\n            name  = \"character_set_server\"\n            value = \"utf8\"\n          },\n          {\n            name  = \"character_set_client\"\n            value = \"utf8\"\n          }\n        ]\n      }\n\n\n\n## Inputs\n\n| Name | Description | Default | Required |\n|------|-------------|:-----:|:-----:|\n| allocated_storage | The allocated storage in GBs for the RDS | - | yes |\n| allow_major_version_upgrade | Allow major version upgrade | `false` | no |\n| auto_minor_version_upgrade | Allow automated minor version upgrade | `true` | no |\n| backup_retention_period | How long will we retain backups | `0` | no |\n| backup_window | When AWS can run snapshot, can't overlap with maintenance window | `22:00-03:00` | no |\n| cidr_blocks | A list of network cidr block which are permitted acccess | `<list>` | no |\n| copy_tags_to_snapshot | Copy tags from DB to a snapshot | `true` | no |\n| database_name | The name of the database to create | - | yes |\n| database_password | The default password for the specified user for RDS | - | yes |\n| database_port | The database port being used by the RDS instance, i.e. 3306, 5342 | - | yes |\n| database_user | The username for the RDS to be created | `root` | no |\n| db_parameter_family | Parameter group, depends on DB engine used | - | yes |\n| db_parameters | A map of database parameters for the RDS instance | `<list>` | no |\n| dns_name | The dns name added the dns zone, else defaults to var.name | `` | no |\n| dns_ttl | The dns record type for the RDS instance, defaults to CNAME | `300` | no |\n| dns_type | The dns record type for the RDS instance, defaults to CNAME | `CNAME` | no |\n| dns_zone | The required route53 domain name we are added the dns entry to i.e. example.com | - | yes |\n| engine_type | Database engine type | - | yes |\n| engine_version | Database engine version, depends on engine type | - | yes |\n| environment | The environment the RDS is running in i.e. dev, prod etc | - | yes |\n| instance_class | Class of RDS instance | `db.t2.medium` | no |\n| is_multi_az | Set to true on production | `false` | no |\n| name | A descriptive name for the RDS instance | - | yes |\n| skip_final_snapshot | If true (default), no snapshot will be made before deleting DB | `true` | no |\n| storage_encrypted | Indicates you want the underlining storage to be encrypted | `true` | no |\n| storage_type | One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). | `standard` | no |\n| subnet_role | A role used to filter out which subnets the RDS should reside, defaults to Role=compute | `compute` | no |\n| tags | A map of tags to add to all resources | `<map>` | no |\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-service-experiment","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-service-experiment","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-service","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-service","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# pttg-fs-service\nProving Things To Government Financial Status component\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-tf-peering","private":false,"url":"https://github.com/UKHomeOffice/acp-tf-peering","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pontus-redaction","private":false,"url":"https://github.com/UKHomeOffice/pontus-redaction","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Pontus Redaction and Filtering layer\n\nNOTE: The Apache license was chosen, as this is derived from an Apache project.\n\nThis is the redaction layer project; it gives fine granular Application access control and role-based access control down to a cell level based on temporal credentials.  \nIt currently works on HBASE, Phoenix, Solr, and bits of Elastic Search (5.x).  It depends on HDFS, Zookeeper, and Kafka.\n\n## Architecture\nThis is the redaction layer project for big data applications.  \n\n\n\n## Setup Instructions\nHere are a few useful setup instructions for the various components for the standalone Sandbox:\n\n\n[Creation of a Sandbox in Azure](Creation-of-a-Sandbox-in-Azure.md)\n\n[Kerberization of Sandbox](Kerberization-of-Sandbox.md)\n\n[Kerberization of Windows](Kerberization-of-Windows.md)\n\n[Buiding the redaction layer in the Sandbox](Buiding-the-redaction-layer-in-the-Sandbox.md)\n\n[Hbase](Hbase.md)\n\n[Kafka](Kafka.md)\n\n[Solr](Solr.md)\n\n[Elastic](Elastic.md)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pontus-logging-framework","private":false,"url":"https://github.com/UKHomeOffice/pontus-logging-framework","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pontus-keycloak-knox","private":false,"url":"https://github.com/UKHomeOffice/pontus-keycloak-knox","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Pontus Knox and Keycloak \n\n\nThis is the project with the knox plugins required to talk to keycloak. \n\nThe Apache license was chosen, as this is derived from an Apache project\n\n# Here are instructions on how to set up the Pontus Knox provider and service:\n\n## Create the symbolic links:\n```\ncd /usr/hdp/current/knox-server/lib\nln -s /opt/pontus/gateway-service-pontus-0.9.0.jar\nln -s /opt/pontus/gateway-provider-security-pontus-jwt-0.9.0.jar\nln -s /opt/pontus/pontus-redaction-common-0.0.1-SNAPSHOT.jar\n```\n\n## Create the service definition:\n```\ncd /usr/hdp/current/knox-server/data/services\nmkdir -p pontus/0.0.1\ncd /usr/hdp/current/knox-server/data/services/pontus/0.0.1\n\ntee /usr/hdp/current/knox-server/data/services/pontus/0.0.1/service.xml <<'EOF'\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n-->\n<service role=\"Pontus\" name=\"pontus\" version=\"0.0.1\">\n    <routes>\n        <route path=\"/pontus/**\"/>\n    </routes>\n    <dispatch classname=\"org.apache.hadoop.gateway.pontus.PontusDispatch\" ha-classname=\"org.apache.hadoop.gateway.pontus.PontusHaDispatch\"/>\n</service>\nEOF\n\n\ntee /usr/hdp/current/knox-server/data/services/pontus/0.0.1/rewrite.xml <<'EOF'\n\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n-->\n<rules>\n    <rule dir=\"IN\" name=\"Pontus/pontus/inbound\" pattern=\"*://*:*/**/pontus\">\n        <rewrite template=\"{$serviceUrl[Pontus]}\"/>\n    </rule>\n</rules>\nEOF\n\n```\n\n## Create the topology configuration\n``` \ncd /usr/hdp/current/knox-server/conf/topologies\ntee /usr/hdp/current/knox-server/conf/topologies/nifi.xml <<'EOF'\n<topology>\n  <gateway>\n      <provider>\n          <role>authentication</role>\n          <name>ShiroProvider</name>\n          <enabled>false</enabled>\n      </provider>\n\n      <provider>\n          <role>identity-assertion</role>\n          <name>Default</name>\n          <enabled>false</enabled>\n      </provider>\n\n      <provider>\n          <role>authorization</role>\n          <name>AclsAuthz</name>\n          <enabled>false</enabled>\n      </provider>\n      <provider>\n          <role>webappsec</role>\n          <name>WebAppSec</name>\n          <enabled>false</enabled>\n      </provider>\n      <provider>\n          <role>hostmap</role>\n          <name>static</name>\n          <enabled>false</enabled>\n      </provider>\n      <provider>\n          <role>PontusJWT</role>\n          <name>process</name>\n          <enabled>true</enabled>\n      </provider>\n  </gateway>\n\n  <service>\n      <role>Pontus</role>\n      <!-- url>https://localhost:22222/nash_query</url -->\n      <url>http://localhost:22221/nash_query</url>\n  </service>\n</topology>\nEOF\n\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-ip-hmrc-access-code","private":false,"url":"https://github.com/UKHomeOffice/pttg-ip-hmrc-access-code","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# pttg-ip-hmrc-access-code\nProving Things To Government component to produce the current HMRC access code\n\nIncome Proving HMRC Access Code API\n=\n\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/pttg-ip-hmrc-access-code/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/pttg-ip-hmrc-access-code)\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/pttg-ip-hmrc-access-code/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/pttg-ip-hmrc-access-code)\n\nOverview\n-\n\nThis is the Income Proving HMRC API. Interfaces with the HMRC to retrieve authentication token. \n\nCurrently the only client of this service is [pttg-ip-hmrc].\n\n## Find Us\n\n* [GitHub]\n* [Quay.io]\n\n### Technical Notes\n\nThe API is implemented using Spring Boot and exposes a RESTFul interface.\n\n* /access\n\n### Infrastructure\n\nThis service is packaged as a Docker image and stored on [Quay.io]\n\nThis service currently runs in AWS and has an associated [kubernetes configuration]\n\n## Building\n\nThis service is built using Gradle on Drone using [Drone yaml]\n\n## Versioning\n\nFor the versions available, see the [tags on this repository].\n\n## Authors\n\nSee the list of [contributors] who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENCE.md]\nfile for details.\n\n\n\n[contributors]:                     https://github.com/UKHomeOffice/pttg-ip-hmrc-access-code/graphs/contributors\n[pttg-ip-hmrc]:                     https://github.com/UKHomeOffice/pttg-ip-hmrc\n[Quay.io]:                          https://quay.io/repository/ukhomeofficedigital/pttg-ip-hmrc-access-code\n[kubernetes configuration]:         https://github.com/UKHomeOffice/kube-pttg-ip-hmrc-access-code\n[Drone yaml]:                       .drone.yml\n[tags on this repository]:          https://github.com/UKHomeOffice/pttg-ip-hmrc-access-code/tags\n[LICENCE.md]:                       LICENCE.md\n[GitHub]:                           https://github.com/UKHomeOffice/pttg-ip-hmrc-access-code\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hub-whereabouts","private":false,"url":"https://github.com/UKHomeOffice/hub-whereabouts","license":null,"readme":"# hub-whereabouts","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-sjl","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-sjl","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-as","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-as","license":null,"readme":"# acp-hello-world-as\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-tb","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-tb","license":null,"readme":"[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/tasharn-repo/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/tasharn-repo)\n---\n# Hello World!\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-hello-world-vl","private":false,"url":"https://github.com/UKHomeOffice/acp-hello-world-vl","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/addons-kube-auth","private":false,"url":"https://github.com/UKHomeOffice/addons-kube-auth","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/acp-tf-s3","private":false,"url":"https://github.com/UKHomeOffice/acp-tf-s3","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/https---github.com-UKHomeOffice-digital-service-standard","private":false,"url":"https://github.com/UKHomeOffice/https---github.com-UKHomeOffice-digital-service-standard","license":null,"readme":"## Gov static site template\n\nThis is a forkable repo for making a quick static website that looks like GOV.UK. Have a look at this site here: https://ctdesign.github.io/static-gov-website/\n\nIts for quick and dirty prototyping, powered by markdown. You _can_ run it locally but I find it quickest to edit it all via the Github website interface. Makes collaborating on content really easy.\n\nIt's a modified version of one of the default Github pages themes with some custom CSS and theme files to make it look like GOV.UK.\n\n### Instructions\n\n1. First fork this repo\n2. Then go to Settings\n3. Scroll down to the Github Pages section\n4. Choose a source - choose 'master branch' if you're not sure\n5. Click the 'Change theme' button and choose the Cayman theme.\n6. That's it. Your site will be available to the public at: https://yourusername.github.io/your-repo-name/\n\n### Using github pages\n\nYou can use the [editor on GitHub](https://github.com/ctdesign/static-test/edit/master/README.md) to maintain and preview the content for your website in Markdown files.\n\nWhenever you commit to this repository, GitHub Pages will run [Jekyll](https://jekyllrb.com/) to rebuild the pages in your site, from the content in your Markdown files.\n\n### Markdown\n\nMarkdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for\n\n```markdown\nSyntax highlighted code block\n\n# Header 1\n## Header 2\n### Header 3\n\n- Bulleted\n- List\n\n1. Numbered\n2. List\n\n**Bold** and _Italic_ and `Code` text\n\n[Link](url) and ![Image](src)\n```\n\nFor more details see [GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/).\n\n### Jekyll Themes\n\nYour Pages site will use the layout and styles from the Jekyll theme you have selected in your [repository settings](https://github.com/ctdesign/static-test/settings). The name of this theme is saved in the Jekyll `_config.yml` configuration file.\n\n### Support or Contact\n\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/categories/github-pages-basics/) or [contact support](https://github.com/contact) and we’ll help you sort it out.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/digital-service-standard","private":false,"url":"https://github.com/UKHomeOffice/digital-service-standard","license":null,"readme":"## Gov static site template\n\nThis is a forkable repo for making a quick static website that looks like GOV.UK. Have a look at this site here: https://ctdesign.github.io/static-gov-website/\n\nIts for quick and dirty prototyping, powered by markdown. You _can_ run it locally but I find it quickest to edit it all via the Github website interface. Makes collaborating on content really easy.\n\nIt's a modified version of one of the default Github pages themes with some custom CSS and theme files to make it look like GOV.UK.\n\n### Instructions\n\n1. First fork this repo\n2. Then go to Settings\n3. Scroll down to the Github Pages section\n4. Choose a source - choose 'master branch' if you're not sure\n5. Click the 'Change theme' button and choose the Cayman theme.\n6. That's it. Your site will be available to the public at: https://yourusername.github.io/your-repo-name/\n\n### Using github pages\n\nYou can use the [editor on GitHub](https://github.com/ctdesign/static-test/edit/master/README.md) to maintain and preview the content for your website in Markdown files.\n\nWhenever you commit to this repository, GitHub Pages will run [Jekyll](https://jekyllrb.com/) to rebuild the pages in your site, from the content in your Markdown files.\n\n### Markdown\n\nMarkdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for\n\n```markdown\nSyntax highlighted code block\n\n# Header 1\n## Header 2\n### Header 3\n\n- Bulleted\n- List\n\n1. Numbered\n2. List\n\n**Bold** and _Italic_ and `Code` text\n\n[Link](url) and ![Image](src)\n```\n\nFor more details see [GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/).\n\n### Jekyll Themes\n\nYour Pages site will use the layout and styles from the Jekyll theme you have selected in your [repository settings](https://github.com/ctdesign/static-test/settings). The name of this theme is saved in the Jekyll `_config.yml` configuration file.\n\n### Support or Contact\n\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/categories/github-pages-basics/) or [contact support](https://github.com/contact) and we’ll help you sort it out.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-maintenance","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-maintenance","license":null,"readme":"# kube-pttg-maintenance","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-maintenance","private":false,"url":"https://github.com/UKHomeOffice/pttg-maintenance","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Proving Things static maintenance page\n=\n\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/pttg-maintenance/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/pttg-maintenance)\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/pttg-maintenance/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/pttg-maintenance)\n\nOverview\n-\n\nProvides a maintenance page that can be displayed after an ingress update\n\n## Find Us\n\n* [GitHub]\n* [Quay.io]\n\n### Technical Notes\n\nThis container provides a mount for nginx to serve static html content\n\nTo use this page traffic should be routed from the frontend to this service rather than the UI service.\n\nAs an example [pttg-ip-fm-ui ingress config] can be switched to [pttg-ip-fm-ui ingress maintenance config]\n\n\n\n### Infrastructure\n\nThis service is packaged as a Docker image and stored on [Quay.io]\n\nThis service currently runs in AWS and has an associated [kubernetes configuration]\n\n## Building\n\nThis service is built using Gradle on Drone using [Drone yaml]\n\n## Versioning\n\nFor the versions available, see the [tags on this repository].\n\n## Authors\n\nSee the list of [contributors] who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENCE.md]\nfile for details.\n\n\n\n[contributors]:                     https://github.com/UKHomeOffice/pttg-maintenance/graphs/contributors\n[Quay.io]:                          https://quay.io/repository/ukhomeofficedigital/pttg-maintenance\n[kubernetes configuration]:         https://github.com/UKHomeOffice/kube-pttg-maintenance\n[Drone yaml]:                       .drone.yml\n[tags on this repository]:          https://github.com/UKHomeOffice/pttg-maintenance/tags\n[LICENCE.md]:                       LICENCE.md\n[GitHub]:                           https://github.com/UKHomeOffice/pttg-maintenance\n[pttg-ip-fm-ui ingress config]:     https://github.com/UKHomeOffice/kube-pttg-ip-fm-ui/blob/master/kd/ingress.yaml\n[pttg-ip-fm-ui ingress maintenance config]: https://github.com/UKHomeOffice/kube-pttg-ip-fm-ui/blob/master/kd/ingress-maintenance.yaml","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-docker-nginx-proxy","private":false,"url":"https://github.com/UKHomeOffice/pttg-docker-nginx-proxy","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-postgres","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-postgres","license":null,"readme":"# kube-pttg-postgres","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-postgres","private":false,"url":"https://github.com/UKHomeOffice/pttg-postgres","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# pttg-postgres\n\nShort lived pod to provide idempotent creation of the schema and pttg user for postgres","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/HSM","private":false,"url":"https://github.com/UKHomeOffice/HSM","license":null,"readme":"\n# draft\n\n\n# HSM\nGuidelines and sign-posting on HSM products \n\n## Intro\n\nThis is a simple sign-posting page on common features and products for information and guidance.\n\n## basic requirements \n\nin deciding on a HSM product, projects tend to make choice based on HSM product ability to address\n\nthe following;\n\n- on prem\n- remote access\n- multi-user Roles\n- Relevant ISO or other standards \n- Availabilty of software emulation\n\n## popular products \n\n it will very much  depend on what you are looking for but in your search you will come accross \n \n - Fujitsu Gemalto\n \n \n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-symmetricds","private":false,"url":"https://github.com/UKHomeOffice/docker-symmetricds","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/service-api-docs","private":false,"url":"https://github.com/UKHomeOffice/service-api-docs","license":null,"readme":"  \n# Intro\n\nThis page is a summary of what to consider when documenting business services and corresponding APIs. it is not meant to be a comprehensive resource but more of  a  check list  to aid initial discussions on how to go about documenting services and APIs. As usual there are many tools out there and what works for you will very much depend on what's important to you. \n\nTo achieve good interfaces,  business services must be described in details first (unless you are replacing existing interfaces which hopefully means you already have all documentation you need). Good business service description will make the task of writing the code a lot easier and good API documentation will help your customers to easily consume your interfaces.\n \n\n# Business service description \n\nIt will very much depend on in-house style but it is worth including the following minimum set in any service description.\n  \n | Section | Descripton |\n |---------|------------|\n |Service name   | The name of the customer facing service as known to your customer.|\n | Service description | A basic description of what the service does, and what the deliverables and outcomes are.|\n | Service type   | Depends on the definition and structure known to you to build a service catalogue.|\n | Supporting services |   List any supporting services.|\n | Service owner(s) |A service owner is responsible for managing one or more services throughout their entire lifecycle|\n | Business impact| Describe of what would be the impact of not having this service available.|\n | Service level agreement| Agree on acceptable down time if any |\n | Comments | Any other text required to build the API.|\n  \n  \n # Good API description\n  \n There are three aspects to consider when documenting an API\n \n #### What is for\n \n This includes \n \n - A clear description of what the PAI call does\n - Detailed examples\n - list of parameters used on the call and their types and format\n - A sample response, including media type body, errors and warning\n \n#### How to use \n\n - Code examples for multiple languages\n - SDK examples (if SDKs are provided) showing how to access the resource/method utilising the SDK for their language\n - Interactive experiences (API Console) to try/test API calls \n - FAQs\n \n #### Support\n \n - Links to additional resources (other examples, blogs, etc.)\n - Comments section where users can share/discuss code\n - Other support resources (forums, contact forms, etc.)\n \n \n# Tooling\n\nThere are a number of tools to document service and API descriptions. Before making a decision, you need to consider your minimum must have features. Below is a short list to get you started.\n\nBasic tooling requirements are:\n\n- Re-use of currently avaible tools\n- User friendly and easy to learn\n- Easy to deploy and maintain\n- Good presenation \n\n\n# To do \n\n- Include links to resources\n- Expand on tooling\n\n\n\n\n \n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/cfssl-sidekick","private":false,"url":"https://github.com/UKHomeOffice/cfssl-sidekick","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-jenkins","private":false,"url":"https://github.com/UKHomeOffice/docker-jenkins","license":null,"readme":"# docker-jenkins","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ingress-admission","private":false,"url":"https://github.com/UKHomeOffice/ingress-admission","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-rps-ui","private":false,"url":"https://github.com/UKHomeOffice/pttg-rps-ui","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-rps-customer-ui","private":false,"url":"https://github.com/UKHomeOffice/pttg-rps-customer-ui","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Income Proving Family Migration UI\n==================================\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/pttg-rps-customer-ui/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/pttg-rps-customer-ui)\n\nOverview\n-\nThis is a proof of concept and doesn't not relfect the final rules for residency\n\nThis is the Residency HMRC Customer UI. Interfaces with the HMRC via [pttg-rps-api] to retrieve incomes and employments which calculates if a migrant has sufficient evidence for residency in the UK. \n\nThis UI allows migrant to check their own status. \n\n## Find Us\n\n* [GitHub]\n* [Quay.io]\n\n### Technical Notes\n\nThe UI is implemented using HOF\n\n\n### Infrastructure\n\nThis service is packaged as a Docker image and stored on [Quay.io]\n\nThis service currently runs in AWS and has an associated [kubernetes configuration]\n\n## Building\n\nThis service is built using Gradle on Drone using [Drone yaml]\n\n## Versioning\n\nFor the versions available, see the [tags on this repository].\n\n## Authors\n\nSee the list of [contributors] who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENCE.md]\nfile for details.\n\n\n\n[contributors]:                     https://github.com/UKHomeOffice/pttg-rps-customer-ui/graphs/contributors\n[pttg-rps-api]:                      https://github.com/UKHomeOffice/pttg-rps-api\n[Quay.io]:                          https://quay.io/repository/ukhomeofficedigital/pttg-rps-customer-ui\n[kubernetes configuration]:         https://github.com/UKHomeOffice/kube-pttg-rps-customer-ui\n[Drone yaml]:                       .drone.yml\n[tags on this repository]:          https://github.com/UKHomeOffice/pttg-rps-customer-ui/tags\n[LICENCE.md]:                       LICENCE.md\n[GitHub]:                           https://github.com/UKHomeOffice/pttg-rps-customer-ui\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-rps-api","private":false,"url":"https://github.com/UKHomeOffice/pttg-rps-api","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-rps-ui","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-rps-ui","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/seccomp-config","private":false,"url":"https://github.com/UKHomeOffice/seccomp-config","license":null,"readme":"# seccomp-config\n\nThis reposoitory is for updating seccomp configuration on all kubernetes nodes. It does this by running a daemonset on kubernetes which deploys a pod that mounts the seccomp kubelet directory. Feel free to make any issues or pull requests and I'll get arround to responding.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-rps-customer-ui","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-rps-customer-ui","license":null,"readme":"# kube-pttg-rps-customer-ui\nKubernetes configuration for pttg-rps-customer-ui\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-rps-api","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-rps-api","license":null,"readme":"## Proving Things - Residence API -  Kubernetes Resources\n\n### Kubernetes Deployment\n\nThis is the kubernetes deployment files for Proving Things Income API\n\nAs it stands this is using [KB8OR for deployments](https://github.com/UKHomeOffice/kb8or)\n\nrun deployment\n\n\t./scripts/deploy -e dev ./pttg-rps-api.yaml\n","travis":false,"contributing":false,"masterBranchProtection":false}]