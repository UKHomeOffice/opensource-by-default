[{"name":"UKHomeOffice/swappr","private":false,"url":"https://github.com/UKHomeOffice/swappr","license":null,"readme":"swappr\n======\n\nClient / Server app for managing shift swaps\n\n## Running the app\n\nSwappr uses MySQL. Before running for the first time, ensure the database and user exist and have appropriate \npermissions. E.g. by executing the contents of [schema.sql](web/src/db/schema.sql).\n\nStart the MySQL server:\n\n```\nmysql.server start\n```\n\nThen set up the db:\n\n```\nmysql -u root < schema.sql\n```\n\nand run the seed:\n\n```\nmysql -u root < seed.sql\n```\n\n## Smoke tests\n### Requirements\nInstall [PhantomJS](http://phantomjs.org/download.html) eg. using Homebrew on Mac:\n\n```\nbrew update && brew install phantomjs\n```\n\nNavigate to /integration/smoke_tests and run\n\n```\nbundle install\n```\n\n### Running\nTo run the tests locally, ie localhost:8080, use:\n\n```\nrake smoke_test\n```\n\nThis will reset the database and seed it with 2 users, bill and ben, before running the test suite.\n\nTo run the test suite against another instance of the app, pass the hostname of that server as an argument:\n\n```\nrake \"smoke_test['http://www.google.com']\"\n```\n\n### Writing\nThe tests are written in [Capybara](https://github.com/jnicklas/capybara).\n\nShared code for steps is in step_definitions/common_steps.rb\n\n### Debugging\n\nTo aid debugging of tests, open integration/smoke_tests/spec/spec_helper.rb and set\n\n```\nCapybara.default_driver = :selenium\n```\n\nThis will run the tests in Firefox by default so you can see what's going on.\n\nTo set a breakpoint in a test, insert this line into your step definition:\n\n```\nbinding.pry\n```\n\nThis will pause execution in the command prompt and let you examine variables, run Capybara queries etc. You can also step through the test using next / continue. See [pry-nav](https://github.com/nixme/pry-nav)","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/cts-pentaho","private":false,"url":"https://github.com/UKHomeOffice/cts-pentaho","license":null,"readme":"cts-alfresco-tomcat\n===================\n\nAlfresco tailored tomcat\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vcloud-start_stop","private":false,"url":"https://github.com/UKHomeOffice/vcloud-start_stop","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Vcloud::StartStop\n\nTODO: Write a gem description\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n    gem 'vcloud-start_stop'\n\nAnd then execute:\n\n    $ bundle\n\nOr install it yourself as:\n\n    $ gem install vcloud-start_stop\n\n## Usage\n\nTODO: Write usage instructions here\n\n## Contributing\n\n1. Fork it ( https://github.com/[my-github-username]/vcloud-start_stop/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/puppet-runstatus","private":false,"url":"https://github.com/UKHomeOffice/puppet-runstatus","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# Puppet::Runstatus\n\nTODO: Write a gem description\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n```ruby\ngem 'puppet-runstatus'\n```\n\nAnd then execute:\n\n    $ bundle\n\nOr install it yourself as:\n\n    $ gem install puppet-runstatus\n\n## Usage\n\nTODO: Write usage instructions here\n\n## Contributing\n\n1. Fork it ( https://github.com/[my-github-username]/puppet-runstatus/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/adegnanCfTest-","private":false,"url":"https://github.com/UKHomeOffice/adegnanCfTest-","license":null,"readme":"# adegnanCfTest-\nCloud Foundry Testing\n\n## Getting started \n\nAssuming you've already received the email with your credentials in it, you'll want to install the cloudfoundry-cli package; This can be found here https://github.com/cloudfoundry/cli, there are pre-compiled binaries if you scroll down slightly.  Following that, as suggested, login and change your password using the following two commands:-\n\n- cf login\n- cf passwd\n\n## starting an app\n\n- will fill this out later\n\n## Notes on Crippledness\n\nI don't have permission to do the following commands\n- cf create-service-broker -  This, I believe, is how we add more services, We'd need this if we want to actually give people the ability to make their own services\n\n\n## Questions\n\nCF is a PaaS system; it is unclear that we'd get any access to the infrastructure beyond what the APIs give us access to.  \n\n### Security\n\nWe need to know whether our infrastructure is using shared resources and how this affects our security.  Follow up questions may be needed depending on these answers.\n\n- What platform is CF running on?  \n- Is the CF software shared between clients?\n- Are the physical nodes shared?\n- Are the underlying virtual machines shared?\n- Is the compute platform shared?\n- Are any of the storage platforms shared?\n- Are any network components shared?\n- Where is our entry point to said network?\n- Do we have any kind of separation on the network layer?\n- Where do our external SSL connections terminate?\n- Are there any shared resources beyond this point?\n\nWe need to ask any questions about the underlying platform.  This is probably something VMware related and thus it could be useful to ask the similar questions we'd ask regarding the IaaS platform provided by skyscape:\n\n- What are you running on the underlying platform\n- Is there a dedicated security team working on the platform?\n- What hardware is the platform running on.  Switches, routers, servers, etc?\n- How is the underlying platform components patched?\n- How and what is monitored on the platform?\n\nWe need to ask any CF specific questions, particularly on how this pertains to any shared resources which have been disclosed above.\n\n- What's the process on packaging and patch CF itself?\n- How are processed isolated?  Is it possible to isolate at VM level?  CGroup?  User?\n- How does CF persist data?\n- How are process created, destroyed, etc?\n- How are the router end points protected?  How is the router itself protected?\n- Does NATS communication have any encryption?  Does it need it.\n- Are services bound over SSL or isolated someway?\n- Is the blobstore locked down?\n- Lucid is out of support in April; What's happening here?\n- Are we using the recommended VLAN setup from CF docs?  Unsure how this protects from internal shared-server threats?  \n- If VMs themselves are VLANd, are they shared?  If so, what exactly stops an app from snooping the network?\n- How is the BOSH firewall manifest setup?\n- How to connections between host and containers work? Documentation is vague.  http://docs.cloudfoundry.org/concepts/security.html\n- What kind of SSL is used by BOSH, UAA and the router connections?\n- Is BOSH data encrypted?  CF doesn't do this by default.\n- Who has BOSH access?\n- How does the Cloud Controller lock down access?\n- What stops me from attempting to escaping my container when using a ruby command line app?  \n- Is the jumpbox secure?\n- Are VLANS configured as stated.  Does this drill down to container level?  How are these distrubuted, so only nodes needing access to the VLAN get access, or do all nodes get access to all VLANs?\n- What's stopping promiscious interfaces?\n- Application and Datastores connections are over SSL?\n\n\n### Scalability\n\nIt's important to know how CF is scaled in general and in this specific install. http://docs.cloudfoundry.org/concepts/high-availability.html\n\n- How many AZs are there and in how many datacentres?\n- What will our quotas be?\n- We actually going to get org, space, roles and permission control?\n- How exactly are the service-brokers setup?  Do they support HA?  How do we do this?\n\n\n### Features\n\nWe need to have an outline on what the platform offers and where the manual tasks lie.  Specifically I want to figure out which tasks will require us to log a ticket and wait.\n\n- Docs suggests that you have to terminate SSL outwith the platform.  Is this still the case?  If so, how do we setup our own SSLs?\n- How does it handle new versions of an app deploy.  Does it achieve zero-downtime?\n- How do we manage performance?  Does it have a profiler?  \n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/govuk-template-compiler","private":false,"url":"https://github.com/UKHomeOffice/govuk-template-compiler","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-govuk-template\n\nCompiles govuk mustache template into a more usable format and provide middleware for use in apps.\n\nExisting [govuk mustache template](https://www.npmjs.com/package/govuk_template_mustache) has simple mustache placeholders for content sections, which necessitates a two step compile process where sections are compiled individually and then again into the parent template.\n\nCompiling the template to replace these placeholders with variables allows for templates to implement the govuk template as a parent partial.\n\n## Example\n\n```\n{{< govuk-template}}\n\n    {{$main}}\n        <h1>Page Content</h1>\n    {{/main}}\n\n{{/ govuk-template}}\n```\n\n## Installation\n\n```\nnpm install [--save] hmpo-govuk-template\n```\n\n## Usage\n\nThe compilation of the template is performed automatically as an npm postinstall hook.\n\nWhen used as part of an express app, a setup method is provided which will add a static-middleware (using [serve-static](https://www.npmjs.com/package/serve-static)) to serve the template assets without needing to copy them to any other location.\n\nIt will also add the template as a mustache partial with a name of \"govuk-template\".\n\n### To configure express middleware\n```\nrequire('hmpo-govuk-template').setup(app[, { ... options ...}]);\n```\n\n### To use the mustache partial\n```\n{{< govuk-template}}\n    {{$pageTitle}}An example page{{/pageTitle}}\n    {{$main}}\n        <h1>Page Content</h1>\n    {{/main}}\n{{/ govuk-template}}\n```\n\n## Options\n\nA number of options can be passed with the app into the setup method:\n\n* `path` - Sets the base path for the location of static assets - Default: `/govuk-assets`\n\nOther options are passed onto the [serve-static](https://www.npmjs.com/package/serve-static) configuration, and more details can be found in [the serve-static documentation](https://www.npmjs.com/package/serve-static)\n\n## Example\n\nThere is an example implmentation in '/example'. To run:\n\n```\ncd example\nnpm install\nnpm start\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/express-partial-templates","private":false,"url":"https://github.com/UKHomeOffice/express-partial-templates","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# express-partial-templates\n\nA middleware that will use the `views` path and the `view engine` string that are stored against an [Express](http://expressjs.com) `app` object to generate a key-value object that identifies and makes accessible the file paths of partial templates against `res.locals.partials` on execution.\n\n## Installation\n\n```\nnpm install [--save] express-partial-templates;\n```\n\n## Usage\n\n```\nvar app = require('express')();\n\napp.set('view engine', 'html');\napp.set('views', path.join(__dirname, '/views'));\napp.use(require('express-partial-templates')(app));\n\napp.use(function (req, res, next) {\n    // res.locals.partials has been set.\n\n    next();\n});\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-form-controller","private":false,"url":"https://github.com/UKHomeOffice/passports-form-controller","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-form-controller\n\nImplements a request pipeline for GET and POST of forms, with input cleaning/formatting and validation.\n\n## Usage\n\nBasic usage:\n\n```javascript\nvar Form = require('hmpo-form-controller');\n\nvar form = new Form({\n    template: 'form',\n    fields: {\n        name: {\n            validate: 'required'\n        }\n    }\n});\n\napp.use('/', form.requestHandler());\n```\n\nThis won't really be very useful though, since all it will do is render the \"form\" template on `/` and respond to GET and POST requests.\n\nFor real-world usage you will probably want to extend the Form class to create your own controllers.\n\n```javascript\nvar Form = require('hmpo-form-controller'),\n    util = require('util');\n\nvar MyForm = function (options) {\n    Form.call(this, options);\n};\n\nutil.inherits(MyForm, Form);\n\nmodule.exports = MyForm;\n```\n\nThe Form class allows for a number of insertion points for extended functionality:\n\n* `process`     Allows for custom formatting and processing of input prior to validation\n* `validate`    Allows for custom input validation\n* `getValues`   To define what values the fields are populated with on GET\n* `saveValues`  To define what is done with successful form submissions\n\nAll of these methods take three arguments of the request, the response and a callback. In all cases the callback should be called with a first argument representing an error.\n\n* `getErrors/setErrors` Define how errors are persisted between the POST and subsequent GET of a form step.\n* `locals` Define what additional variables a controller exposes to its template\n\nThese methods are synchronous and take only the request and response obejct as arguments.\n\n### Validators\n\nThe library [supports a number of validators](https://github.com/UKHomeOffice/passports-form-controller/blob/master/lib/validation/validators.js).\n\nBy default the application of a validator is optional on empty strings. If you need to ensure a field is validated as being 9 characters long and exists then you need to use both an `exactlength` and a `required` validator.\n\n#### Custom Validators\n\nCustom validator functions can be passed in field config. These must be named functions and the name is used as the error.type for looking up validation error messages.\n\nfields.js\n```js\n{\n    'field-1': {\n        validate: ['required', function isTrue(val) {\n            return val === true;\n        }]\n    }\n}\n```\n\n### steps config\n\n#### Handles journey forking\n\nEach step definition accepts a `next` property, the value of which is the next route in the journey. By default, when the form is successfully submitted, the next steps will load. However, there are times when it is necessary to fork from the current journey based on a users response to certain questions in a form. For such circumstances there exists the `forks` property.\n\nIn this example, when the submits the form, if the field called 'example-radio' has the value 'superman', the page at '/fork-page' will load, otherwise '/next-page' will be loaded.\n\n```js\n\n'/my-page': {\n    next: '/next-page',\n    forks: [{\n        target: '/fork-page',\n        condition: {\n            field: 'example-radio',\n            value: 'superman'\n        }\n    }]\n}\n```\n\nThe condition property can also take a function. In the following example, if the field called 'name' is more than 30 characters in length, the page at '/fork-page' will be loaded.\n\n```js\n\n'/my-page': {\n    next: '/next-page',\n    forks: [{\n        target: '/fork-page',\n        condition: function (req, res) {\n            return req.form.values['name'].length > 30;\n        }\n    }]\n}\n```\n\nForks is an array and therefore each fork is interrogated in order from top to bottom. The last fork whose condition is met will assign its target to the next page variable.\n\nIn this example, if the last condition resolves to true - even if the others also resolve to true - then the page at '/fork-page-three' will be loaded. The last condition to be met is always the fork used to determine the next step.\n\n```js\n\n'/my-page': {\n    next: '/next-page',\n    forks: [{\n        target: '/fork-page-one',\n        condition: function (req, res) {\n            return req.form.values['name'].length > 30;\n        }\n    }, {\n        target: '/fork-page-two',\n        condition: {\n            field: 'example-radio',\n            value: 'superman'\n        }\n    }, {\n        target: '/fork-page-three',\n        condition: function (req, res) {\n            return typeof req.form.values['email'] === 'undefined';\n        }\n    }]\n}\n```\n\n### The FormError class\n\nFormError can be used as a façade to normalise different types of error one may receive / trigger, and to be subsequently returned from a controller.\nIts constructor takes a series of options. `title` and `message` have both getters and public methods to define default values.\n\n\n```js\n\nlet error = new ErrorClass(this.missingDoB, {\n    key: this.missingDob,\n    type: 'required',\n    redirect: '/missingData',\n    title: 'Something went wrong',\n    message: 'Please supply a valid date of birth'});\n```\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-model","private":false,"url":"https://github.com/UKHomeOffice/passports-model","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-model\nSimple model for interacting with http/rest apis.\n\n## Usage\n\nNormally this would be used as an abstract class and extended with your own implementation.\n\nImplementations would normally define at least a `url` method to define the target of API calls.\n\nThere are three methods for API interaction corresponding to GET, POST, and DELETE http methods:\n\n### `fetch`\n\n```javascript\nvar model = new Model();\nmodel.fetch(function (err, data, responseTime) {\n    console.log(data);\n});\n```\n\n### `save`\n\n```javascript\nvar model = new Model();\nmodel.set({\n    property: 'properties are sent as JSON request body by default'\n});\nmodel.save(function (err, data, responseTime) {\n    console.log(data);\n});\n```\n\nThe method can also be overwritten by passing options\n\n```javascript\nvar model = new Model();\nmodel.set({\n    property: 'this will be sent as a PUT request'\n});\nmodel.save({ method: 'PUT' }, function (err, data, responseTime) {\n    console.log(data);\n});\n```\n\n### `delete`\n\n```javascript\nvar model = new Model();\nmodel.delete(function (err, data) {\n    console.log(data);\n});\n```\n\nIf no `url` method is defined then the model will use the options parameter and [Node's url.format method](https://nodejs.org/api/url.html#url_url_format_urlobj) to construct a URL.\n\n```javascript\nvar model = new Model();\n\n// make a GET request to http://example.com:3000/foo/bar\nmodel.fetch({\n    protocol: 'http',\n    hostname: 'example.com',\n    port: 3000,\n    path: '/foo/bar'\n}, function (err, data, responseTime) {\n    console.log(data);\n});\n```\n\n## Events\n\nAPI requests will emit events as part of their lifecycle.\n\n`sync` is emitted when an API request is sent\n```javascript\nmodel.on('sync', function (settings) { });\n```\n\n`success` is emitted when an API request successfully completes\n```javascript\nmodel.on('success', function (data, settings, statusCode, responseTime) { });\n```\n\n`fail` is emitted when an API request fails\n```javascript\nmodel.on('fail', function (err, data, settings, statusCode, responseTime) { });\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-template-mixins","private":false,"url":"https://github.com/UKHomeOffice/passports-template-mixins","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-template-mixins\nA middleware that exposes a series of Mustache mixins on `res.locals` to ease usage of forms, translations, and some other things.\n\nIt takes in two arguments, a `fields` object containing field configuration, and an [options object](#options).\n\n## Installation\n\n```javascript\nnpm install [--save] hmpo-template-mixins;\n```\n\n## Usage\n\n```javascript\nvar express = require('express');\n\nvar i18n = require('i18n-future');\n\nvar fields = require('./routes/renew-your-passport/fields');\n\napp.set('view engine', 'html');\napp.set('views', path.join(__dirname, '/views'));\n\napp.use(i18n.middleware());\napp.use(require('hmpo-template-mixins')(fields, { sharedTranslationsKey: 'passport.renew' }));\n\napp.use(function (req, res) {\n    // NOTE: res.locals.partials has been set.\n\n    res.render('example-template');\n});\n```\n\n## Translation\n\nBy default any function set to `req.translate` will be used for translation if it exists. For example, that generated using [i18n-future](https://npmjs.com/package/i18n-future) middleware.\n\n## Options\n\n### viewsDirectory\n\nAllows you override the directory that the module checks for partials in - Default: the root of this project\n\n### viewEngine\n\nAllows you to alter the file extension of the templates - Default: 'html'\n\n### sharedTranslationsKey\n\nPrefixes keys for translation - Default: ''\n\n### translate\n\nDefines a custom translation method - Default: `req.translate`\n\n## Mustache mixins available\n\n```\nt\ntime\nselected\nlowercase\nuppercase\nhyphenate\ndate\ncurrency\nselect\ninput-text\ninput-date\ninput-text-compound\ninput-text-code\ninput-number\ninput-phone\nradio-group\ncheckbox\ncheckbox-compound\ncheckbox-required\ninput-submit\ntextarea\n```\n\n## Options\n\n- `className`: A string or array of string class names.\n- `label`: The intended value of the HTML `label` attribute.\n- `type`: The value of the HTML input `type` attribute.\n- `required`: Value applied to `aria-required` HTML attribute.\n- `hint`: This adds context to the label, which it is a part of, for input text, radio groups and textarea. It is used within the input by aria-describedby for screen readers.\n- `maxlength`: Applicable to text-based fields and mapped to the `maxlength` HTML attribute.\n- `options`: Applicable to HTML `select` and `radio` controls and used to generate the items of either HTML element.\n- `selected`: Applicable to `select`, `checkbox`, and `radio` controls. Will render the selected HTML option/element selected or checked.\n- `legend`: Applicable to `radio` button controls, which are wrapped in a HTML `fieldset` with a `legend` element.\n- `legendClassName`: Applied as a class name to HTML `legend` attribute.\n- `toggle`: Can be used to toggle the display of the HTML element with a matching `id`. See [passports-frontend-toolkit](https://github.com/UKHomeOffice/passports-frontend-toolkit/blob/master/assets/javascript/progressive-reveal.js) for details.\n- `attributes`: A hash of key/value pairs applicable to a HTML `textarea` field. Each key/value is assigned as an attribute of the `textarea`. For example `spellcheck=\"true\"`.\n- `child`: Render a child partial beneath each option in an `optionGroup`. Accepts a custom mustache template string, a custom partial in the format `partials/{your-partial-name}` or a template mixin key which will be rendered within a panel element partial.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/payments-service","private":false,"url":"https://github.com/UKHomeOffice/payments-service","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"## Synopsis\n\nThis project separates the concern of handling a payment gateway from the client requiring the integration.\n\nBenefits include ease of financial transaction reporting, payment event and type handling.\n \nFurthermore, although WorldPay is the only current payment gateway implemented the abstraction makes implementing alternative providers easier from the client perspective. \n\n## Code Example\n\nTo learn the features implemented in this project the suggested starting place is the controller tests you can find [here](payments/test/controller/), specifically PaymentControllerSpec, PaymentEventControllerSpec and WorldPayTransactionReportControllerSpec.\n\n## Motivation\n\nThis project exists because it is useful for the Home Office Visa exemplar and payment gateway integration is common to many government projects.\n\n## Installation\n\nThis project is implemented in Scala and uses Mongo for data persistence.\n\nTo build the project execute `./build.sh`, and likewise to run execute `./run.sh` from the project root folder.\n\n## API Reference\n\nThis project is a web application exposing RESTful web services. The expected content-type is `application/json` except from endpoints specific for WorldPay.\n\n### `GET /payment-types/:region`\n\n#### Description\n\nReturns a list of payment types for a given `region`.\n\n#### Header attributes\n\n`X-CLIENT-ID` - to define client id\n\n#### Parameters\n\n* `region` - a `string` parameter for a region name; it has to match one of regions specified in the configuration.\n\n#### Response\n\nA json representing set of payment types.\n\n\n### `POST /payment/start`\n\n#### Description\n\nStarts a new payment by initializing it on both Payments and the WorldPay side and returns a response json with a redirect `url`.\n\n#### Header attributes\n\n`X-CLIENT-ID` - to define client id\n\n#### Payload\n\nA json structure containing all required data.\n\nExample:\n\n```\n{\n  \"externalReference\": \"pnn\",\n  \"internalReference\": \"appId\",\n  \"payee\": {\n    \"title\": \"Mr\",\n    \"givenName\": \"givenName\",\n    \"familyName\": \"familyName\",\n    \"email\": \"lincolnshire.poacher@example.com\",\n    \"phoneNumber\": \"0123456789\",\n    \"billingAddress\": {\n      \"line1\": \"line1\",\n      \"line2\": \"line2\",\n      \"line3\": \"line3\",\n      \"townCity\": \"London\",\n      \"postCode\": \"EC2 2CE\",\n      \"countryCode\": \"CHN\"\n    }\n  },\n  \"description\": \"I am a product\",\n  \"profile\": {\n    \"paymentType\": \"VISA-SSL\",\n    \"region\": \"uk\"\n  },\n  \"paymentItems\": [{\n     \"description\": \"6 months\",\n     \"price\": 234.0\n  }\n  ],\n  \"total\": 234.0,\n  \"currency\": \"GBP\",\n  \"locale\": \"\",\n  \"additionalInformation\": {\n      \"GWF\": \"123\"\n   }\n}\n```\n\n#### Response\n\nA json containing `url` to be used to redirect to payment pages along with payment `externalReference`.\n\n\n### `GET /payment/perform-inquiry/:internalReference`\n\n#### Description\n\nForces to perform inquiry on the WorldPay to check the current status of the latest payment for the given `internalReference`.\n\nAs a result the service may asynchronously send a notification to the client system informing about the change in payment status.\n\n#### Parameters\n\n* `internalReference` - a `string` parameter for internal payment reference.\n\n#### Response\n\nNo specific response body.\n\n\n### `GET /payment-submission/confirmation`\n\n#### Description\n\nAn endpoint to handle synchronous WorldPay callbacks on payment submission. There is number of query parameters WorldPay adds to the query, however the service takes into account only `status` and `externalReference`.\n\nThis main purpose of this endpoint it to handle *APM* payments as the `status` query parameter is added only for them.\n\nAs a result the service may asynchronously send a notification to the client system informing about the change in payment status.\n\n#### Parameters\n\n* `externalReference` - a `string` parameter for external payment reference;\n* `status` - a `string` representing current payment status; there is a set of possible values for that field.\n\n#### Response\n\nResponse body required by WorldPay: `[OK]`\n\n\n### `GET /notify`\n\n#### Description\n\nAn endpoint to receive asynchronous WorldPay notifications about a payment. There is number of query parameters WorldPay adds to the query to both identify the payment and to give information about its current status.\n\nAs a result the service may asynchronously send a notification to the client system informing about the change in payment status.\n\n#### Parameters\n\n* `PaymentCurrency` - a `string` parameter for currency used on the payment;\n* `PaymentStatus` - a `string` representing current payment status;\n* `OrderCode` - a `string` parameter for the payment external reference;\n* `PaymentMethod` - a `string` parameter for payment method used on the payment;\n* `PaymentAmount` - a `number` parameter with the paid amount; value multiplied by 100; contains no commas.\n\n#### Response\n\nResponse body required by WorldPay: `[OK]`\n\n\n### `POST /report`\n\n#### Description\n\nAn endpoint to receive reports from WorldPay. It generates two reports and sends them as email attachments to recipients specified in the config file.\n\nThe endpoint payload is in XML format.\n\n#### Response\n\nResponse body required by WorldPay: `<html> <head>Report Response</head> <body> [OK] </body> </html>`\n\n\n### `POST /migration/payment`\n\n#### Description\n\nThis endpoint creates initial payment data on the service side. It does not initializes payment on WorldPay side, though.\n\nThe endpoint is for a parallel phase when a client system was already integrated with WorldPay and is moving to use the new gateway system.\n\n#### Header attributes\n\n`X-CLIENT-ID` - to define client id\n\n#### Response\n\nNo specific response body.\n\n\n### `GET /healthcheck`\n\n#### Description\n\nAn endpoint to check service's health.\n\n#### Response\n\nReturns `healthy!` along with build number if everything is fine.\n\n\n### Callback urls\n\nThe service requires defining several urls in order to interact with client systems.\n\n#### `payment.report.url`\n\nA client url where generated reports are sent.\n\n#### `payment.notification.url`\n\nA client url where notifications about payment status change are sent.\n\n#### `pending.url`\n\nA client url where payment journey gets redirected for pending payment.\n\n#### `cancel.url`\n\nA client url where payment journey gets redirected in case of payment being cancelled.\n\n\n## Tests\n\nAll tests are executed in the build process.\n\nHowever if you are learning how the service works through running individual tests, this is best done in an IDE such as IntelliJ.\n\n## Contributors\n\nIf you want to contribute to the project you can do it by creating a pull request.\n\n\n## Known issues\n\nThere is no validation of the string fields within the JSON payload which, if not correctly protected by the calling client, could leave the potential for a XML injection attack.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/removals_integration","private":false,"url":"https://github.com/UKHomeOffice/removals_integration","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Removals Integration API\n\n[![Build](https://travis-ci.org/UKHomeOffice/removals_integration.png)](https://travis-ci.org/UKHomeOffice/removals_integration)\n[![Coverage Status](https://coveralls.io/repos/github/UKHomeOffice/removals_integration/badge.svg)](https://coveralls.io/github/UKHomeOffice/removals_integration)\n[![Quality](https://codeclimate.com/github/UKHomeOffice/removals_integration.png)](https://codeclimate.com/github/UKHomeOffice/removals_integration)\n[![Dependencies](https://david-dm.org/UKHomeOffice/removals_integration.png)](https://david-dm.org/UKHomeOffice/removals_integration)\n## Quickstart:\n\n Get [NodeJS](https://nodejs.org) via [nvm](https://github.com/creationix/nvm)\n```sh\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\n```\n\n#### Install NodeJS 4 LTS\n```sh\n$ nvm install 4\n$ nvm use 4\n```\n### Build:\n```sh\n$ npm install\n```\n### Test:\n```sh\n$ npm test\n```\n### CI Test:\n```sh\n$ npm test\n```\n### Start single-threaded unmanaged server:\n```sh\n$ npm start\n```\n### Start in production mode with MySQL server and Redis server:\n\n(set environment variables to whatever you've configured)\n```sh\nNODE_ENV=productionAlter \\\nDBHOST=localhost \\\nDBPORT=3306 \\\nDBUSER=root \\\nDBPASS=root \\\nDBNAME=sails \\\nREDIS_SERVICE_HOST=localhost \\\nREDIS_SERVICE_PORT=6379 \\\nPORT=8080 \\\nnpm start\n```\n\n## Environment variables\n\n| VAR | OPTION | RESULT |\n| --- | ------ | ------ |\n| NODE_ENV | production | start in a production mode, use a mysql db, use redis, no fixtures, **do not run** migrations |\n| NODE_ENV | productionAlter | start in a production mode, use a mysql db, use redis, no fixtures, **do run** migrations |\n| NODE_ENV | development | start in a development mode, use a local in-memory database, no fixtures, no redis |\n| PORT | [integer] | port to run node server on |\n| DBHOST | [string] | mysql db host |\n| DBPORT | [string] | mysql db port |\n| DBUSER | [string] | mysql db user |\n| DBPASS | [string] | mysql db password |\n| REDIS_SERVICE_HOST | [string] | redis host |\n| REDIS_SERVICE_PORT | [string] | redis port |\n\n## Docker\nCan be built and run in the same way with docker for example:\n```sh\n$ docker build -t ibm-backend .\n$ docker run -i -e \"NODE_ENV=development\" ibm-backend\n```\n","travis":true,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.\n","masterBranchProtection":false},{"name":"UKHomeOffice/passports-frontend-toolkit","private":false,"url":"https://github.com/UKHomeOffice/passports-frontend-toolkit","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-frontend-toolkit\nSet of common UI patterns/styles for hmpo projects\n\n## Images\nCopy `assets/images/hmpo` to your image directory. Images are loaded by using the `file-url` function provided by [GOV.UK frontend toolkit](https://github.com/alphagov/govuk_frontend_toolkit). The `file-url` function uses the `$path` variable which is set before the toolkit's modules are loaded.\n\n## Vendor JavaScript\nAdditional vendor JavaScript files are included. These are:\n\n* details.polyfill.js\n* indexof.polyfill.js\n* safari-cachebuster.js\n\nCopy `assets/javascript/vendor` into your javascript directory (ie `hmpo/vendor`) and compile them with your JavaScript.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vcloud_packer_images","private":false,"url":"https://github.com/UKHomeOffice/vcloud_packer_images","license":null,"readme":"## vcloud_packer_images\nHelps you generates an image from an iso ( currently tested using ubuntu 14.04 but should be pretty portable) which we can upload as a skyscape template.  \n\n## Intended use\n### General form \nBuild a new template:\n```./createimage [-p,-u,-o,-t] [build|upload] <template name>```\n\nThe createimage script will upload the template to Skyscape or a vCenter compatible provider.\n\n** Required Fields for upload**\n* -d distro\n* -u username\n* -o org\n* -c catalog\n\nThe upload options will build an ovftool command and the ovftool will in turn prompt you for a password. For the sake of security specifying the\npassword for image uploading is not allowed.\n\n\n### Examples\n```\ngit clone git@github.com:UKHomeOffice/vcloud_packer_images.git\ncd vcloud_packer_images\n./createimage -p p4ssw0rd build centos-66-x64 #_for Centos 66_\n./createimage -p p4ssw0rd build ubuntu-1404-x64 #_for Ubuntu 14.04_\n./createimage -u 123.456.789 -o 1234-456-223a -t centos -c CentOS  upload centos-66-x64\n./createimage build #_you will be prompted for options (distro, vm type, password) during the build run\n```\n\n### Skyscape translation\nTo get API details for skyscape you need to login to the (portal)[https://portal.skyscapecloud.com] and click on your username and then (API)[https://portal.skyscapecloud.com/user/api] . \nThis will give you the API details requried to run the createimage tool. **Note** however that the username as specified by Skyscape is actually your username and the organisation \nseperated by an **@** symbol.\n\n## TODO\n\n- Add to the build command so it runs a fix on any json configs before proceeding.\n- Figure out how to run this without infecting host system. (If you have vagrant running with something else other than virtualbox, you _should_ be able to vagrant up) \n- Double check ruby dependancies are correct.\n- Integrate with local or remote vagrant store to upload vagrant images\n- Move puppet scripts to a share directory used by all images\n- Make the packer build files an ERB template\n- Add PACKER_CACHE_DIR env variable to keep centralised iso cache, if not already.\n\n## Requirements\n\nThe following is what you'll need on a fairly recent debian / ubuntu system.\n\n# Ubuntu\n- aptitude install unzip qemu libxtst6 libxcursor1 libxinerama1 libxi6 wget ruby -y\n- wget -O packer.zip https://dl.bintray.com/mitchellh/packer/packer_0.7.5_linux_amd64.zip && unzip packer.zip && rm packer.zip && cp packer* /usr/local/bin\n- wget -O vmware.bundle https://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-11.0.0-2305329.x86_64.bundle && bash vmware.bundle --required --eulas-agreed --console\n\n# Mac os X\n- Use brew to install the dependencies above i.e. ruby etc. \n- Brew's version of packer isn't updated enough and doesn't understand the hardware version for the vmware-iso \n- wget -O packer.zip https://dl.bintray.com/mitchellh/packer/packer_0.7.5_darwin_amd64.zip && unzip packer.zip && rm packer.zip && sudo cp packer* /usr/local/bin\n- Download VMWARE Fusion for MAC\n\nYou'll also need ovftool if it isn't insalled with vmware-workstation / vmware fusion (MAC).  Currently, this is only available on the vmware website after you signup.\novftool can be downloaded from: [VMWare](https://my.vmware.com/web/vmware/details?downloadGroup=OVFTOOL400&productId=353)\n\n_You'll need to do some work if you want to run this on another type of host._\n\n## Would be nice\n- If this feature request ever happens, we'll update the Vagrantfile so this all works within vbox.\n- [https://www.virtualbox.org/ticket/4032]\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-form-wizard","private":false,"url":"https://github.com/UKHomeOffice/passports-form-wizard","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-form-wizard\n\nCreates routing and request handling for a multi-step form process.\n\nGiven a set of form steps and field definitions, the wizard function will create an express router with routing bound to each step of the form and input validation applied as configured.\n\nAdditional checks are also applied to ensure a user completes the form in the correct order.\n\n## Usage\n\nDefine a set of steps:\n\n```javascript\n// steps.js\nmodule.exports = {\n  '/step1': {\n    next: '/step2'\n  },\n  '/step2': {\n    next: '/step3',\n    fields: ['name']\n  },\n  '/step3': {\n    next: '/step4',\n    fields: ['age']\n  },\n  '/step4': {}\n}\n```\n\nDefine field rules:\n\n```javascript\n// fields.js\nmodule.exports = {\n  'name': {\n    validate: 'required'\n  },\n  'age': {\n    validate: 'required'\n  }\n}\n```\n\nCreate a wizard and bind it as middleware to an app:\n\n```javascript\nvar wizard = require('hmpo-form-wizard'),\n    steps = require('./steps'),\n    fields = require('./fields');\n\napp.use(wizard(steps, fields));\n```\n\n## Sessions\n\nThe wizard expects some kind of session to have been created in previous middleware layers.\n\nFor production use a database backed session store is recommended - such as [connect-redis](https://github.com/tj/connect-redis).\n\n### Additional step options\n\nThe minimum amount of configuration for a wizard step is the `next` property to determine where the user should be taken after completing a step. A number of additional properties can be defined.\n\n* `fields` - specifies which of the fields from the field definition list are applied to this step. Form inputs which are not named on this list will not be processed. Default: `[]`\n* `template` - Specifies the template to render for GET requests to this step. Defaults to the route (without trailing slash)\n* `backLink` - Specifies the location of the step previous to this one. If not specified then an algorithm is applied which checks the previously visited steps which have the current step set as `next`.\n* `controller` - The constructor for the controller to be used for this step's request handling. The default is an extension of the [hmpo-form-controller](https://www.npmjs.com/package/hmpo-form-controller), which is exported as a `Controller` property of this module. If custom behaviour is required for a particular form step then custom extensions can be defined - see [Custom Controllers](#custom-controllers)\n* `forks` - Specifies a list of forks that can be taken depending on a particular field value or conditional function - See  [handling forking journeys](https://github.com/UKHomeOffice/passports-form-controller#handles-journey-forking) in hmpo-form-controller.\n\n### Additional field options\n\n* `invalidates` - an array of field names that will be 'invalidated' when this field value is set or changed. Any fields specified in the `invalidates` array will be removed from the `sessionModel`. Further to this any future steps from the invalidating step field will be removed from the `sessionModel`.\n\nRemaining field options documentation can be found in the hmpo-template-mixins [README](https://github.com/UKHomeOffice/passports-template-mixins#options-1).\n\n### Additional wizard options\n\nA number of options can be passed to the wizard as a third argument to customise aspects of the behaviour for all steps.\n\n`translate` - provide a function for translating validation error codes into usable messages. Previous implementations have used [i18next](https://www.npmjs.com/package/i18next) to do translations.\n`templatePath` - provides the location within `app.get('views')` that templates are stored. Default `pages`.\n`controller` - override the [default controller](./lib/controller.js) for steps without a controller specified.\n`params` - define a suffix for the routes for supporting additional URL parameters.\n\n### Custom Controllers\n\nCreating a custom controller:\n\n```javascript\n// controller.js\nvar util = require('util'),\n    Controller = require('hmpo-form-wizard').Controller;\n\nfunction CustomController() {\n  Controller.apply(this, arguments);\n  // extra middleware to log the request\n  this.use(function (req, res, next) {\n    console.log(req.method, req.url);\n    next();\n  });\n}\n\nutil.inherits(CustomController)\n\nmodule.exports = CustomController\n```\n\nExamples of custom controllers can be found in the [example app](./example/controllers)\n\n## Example app\n\nAn example application can be found in [the ./example directory](./example). To run this, follow the instructions in the [README](./example/README.md).\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/i18n-lookup","private":false,"url":"https://github.com/UKHomeOffice/i18n-lookup","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# i18n-lookup\nUtility node module for doing lookups from translation documents\n\n## Install\n\n```\nnpm install [--save] i18n-lookup\n```\n\n## Usage\n\nA lookup function is returned by passing in the translation method as an argument. We normally use [i18next](https://www.npmjs.com/package/i18next).\n\n```javascript\n/**\nLocale: {\n    another: {\n        translation: {\n            key: 'Text'\n        }\n    }\n}\n**/\nvar t = require('i18next').t;\n\nvar lookup = require('i18n-lookup')(t);\n\nvar translated = lookup([\n    'a.translation.key',\n    'another.translation.key'\n]);\n\nconsole.log(translated);\n// This will output the first key which has a corresponding translation defined.\n// => \"Text\"\n```\n\nAdditionally, a template compilation method can be provided for cases where the translated key also includes template syntax.\n\n```javascript\n/**\nLocale: {\n    greeting: 'Hello {{name}}'\n}\n**/\nvar t = require('i18next').t,\n    Mustache = require('mustache');\n\nvar lookup = require('i18n-lookup')(t, Mustache.render);\n\nvar translated = lookup([\n    'greeting'\n], {\n    name: 'John'\n});\n\nconsole.log(translated);\n// This will output the returned lookup compiled with the provided context\n// \"Hello John\"\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/cloud-costs","private":false,"url":"https://github.com/UKHomeOffice/cloud-costs","license":null,"readme":"You will need to log into vcloud before you can use this script. It appears that, as long as you run this frequently, there is no need to keep logging in.\n\nFor this script to work, you will also need to install the vcloud-walk gem. I used rbenv for this, but you could also install it system-wide\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/heiraupdater","private":false,"url":"https://github.com/UKHomeOffice/heiraupdater","license":null,"readme":"# Heiraupdater\n\nTODO: Write a gem description\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n```ruby\ngem 'heiraupdater'\n```\n\nAnd then execute:\n\n    $ bundle\n\nOr install it yourself as:\n\n    $ gem install heiraupdater\n\n## Usage\n\nTODO: Write usage instructions here\n\n## Contributing\n\n1. Fork it ( https://github.com/[my-github-username]/heiraupdater/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/HODHackMicroServices","private":false,"url":"https://github.com/UKHomeOffice/HODHackMicroServices","license":null,"readme":"# HODHackMicroServices\nProduce a micro service proof of concept\n\nhod.hacker@gmail.com    hodhacker1\n\nhttps://twitter.com/HodHacker hodhacker1\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/openid","private":false,"url":"https://github.com/UKHomeOffice/openid","license":null,"readme":"# openid\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/mrz","private":false,"url":"https://github.com/UKHomeOffice/mrz","license":null,"readme":"You will need to create the following folder where you will put your passport image files\n\nsrc/test/resources/passport-images","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/immigration-status-check","private":false,"url":"https://github.com/UKHomeOffice/immigration-status-check","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"This is your new Play application\n=================================\n\nThis file will be packaged with your application, when using `activator dist`.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-io-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-io-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Scala library for IO functionality\n==================================\nGeneral Scala IO functionality such as JSON schema validation\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Json4s\n\nIntroduction\n------------\nTODO\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nTo run integration specs:\n> sbt it:test\n\nPublishing\n----------\nTo publish the jar to artifactory you will need to \n\n1. Copy the .credentials file into your <home directory>/.ivy2/\n2. Edit this .credentials file to fill in the artifactory security credentials (amend the realm name and host where necessary)\n\n> sbt publish\n\nNote that initially this project refers to some libraries held within a private Artifactory. However, those libraries have been open sourced under https://github.com/UKHomeOffice.\n\nExample Usage\n-------------\n- Validate JSON against a JSON schema:\n```scala\n  val json: JValue = getYourJson()\n  val schema: JValue = getYourSchema()\n  \n  val Good(result) = JsonSchema(schema).validate(json) // Assuming successful validation\n```\n\n- Transform JSON from one structure to another:\n```scala\n  val yourJsonTransformer = new JsonTransformer {\n    def transform(json: JValue): JValue Or JsonError = {\n      val JsonTransformation(oldJson, newJson) = (\n        map(\"name\" -> \"superName\") ~\n        mapArray(\"fee\" -> \"payment.feeInPence\", field => JInt(BigInt(field.extract[String])))\n      )(json)\n      \n      Good(newJson)\n    }\n  }\n  \n  val flatJson = parse(\"\"\"\n  {\n    \"name\": \"Batman\",\n    \"fee_1\": \"12\",\n    \"fee_2\": \"15\",\n    \"fee_3\": 18\n  }\"\"\")\n\n  val json = parse(\"\"\"\n  {\n    \"superName\": \"Batman\",\n    \"payment\": [\n      { \"feeInPence\": 12 },\n      { \"feeInPence\": 15 },\n      { \"feeInPence\": 18 }\n    ]\n  }\"\"\")\n\n  // Assuming successful transformation\n  transform(flatJson) mustEqual Good(json) \n```\n\nNote - if required (though not advised) the EmptyJsonSchema can be used to all JSON to be validated successfully.\n\nJSON Schema Validation\n----------------------\nThere are several online JSON schema validation tools such as [JSON Schema Validator](http://www.jsonschemavalidator.net/)\n\nAlternatively, a JSON schema can be validated from the Scala REPL by doing the following:\n\n> sbt\n\n> console\n\n> import uk.gov.homeoffice.json._\n\n> import uk.gov.homeoffice.json.Json._\n\n> jsonFromFilepath(\"src/test/resources/schema-test.json\") map { JsonSchema(_) }\n\nIf you've given a valid file path and the schema is valid, the result will be something like:\n\nres3: scala.util.Try[uk.gov.homeoffice.json.JsonSchema] = Success(uk.gov.homeoffice.json.JsonSchema@7568db95)","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-rabbit-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-rabbit-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Scala publish/subscribe JSON API for RabbitMQ\n=============================================\nScala general functionality to interface with RabbitMQ via JSON protocol.\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- RabbitMQ\n\n- Specs2\n\nIntroduction\n------------\nTODO\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nTo run integration specs:\n> sbt it:test\n\nPublishing\n----------\nTo publish the jar to artifactory you will need to \n\n1. Copy the .credentials file into your <home directory>/.ivy2/\n2. Edit this .credentials file to fill in the artifactory user and password\n\n> sbt publish\n\nNote that initially this project refers to some libraries held within a private Artifactory. However, those libraries have been open sourced under https://github.com/UKHomeOffice.\n\nExample Usage\n-------------\n```scala\n  object ExampleBoot extends App with HasConfig {\n    implicit val json4sFormats = DefaultFormats\n  \n    val system = ActorSystem(\"example-actor-system\", config)\n  \n    // Consume\n    system.actorOf {\n      Props {\n        new ConsumerActor with Consumer[String] with DefaultErrorPolicy with NoJsonValidator with ExampleQueue with Rabbit {\n          def consume(json: JValue) = Future {\n            val message = (json \\ \"message\").extract[String]\n            debug(s\"Congratulations, consumed message '$message'\")\n            message\n          }\n        }\n      }\n    }\n  \n    // Publish\n    val publisher = new Publisher with ExampleQueue with Rabbit\n    publisher.publish(\"message\" -> \"hello world!\")\n  }\n  \n  trait ExampleQueue extends Queue {\n    def queueName = \"rabbit-example\"\n  }\n```\n\nNoting that a \"configuration\" such as application.conf must be provided e.g.\n```scala\n  amqp {\n    addresses = [{\n      host = \"127.0.0.1\"\n      port = 5672\n    }]\n  \n    automatic-recovery = on\n  }\n```\n\nWriting specs (tests) against Rabbit is very easy (integration tests are so easy, they can be regarded as unit tests). Upon running the specs, the SBT build will attempt to start Rabbit (but it is easier to start Rabbit yourself and keep it running, as all specs will create unique, temporary queues, which are removed when examples have finished, and all connections are automatically closed, closing all Rabbit channels).\n\nA spec that consumes valid and error messages, upon publication of said messages. All the plumbing is handled automatically, allowing you to concentrate on writing specs to build your API and subsequently your code.\n\n```scala\nclass WithConsumerSpec(implicit ev: ExecutionEnv) extends Specification with RabbitSpec {\n  \"Consumer\" should {\n    \"consume valid message\" in {\n      val validMessageConsumed = Promise[Boolean]()\n\n      val publisher = new Publisher with WithQueue.Consumer with WithRabbit {\n        def json(json: JValue) = validMessageConsumed success true\n      }\n\n      publisher.publish(JObject())\n\n      validMessageConsumed.future must beTrue.await\n    }\n\n    \"consume error message\" in {\n      val errorMessageConsumed = Promise[Boolean]()\n\n      val publisher = new Publisher with WithQueue.ErrorConsumer with WithRabbit {\n        def jsonError(jsonError: JsonError) = errorMessageConsumed success true\n      }\n\n      publisher.publish(JsonError())\n\n      errorMessageConsumed.future must beTrue.await\n    }\n  }\n}\n```\n\nRabbit MQ\n---------\nWorking on a Mac:\n> brew install rabbitmq\n\nTo enable the Management UI:\n> rabbitmq-plugins enable rabbitmq_management\n\nTo run Rabbit (server)\n> rabbitmq-server\n\nView Management UI in browser at http://localhost:15672\nand login as guest/guest\n\nEven though this is a Scala library to easy test against and use RabbitMQ, underneath it uses the Java RabbitMQ driver.\nTo use Rabbit with other drivers, there is plenty of good documentation at https://www.rabbitmq.com, where the following are a couple of extracts.\n\nExample of connecting to Rabbit to publish to a queue using a Java driver:\n\nhttps://www.rabbitmq.com/api-guide.html\n```java\nConnectionFactory factory = new ConnectionFactory();\nfactory.setUri(\"amqp://userName:password@hostName:portNumber/virtualHost\");\nConnection conn = factory.newConnection();\n\nChannel channel = conn.createChannel();\n\nbyte[] messageBodyBytes = \"Hello, world!\".getBytes();\nchannel.basicPublish(exchangeName, routingKey, null, messageBodyBytes);\n```\n\nExample of using Ruby (maybe for Cucumber testing):\n\nhttps://www.rabbitmq.com/tutorials/tutorial-one-ruby.html\n> gem install bunny --version \">= 1.6.0\"\n\n```ruby\nrequire \"bunny\"\n\nconn = Bunny.new\nconn.start\n\nch = conn.create_channel\n\nq = ch.queue(\"hello\")\nch.default_exchange.publish(\"Hello World!\", :routing_key => q.name)\nputs \" [x] Sent 'Hello World!'\"\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-akka-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-akka-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Akka - Reusable functionality\n=============================\nAkka reusable functionality and Scala Spray functionality/template for general use.\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- Spray\n\n- Specs2\n\nIntroduction\n------------\nBoot a microservice utilising functionality built on top of Spray.\n\nCreate an application and include \"routes\" to expose an API to access via HTTP.\nBuild up your own routes, noting that \"service-statistics\" route is automatically exposed for you and can be accessed as (for example):\n```bash\nhttp://localhost:9100/service-statistics\n```\nwhich would give you something like:\n```javascript\n{\n  statistics: {\n    uptime: \"36663930295 nanoseconds\"\n    total-requests: \"2\"\n    open-requests: \"1\"\n    maximum-open-requests: \"1\"\n    total-connections: \"1\"\n    open-connections: \"1\"\n    max-open-connections: \"1\"\n    request-timeouts: \"0\"\n  }\n}\n```\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nTo run integration specs:\n> sbt it:test\n\nTo run integration specs:\n> sbt it:test \n\nConfiguration\n-------------\nTODO\n\nThe project utilises Artifactory to resolve in-house modules. Do the following:\n1. Copy the .credentials file into your <home directory>/.ivy2/\n2. Edit this .credentials file to fill in the artifactory security credentials (amend the realm name and host where necessary)\n\n> sbt publish\n\nNote that initially this project refers to some libraries held within a private Artifactory. However, those libraries have been open sourced under https://github.com/UKHomeOffice.\n\nTesting\n-------\nNote regarding testing of application that utilises Spray.\nAt the time of writing this, Spray was in maintenance mode because of its migration to Akka HTTP.\nUnfortunately, Spray uses a now out of date Specs2 library. This can be resolved by adding the following class into the package \"spray.testkit\" within the \"test\" directory of your application:\n```scala\npackage spray.testkit\n\nimport org.specs2.execute.{ Failure, FailureException }\nimport org.specs2.specification.core.{ Fragments, SpecificationStructure }\nimport org.specs2.specification.create.DefaultFragmentFactory\n\n/**\n * Spray's built-in support for specs2 is built against specs2 2.x, not 3.x.\n * So you cannot use the Specs2Interface from spray but need to compile one yourself (against specs2 3.x).\n * That is what this code does, taken from https://gist.github.com/gmalouf/51a8722b50f6a9d30404\n * Note that the build has to exclude Specs2 as a transitive dependency from the Spray testkit.\n */\ntrait Specs2Interface extends TestFrameworkInterface with SpecificationStructure {\n  def failTest(msg: String) = {\n    val trace = new Exception().getStackTrace.toList\n    val fixedTrace = trace.drop(trace.indexWhere(_.getClassName.startsWith(\"org.specs2\")) - 1)\n    throw new FailureException(Failure(msg, stackTrace = fixedTrace))\n  }\n\n  override def map(fs: ⇒ Fragments) = super.map(fs).append(DefaultFragmentFactory.step(cleanUp()))\n}\n\ntrait NoAutoHtmlLinkFragments extends org.specs2.specification.dsl.ReferenceDsl {\n  override def linkFragment(alias: String) = super.linkFragment(alias)\n\n  override def seeFragment(alias: String) = super.seeFragment(alias)\n}\n```\n\nSBT - Revolver\n--------------\nsbt-revolver is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nSee https://github.com/spray/sbt-revolver\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nExample Usage\n-------------\n- Actor scheduling:\n```scala\n  class SchedulerSpec extends Specification {\n    \"Actor\" should {\n      \"be scheduled to act as a poller\" in new ActorSystemContext {\n        val exampleSchedulerActor = system.actorOf(Props(new ExampleSchedulerActor), \"exampleSchedulerActor\")\n        exampleSchedulerActor ! Scheduled\n        expectMsg(Scheduled)\n      }\n  \n      \"not be scheduled to act as a poller\" in new ActorSystemContext {\n        val exampleSchedulerActor = system.actorOf(Props(new ExampleSchedulerActor with NoSchedule), \"exampleNoSchedulerActor\")\n        exampleSchedulerActor ! Scheduled\n        expectMsg(NotScheduled)\n      }\n    }\n  }\n  \n  class ExampleSchedulerActor extends Actor with Scheduler {\n    val schedule: Cancellable = schedule(initialDelay = 1 second, interval = 5 seconds, receiver = self, message = Wakeup)\n  \n    def receive = LoggingReceive {\n      case Wakeup => println(\"Hello World!\")\n    }\n  }\n```\n\n- Create some Spray routings - HTTP contract/gateway to your microservice:\n```scala\n  object ExampleRouting1 extends ExampleRouting1\n  \n  trait ExampleRouting1 extends Routing {\n   val route =\n     pathPrefix(\"example1\") {\n       pathEndOrSingleSlash {\n         get {\n           complete { JObject(\"status\" -> JString(\"Congratulations 1\")) }\n         }\n       }\n     }\n  }\n  \n  object ExampleRouting2 extends ExampleRouting2\n    \n  trait ExampleRouting2 extends Routing {\n   val route =\n     pathPrefix(\"example2\") {\n       pathEndOrSingleSlash {\n         get {\n           complete { JObject(\"status\" -> JString(\"Congratulations 2\")) }\n         }\n       }\n     }\n  }\n```\n\n- Create your application (App) utilitising your routings (as well as anything else e.g. booting/wiring Akka actors):\n```scala\n  object ExampleBoot extends App with SprayBoot with ExampleConfig {\n    // You must provide an ActorSystem for Spray.\n    implicit lazy val sprayActorSystem = ActorSystem(\"example-boot-actor-system\")\n  \n    bootRoutings(ExampleRouting1 ~ ExampleRouting2 ~ ExampleRoutingError)(FailureHandling.exceptionHandler)\n  }\n```\n\nNoting that a \"configuration\" such as application.conf must be provided e.g.\n```scala\n  spray.can.server {\n    name = \"example-spray-can\"\n    host = \"0.0.0.0\"\n    port = 9100\n    request-timeout = 1s\n    service = \"example-http-routing-service\"\n    remote-address-header = on\n  }\n```\n\nTo run ExampleBoot:\n```bash\nsbt test:run\n```\n\nAkka Clustering\n---------------\nCluster Singleton:\n\nActors can be managed in a cluster to run as a singleton - an actor will be distributed on multiple nodes, but only one will be running.\n\nYour application.conf for a Cluster Singleton, can use the following template:\n```javascript\nakka {\n  actor {\n    provider = \"akka.cluster.ClusterActorRefProvider\"\n  }\n\n  remote {\n    enabled-transports = [\"akka.remote.netty.tcp\"]\n\n    netty.tcp {\n      hostname = \"127.0.0.1\"\n      port = 0 # To be overridden in code for each running node in a cluster\n    }\n  }\n\n  cluster {\n    seed-nodes = [\n      \"akka.tcp://your-actor-system@127.0.0.1:2551\",\n      \"akka.tcp://your-actor-system@127.0.0.1:2552\",\n      \"akka.tcp://your-actor-system@127.0.0.1:2553\"\n    ]\n\n    roles = [\"your-service\"]\n    min-nr-of-members = 2\n    auto-down-unreachable-after = 30 seconds\n  }\n}\n```\n\nEach node that starts up on the same box would need a different port e.g. 2551, 2552 etc.\nIn production, the nodes would be on different boxes and so can all have the same ports and said port could then also be declared for akka.actor.remote.netty.tcp.port.\n\nThere is an example app showing a makeshift cluster of 3 nodes:\n```scala\nobject ClusterActorSystemExampleApp extends App with Network {\n  withConfig {\n    // Imagine we are starting up 3 nodes on 3 separate boxes (here we will have simply utilise 3 separately configured ports).\n    val actorSystem1 = ClusterActorSystem(1)\n    val actorSystem2 = ClusterActorSystem(2)\n    val actorSystem3 = ClusterActorSystem(3)\n    ...\n  }\n}    \n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-test-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-test-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Test - Scala testing functionality\n==================================\nScala testing functionality for general use (originally written for Registered Traveller UK).\n\nProject built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Specs2\n\nIntroduction\n------------\nTODO\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nTo run integration specs:\n> sbt it:test\n\nPublishing\n----------\nTo publish the jar to artifactory you will need to \n\n1. Copy the .credentials file into your <home directory>/.ivy2/\n2. Edit this .credentials file to fill in the artifactory security credentials (amend the realm name and host where necessary)\n\nSBT - Revolver\n--------------\nsbt-revolver is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nSee https://github.com/spray/sbt-revolver\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nExample Usage\n-------------\nTODO","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/brp_app","private":false,"url":"https://github.com/UKHomeOffice/brp_app","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# BRP Application project for nodejs\n\n[![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/brpapp/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/brpapp) [![Build Status](https://travis-ci.org/UKHomeOffice/brp_app.svg)](https://travis-ci.org/UKHomeOffice/brp_app)\n\n## Quick start\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\nInstall `Redis` and make sure you have a running redis instance in the background.\n\nInitiate the server in development mode (Express is used to serve the static resources in development).\n```bash\n$ npm run dev\n```\n\nThen select one of the following journeys to see the applcation in action\n\n- [Collection](http://localhost:8080/collection)\n- [Someone else](http://localhost:8080/someone-else)\n- [Not arrived](http://localhost:8080/not-arrived)\n- [Correct mistakes](http://localhost:8080/correct-mistakes)\n- [Lost or stolen](http://localhost:8080/lost-stolen)\n\nSee the [development documentation](./documentation/DEVELOPMENT.MD) for a complete description of the application and how to maintain and support BRP.\n\n\n## NPM scripts\n\nStart the application in default mode (production).\nWe use Nginx to serve our static resources in production and ci.\n```bash\n$ npm start\n```\n\nStart the application with [Nodemon](https://www.npmjs.com/package/nodemon) in development mode.\nDebug is switched on and the server restarts when the JS or Sass are recompiled.\n```bash\n$ npm run dev\n```\n\nRun the unit tests\n```bash\n$ npm run test\n```\n\nRun the EcmaScript (ES) linter.  Rules are defined in [.eslintrc](./.eslintrc)\n```bash\n$ npm run lint\n```\n\nRun the jscs style checker. Rules are defined in [.jscsrc.json](./.jscsrc.json)\n```bash\n$ npm run style\n```\n\nAnalyse the quality of the codebase (for results - open [./reports/plato/index.html](./reports/plato/index.html))\n```bash\n$ npm run quality\n```\n\nCompile the Sass to CSS\n```bash\n$ npm run sass\n```\n\n_____________________________________________________________\n\n- For details on [Acceptance tests](https://github.com/UKHomeOffice/brp_app/tree/master/acceptance_tests)\n\n- See the [package.json](./package.json) for a full list of scripts.\n\n- Full list of [environment variables](./documentation/ENVIRONMENT_VARIABLES.md)\n\n","travis":true,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/platform_email_service","private":false,"url":"https://github.com/UKHomeOffice/platform_email_service","license":null,"readme":"# platform_email_service\nEmail Microservice in NodeJS\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/platform_email_service.svg)](https://travis-ci.org/UKHomeOffice/platform_email_service)\n\nGetting started\n\nIf you need a development mail server I suggest [Fake SMTP](https://nilhcem.github.io/FakeSMTP/) no setup, just follow the instructions.\n\nEdit `config/smtp.json` to point to your smtp server (if using FakeSMTP bind this to port 8082 and set that as your port in this file)\nEdit `config/template.json` to point to your template path\n\n`$ npm install`\n\n`$ node app.js`\n\n\n\n## Template API End points\nThese will be deprecated in the future\n\nBoth of the GET methods can take an optional header paramter of templatepath to specify an non standard path\n\nGET template/list to retrieve a list of templates returns 200 or 404\n \nGET template/get/<templateName> to retrieve a specific template returns 200 or 404\n\nPOST template/add with the following body parameters creates a new template returns 201 or 400\n\n```\n  templatePath: <optional>\n  body: <raw html of the template>\n  name: <the templates name for on the filesystem>\n```\n\nPUT template/update/<templatename> with the following body parameters creates a new template returns 200 or 400\n\n```\n  templatePath: <optional>\n  body: <raw html of the template>\n  name: <the templates name for on the filesystem>\n```\n\nDELETE template/delete/<templatename> removes a template from the filesystem returns 204 or 400 with an empty body\n\n## Email API End points\n\nThese will be deprecated in the future\n\nPOST email/send with the following payload as a JSON string to send an email will return a 201 or 400 \n\n```\n  dataModel = {\n    \"sender\": \"test@localhost\", \n    \"recipient\": \"recipient@localhost\",\n    \"subject\": \"<message subject>\",\n    \"template\": \"<template name>\",\n    \"data\": {\n      //Template data in key value pairs                     \n    }\n```\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/platform_queue_service","private":false,"url":"https://github.com/UKHomeOffice/platform_queue_service","license":null,"readme":"# platform_queue_service\nQueuing Micro Service in Node.js\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/platform_queue_service.svg)](https://travis-ci.org/UKHomeOffice/platform_queue_service)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vcloud_ipsec-vpn","private":false,"url":"https://github.com/UKHomeOffice/vcloud_ipsec-vpn","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Vpnconfig\nA command line tool to allow use of a yaml VPN configuration file to push this config to Skyscape\n\n## Installation\nAdd this line to your application's Gemfile:\n\n```ruby\ngem 'vcloud_ipsec-vpn'\n```\n\nAnd then execute:\n\n    $ bundle install\n\nOr install it yourself as:\n\n    $ gem install vcloud_ipsec-vpn\n    \nRequire it in your ruby code using:\nrequire 'vcloud_ipsec-vpn'\n\n## Usage\nRun with option --help to show command line help.\n\nExample command line with gem installed:\nvcloud_ipsec-vpn -d DataCentre1 -u JohnSmith -w vpn-configuration.yaml\n\nExample command line if you have cloned the repository without installing as a gem:\nbundle exec ./bin/vcloud_ipsec-vpn -d DataCentre1 -u JohnSmith -w vpn-configuration.yaml\n\nExample yaml input is provided in test/vpn-configuration-example.yaml\n\nThe yaml schema is provided in lib/vpn-configuration-schema.yaml\n\n## Development\n\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `bin/console` for an interactive prompt that will allow you to experiment.\n\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the version number in `version.rb`, and then run `bundle exec rake release` to create a git tag for the version, push git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\n\n## Contributing\n\n1. Fork it ( https://github.com/UKHomeOffice/vcloud_ipec-vpn/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vcloudToolsGenerator","private":false,"url":"https://github.com/UKHomeOffice/vcloudToolsGenerator","license":null,"readme":"# vcloudToolsGenerator\nAn attempt at abstracting the vcloud-tools format to quickly generate and launch a cluster.  Has some coreos/kubernetes stuff in here, but you don't need to be using that for this to be useful.\n\nwhat works.\n==\n- vapps\n- networks\n- uploading iso's\n- lanching everything (assuming you don't need nat, firewall or vpn rules first)\n\nwhat doesn't work\n==\n- vpn\n- firewall\n- nat\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-rpm-builder-ords","private":false,"url":"https://github.com/UKHomeOffice/lev-rpm-builder-ords","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Oracle REST Data Services RPM Builder\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/lev-rpm-builder-ords.svg?branch=master)](https://travis-ci.org/UKHomeOffice/lev-rpm-builder-ords)\n\nThis project contains a Dockerfile for a container that will build an Oracle REST Data Service RPM package with SystemV script.\n\n## Getting Started\n\nThese instructions will tell you how to use this container to build an RPM.\n\n### Prerequisities\n\nYou'll need some form of docker that can have a volume mounted where it'll put the RPM. \n\n[Boot2docker](http://boot2docker.io/) works if you want to test it on your local machine. The following commands once you run boot2docker will get it up an running. It mounts the \"/Users\" directory in the VM, we'll use this as the output path for the RPM to get it on our hosts directory.  \n\n```\nboot2docker init \nboot2docker up \neval \"$(boot2docker shellinit)\"\n```\n\nFor licensing reasons we can't distribute the ORDs zip file. [Download it](http://www.oracle.com/technetwork/developer-tools/rest-data-services/ords-30-downloads-2373781.html) and store it somewhere wget-able before we start.\n\n### Running\n\nAssuming you have a docker instance to communicate with\n\n```shell\ndocker build -t rpm-builder-ords . && docker run -e \"ORDS_ZIP=http://example.com/path/to/zip\" -v $(pwd):/rpmbuild rpm-builder-ords \n```\n\nWill cause an RPM to fall out at ```$(pwd)``` named ```ords-3.0.0.121.10.23-1.x86_64.rpm```\n\nYou can customise the RPM output directory in the container by setting the ```$RPM_OUTPUT_DIR``` environment variable.\n\n## RPM Details\n\n* The RPM will install to `/opt/ords.3.0.0/`\n* The RPM comes with a SystemV script\n* The SystemV script will configure ORDs from the `/opt/ords.3.0.0/params/ords_params.properties`. If this file is updated ORDs will be reconfigured when restarted. \n* The config file can have the parameters defined in the [documentation for ORDs](https://docs.oracle.com/cd/E56351_01/doc.30/e56293/config_file.htm#AELIG7204).\n\n## Testing the RPM\n\nThere is bundled a [vagrant](https://www.vagrantup.com/) file that starts a CentOS 6 machine, that can be used for testing the RPM.\n\nIt has a base image for [VirtualBox](https://www.virtualbox.org/).\n\n## Built With\n\n* [ORDs](http://www.oracle.com/technetwork/developer-tools/rest-data-services) - Great for avoiding connecting to Oracle directly.\n* [FPM](https://github.com/jordansissel/fpm) - Makes making RPMs very easy.\n* [Docker](https://www.docker.com) - So we can statically link to RedHat compatible binaries even if we're not running on RedHat.\n\n# Find us\n\n##  Docker repository\n[ukhomeofficedigital/lev-rpm-builder-ords](https://registry.hub.docker.com/u/ukhomeofficedigital/lev-rpm-builder-ords)\n\n## GitHub\n[UKHomeOffice/lev-rpm-builder-ords](https://github.com/UKHomeOffice/lev-rpm-builder-ords)\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](https://github.com/UKHomeOffice/lev-rpm-builder-ords/blob/master/code_of_conduct.md). By participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Authors\n\n* **Billie Thompson** - *Developer* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/lev-rpm-builder-ords/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](https://github.com/UKHomeOffice/lev-rpm-builder-ords/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* jordansissel for writing FPM and saving my santity trying to build RPMs\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-rpm-builder-openresty","private":false,"url":"https://github.com/UKHomeOffice/lev-rpm-builder-openresty","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Centos 6 OpenResty with Naxsi RPM Builder\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/lev-rpm-builder-openresty.svg?branch=master)](https://travis-ci.org/UKHomeOffice/lev-rpm-builder-openresty)\n\nThis project contains a Dockerfile for a container that will build an OpenResty RPM package with Naxsi and Lua included, statically linked to CentOS 6 packages.\n\n## Getting Started\n\nThese instructions will tell you how to use this container to build an RPM.\n\n### Prerequisities\n\nYou'll need some form of docker that can have a volume mounted where it'll put the RPM. \n\n[Boot2docker](http://boot2docker.io/) works if you want to test it on your local machine. The following commands once you run boot2docker will get it up an running. It mounts the \"/Users\" directory in the VM, we'll use this as the output path for the RPM to get it on our hosts directory.  \n\n```\nboot2docker init \nboot2docker up \neval \"$(boot2docker shellinit)\"\n```\n\n### Running\n\nAssuming you have a docker instance to communicate with\n\n```shell\ndocker build -t rpm-builder-waf . && docker run -v $(pwd):/rpmbuild rpm-builder-waf  \n```\n\nWill cause an RPM to fall out at ```$(pwd)``` named ```ngx_openresty-1.7.10.1-1.x86_64.rpm```\n\nYou can customise the RPM output directory in the container by setting the ```$RPM_OUTPUT_DIR``` environment variable.\n\n## RPM Details\n\n* The RPM will install to `/usr/local/openresty/`\n* The RPM comes with a SystemV script\n* The RPM will install example HTTPS certificate at ```/usr/local/openresty/nginx/conf/example.crt``` and ```/usr/local/openresty/nginx/conf/example.key```\n* The nginx configuration file to set which servers it connects to can be found at ```/usr/local/openresty/nginx/conf/nginx.conf```\n\n## Testing the RPM\n\nThere is bundled a [vagrant](https://www.vagrantup.com/) file that starts a CentOS 6 machine, that can be used for testing the RPM.\n\nIt has a base image for [VirtualBox](https://www.virtualbox.org/).\n\n## Built With\n\n* [OpenResty](http://openresty.org/) - It's very suitable for making WAF firewalls.\n* [FPM](https://github.com/jordansissel/fpm) - Makes making RPMs very easy.\n* [Docker](https://www.docker.com) - So we can statically link to RedHat compatible binaries even if we're not running on RedHat.\n* [Naxsi](https://github.com/nbs-system/naxsi) - Framework for writing Web Application Firewalls\n\n# Find us\n\n##  Docker repository\n[ukhomeofficedigital/lev-rpm-builder-openresty](https://registry.hub.docker.com/u/ukhomeofficedigital/lev-rpm-builder-openresty)\n\n## GitHub\n[UKHomeOffice/lev-rpm-builder-openresty](https://github.com/UKHomeOffice/lev-rpm-builder-openresty)\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](https://github.com/UKHomeOffice/lev-rpm-builder-openresty/blob/master/code_of_conduct.md). By participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Authors\n\n* **Billie Thompson** - *Developer* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/lev-rpm-builder-openresty/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](https://github.com/UKHomeOffice/lev-rpm-builder-openresty/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* jordansissel for writing FPM and saving my santity trying to build RPMs\n* The Naxsi team for writing an awesome module\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kb8or","private":false,"url":"https://github.com/UKHomeOffice/kb8or","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# kb8or\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/kb8or.svg?branch=master)](https://travis-ci.org/UKHomeOffice/kb8or)\n\nContinuous Deployment Tool for deploying with [Kubernetes](http://kubernetes.io/).\n\n## Features\n1. Will deploy any Kubernetes YAML files by creating / re-creating or do rolling update as required\n2. Monitors for success (including restarts) of applications (where [kubectl client](http://kubernetes.io/v1.0/docs/getting-started-guides/aws/kubectl.html) doesn't). \n3. Reports on failures and display logs and errors for failing resources\n3. Container images AND resource version management\n4. Application environment specific variables (for deployments to dev, pre-prod, production)\n\n## Pre-requisites\n1. A running Kubernetes cluster\n2. Either  \n   1. [Ruby](https://www.ruby-lang.org/en/documentation/installation/) 2.x, bundler, [kubectl client](http://kubernetes.io/v1.0/docs/getting-started-guides/aws/kubectl.html) client.  \n   2. [Docker](#docker-prerequisites).\n\n## Install (if not using Docker)\n   \n1. Download the [kubectl client](http://kubernetes.io/v1.0/docs/getting-started-guides/aws/kubectl.html).\n2. `bundle install`\n   \n## Usage\n\n### Schema\n\nAll features and configurable options are described in the [Schema Documentation](./docs/schema.md).\n\n### As a container:\n`docker run -it --rm -v ${PWD}:/var/lib/deploy quay.io/ukhomeofficedigital/kb8or --help`\n\n### Locally:\n`./kb8or.rb --help`\n\n### Deploy an 'environment':\n\nDeploy to \"default\" environment (usually vagrant):\n`./kb8or.rb mydeploy.yaml`\n\nDeploy to specific environment:\n`./kb8or.rb mydeploy.yaml --env pre-production`\n\nA deployment will do the following:\n\n1. Any (defaults.yaml) will be loaded (from the same directory as the deployment)\n2. Any environment data will then be parsed (based on EnvFileGlobPath set in config)\n3. Each deploy will be loaded and settings will be updated\n4. kubectl will be used to setup the Kb8or specific context settings (typically set per environment)\n4. Any Kubernetes .yaml files in the path specified will be parsed and deployed / updated as required.\n\n### Examples:\n\n* For a walk through of features see [docs/example/Example.md](docs/example/Example.md).\n* Example of creation of multiple ResourceControllers from a [templated Elasticsearch](docs/example/elasticsearch/Example.md) resource.\n\n## Docker-prerequisites\n\nIn order to run this in a container you'll need docker installed:\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nIt is currently hosted here: https://quay.io/repository/ukhomeofficedigital/kb8or\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](CONTRIBUTING.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\nTo create a new version:\n\n1. update the [version](version) file.\n2. Push a tag of the same version name to build Docker image at https://quay.io/repository/ukhomeofficedigital/kb8or\n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/lewismarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/kb8or/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\n* [Kubernetes](http://kubernetes.io/)\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-oracle-database-express-edition-11g","private":false,"url":"https://github.com/UKHomeOffice/docker-oracle-database-express-edition-11g","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Oracle Database Express Edition 11g Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-oracle-database-express-edition-11g.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-oracle-database-express-edition-11g)\n\nThis provides a docker container for Oracle XE 11g.\n\n## Usage\n\n### Basic Usage\n\nDue to licensing problems we cannot distribute the oracle RPM.\n\nHowever this doesn't mean the setup process has to be horribly complicated. Simply create a new docker file that extends this docker file, place the [zip from oracle with the RPM in](http://www.oracle.com/technetwork/database/database-technologies/express-edition/downloads/index.html) a ```docker_files``` directory, and build it.\n\nYour Dockerfile will be tiny and look like this:\n\n```Dockerfile\nFROM ukhomeofficedigital/oracle-xe-11g:2.0.2\n```\n\nSee [/example](https://github.com/UKHomeOffice/docker-oracle-database-express-edition-11g/tree/master/example) if you're not sure what I mean.\n\n### Volumes\n\nData is stored to the volume ```/u01/app/oracle```\n \n### Customise the database on first run\n\nThe container will try to run ```/init_only.sh``` before running Oracle XE if there aren't any data files. You can use this script to initialise your database, simply add it in the container you have created which extends this one.\n\n## Version Compatibility\n\nThis was built for oracle-xe-11.2.0-1.0, however with minor tweaks it would probably work for other versions.\n\n# Docker tags\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n# Find us\n\n##  Docker repository\n[ukhomeofficedigital/oracle-xe-11g](https://registry.hub.docker.com/u/ukhomeofficedigital/oracle-xe-11g)\n\n## GitHub\n[UKHomeOffice/docker-oracle-database-express-edition-11g](https://github.com/UKHomeOffice/docker-oracle-database-express-edition-11g)\n\n\n# Contributing\n\nFeel free to create pull requests or issues. \n\nPlease note that this project is released with a [Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-oracle-database-express-edition-11g/blob/master/code_of_conduct.md). By participating in this project you agree to abide by its terms.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/Office365-PowerShellScripts","private":false,"url":"https://github.com/UKHomeOffice/Office365-PowerShellScripts","license":null,"readme":"# Office 365 Powershell Scripts \nUse this repo for powershell scripts for user provisioning and reporting etc.\n\nDocument scritps in terms of functionality in this readme, but ideally scripts should contian comments so this page only needs to act as an index.\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-aws-drupal","private":false,"url":"https://github.com/UKHomeOffice/docker-aws-drupal","license":null,"readme":"","travis":"","contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-gateway","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-gateway","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"\n\n##### **NGINX Gateway**\n\nThe NGINX Gateway (version 1.9.2 with stream module) is a small container service used to provision TCP and HTTP[S] service from kubernetes (tested on version 0.18.2). Essetially we're not running in proper cloud provider but needed a dynamic means of provisioning external load balanced / exposed services. The data, i.e. services and minions is consumed the etcd cluster kubernetes is running via confd (note: confd is purely being used as a trigger to pull down the data and push into json arrays of services: [] and minions: [], the reason being that templating in go is hideous. \n\n    [template]\n    src   = \"nginx.conf.tmpl\"\n    dest  = \"/etc/nginx/config.json\"\n    keys  = [ \n      \"/registry/services/specs/\",\n      \"/registry/minions\",\n    ]\n    owner = \"root\"\n    mode  = \"0444\"\n    \n    reload_cmd = \"/usr/sbin/nginx -s reload\"\n    check_cmd  = \"/bin/nginx_check {{ .src }}\"\n\nOnce the data is in the config file: /bin/nginx_check is used to generate the nginx config, with in ruby erb. At the moment the container is pushed out via fleet and mapped to the docker host network (--net=host) so we don't have to preconfigure ports. \n\n##### **Services**\n\nThe load balancer config is store in the annontation of the service descriptor. Note, due to the fact that kubernetes wont allow complex types in annotation, i.e. will only support simple key values, I encode the content as a yaml string.\n\n    apiVersion: v1beta3\n    kind: Service\n    metadata:\n      labels:\n        name: gitlab-redis\n        role: service\n      name: gitlab-redis\n      annotations:\n        loadbalancer: |\n          6379:\n            # port: PORT  \n            type: tcp  \n    spec:\n      portalIP: 10.101.100.100\n      ports:\n        - port: 6379\n          targetPort: 6379\n      selector:\n        name: gitlab-redis\n\nBy default services use 'port' from the spec as the externally exposed spec, though this can be override using 'port' in the loadbalacer section. For websites\n  \n    apiVersion: v1beta3\n    kind: Service\n    metadata:\n      labels:\n        name: gitlab-web\n      name: gitlab-web\n      annotations:\n        loadbalancer: |\n          80:\n            type: http\n            vhost: gitlab.example.com\n            # paths: [] # optional nginx locations\n          443:\n            type: http\n            vhost: gitlab.example.com\n            ssl:\n              key: <filename>\n              cert: <filename>\n\nNote: at the moment the virtualhost on the same port are not consolidated, i.e say you have site X and you have Y backends which you wish to serve on different locations | url's; so / goes to default, /admin goes to backend 1 etc etc. At the moment, i'm not preprocessing the vhosts to perform this, a hash of vhost:port is maintained to ensure you dont try and add the same vhost on the same port.\n\n##### **Flannel & Service Ports** \n \nBy passing the -e FLANNEL_ENABLED=true flag into the container, the config generated assumed the docker host it's running on is a member or at the very least mapped into the flannel network and will thus use the portalIP / clusterIP to access the services. If the flag is not enabled we assume the service is being exposed via the NodePort or PublicIPs and use the minion ip addresses at the upstream backends in nginx.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-gradle","private":false,"url":"https://github.com/UKHomeOffice/docker-gradle","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Gradle\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-gradle.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-gradle)\n\nGradle in a docker image, the version of the image / tag will match the version of gradle\n\n## Getting Started\n\nThis is to provide the gradle tool as part of a CI pipeline / local delivery development pipeline\nfor a service. It's to make sure that CI can operate in a complete containerised world.\n\nCode is mounted into the container under /code where that becomes the WORKDIR and then gradle is run\nfrom that directory on the code\n\n### Environment Variables\n\n* `GRADLE_VERSION` - the version of gradle to pull down and install into the docker image\n* `GRADLE_ROOT` - the root of gradle\n* `GRADLE_HOME` - the home directory for gradle\n* `GRADLE_BIN`  - the bin directory for gradle\n\n### Volumes\n\n*  `/root/.gradle/caches` - this is where gradle is holding the cached files\n* `/code` - This is where the code is mounted and is also the WORKDIR\n\n### Other\n\n## Contributing\n\nContributions are most certainly welcome. If you want to introduce a breaking\nchange or any other major change, please raise an issue first to discuss.\n\n## License\n\n[MIT](LICENSE)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/s3secrets","private":false,"url":"https://github.com/UKHomeOffice/s3secrets","license":null,"readme":"### **S3SECRETS**\n\nIs a command line utility for retrieving, uploading and view files encryted via the AWS KMS service.\n\n```shell\n[jest@starfury s3secrets]$ bin/s3secrets help\nNAME:\n   s3secrets - is a utility for interacting to s3 and kms encrypted files\n\nUSAGE:\n   s3secrets [global options] command [command options] [arguments...]\n   \nVERSION:\n   v0.0.1\n   \nAUTHOR(S):\n   Rohith <gambol99@gmail.com> \n   \nCOMMANDS:\n    kms\t\tprovide a listing of the kms key presently available to us\n    buckets\tprovides a list of the buckets available to you\n    list\tproviding a file listing of the files currently in there\n    get\t\tretrieve one or more files from the s3 bucket\n    cat\t\tretrieves and displays the contents of one or more files to the stdout\n    put\t\tupload one of more files, encrypt and place into the bucket\n    edit\tperform an inline edit of a file either locally or from s3 bucket\n\nGLOBAL OPTIONS:\n   -p, --profile \t\t\t\t\tthe aws profile to use for static credentials [$AWS_DEFAULT_PROFILE]\n   -c, --credentials \"/home/jest/.aws/credentials\"\tthe path to the credentials file container the aws profiles [$AWS_SHARED_CREDENTIALS_FILE]\n   --access-key \t\t\t\t\tthe aws access key to use to access the resources [$AWS_ACCESS_KEY_ID]\n   --secret-key \t\t\t\t\tthe aws secret key to use when accessing the resources [$AWS_SECRET_ACCESS_KEY]\n   -o, --output-dir \"./secrets\"\t\t\t\tthe path to the directory in which to save the files [$KMSCTL_OUTPUT_DIR]\n   --session-token \t\t\t\t\tthe aws session token to use when accessing the resources [$AWS_SESSION_TOKEN]\n   -r, --region \"eu-west-1\"\t\t\t\tthe aws region where the resources are located [$AWS_DEFAULT_REGION]\n   -f, --format \"text\"\t\t\t\t\tthe format of the output to generate (accepts json, yaml or default text)\n   --help, -h\t\t\t\t\t\tshow help\n   --version, -v\t\t\t\t\tprint the version\n```\n\n- **Viewing the KMS keys**\n\n```shell\n[jest@starfury s3secrets]$ bin/s3secrets -p profile_name kms\n74cc9f02-7795-4fe4-888e-2aae97e3eff5     alias/aws/ebs           \n62c6abc6-d1d7-4203-ac3e-5733580dd4eb     alias/dev-kms-eu-west-1\n75430871-d667-4fa5-bfb1-54c832f1d973     alias/prod-kms-eu-west-1\n```\n\n- **Create a bucket and upload the files**\n\n```shell\n[jest@starfury s3secrets]$ export AWS_DEFAULT_PROFILE=profile_name\n[jest@starfury s3secrets]$ bin/s3secrets buckets create -n this-is-my-test-bucket-11991\nsuccessfully created the bucket: this-is-my-test-bucket-11991\n\n[jest@starfury s3secrets]$ ls\nbin  buckets.go  cmd.go  doc.go  files.go  formater.go  Godeps  keys.go  kmscli.iml  LICENSE  main.go  Makefile  release  utils.go\n\n[jest@starfury s3secrets]$ bin/s3secrets put -k 62c6abc6-d1d7-4203-ac3e-5733580dd4eb -b this-is-my-test-bucket-11991 *.go\nsuccessfully pushed the file: buckets.go to s3://this-is-my-test-bucket-11991/buckets.go\nsuccessfully pushed the file: cmd.go to s3://this-is-my-test-bucket-11991/cmd.go\nsuccessfully pushed the file: doc.go to s3://this-is-my-test-bucket-11991/doc.go\nsuccessfully pushed the file: files.go to s3://this-is-my-test-bucket-11991/files.go\nsuccessfully pushed the file: formater.go to s3://this-is-my-test-bucket-11991/formater.go\nsuccessfully pushed the file: keys.go to s3://this-is-my-test-bucket-11991/keys.go\nsuccessfully pushed the file: main.go to s3://this-is-my-test-bucket-11991/main.go\nsuccessfully pushed the file: utils.go to s3://this-is-my-test-bucket-11991/utils.go\n\n[jest@starfury s3secrets]$ bin/s3secrets ls -b this-is-my-test-bucket-11991 -l \nsome.user 2793       26 Apr 16 13:50 UTC  buckets.go\nsome.user 10237      26 Apr 16 13:50 UTC  cmd.go\nsome.user 687        26 Apr 16 13:50 UTC  doc.go\nsome.user 9610       26 Apr 16 13:50 UTC  files.go\nsome.user 1614       26 Apr 16 13:50 UTC  formater.go\nsome.user 1452       26 Apr 16 13:50 UTC  keys.go\nsome.user 661        26 Apr 16 13:50 UTC  main.go\nsome.user 1445       26 Apr 16 13:50 UTC  utils.go\n\n[jest@starfury s3secrets]$ bin/s3secrets cat -b this-is-my-test-bucket-11991 buckets.go | head\n/*\nCopyright 2015 All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\n\n[jest@starfury s3secrets]$ bin/s3secrets buckets delete -n this-is-my-test-bucket-11991 \n[error] operation failed, error: the bucket is not empty, either force (--force) deletion or empty the bucket\n\n[jest@starfury s3secrets]$ bin/s3secrets buckets delete -n this-is-my-test-bucket-11991 --force\nsuccessfully deleted the bucket: this-is-my-test-bucket-11991\n```\n* **Retrieve the files from the bucket**\n\n```shell\n[jest@starfury s3secrets]$ bin/s3secrets get -b this-is-my-test-bucket-11991 -r -d ./secrets /\nretrieved the file: buckets.go and wrote to: ./secrets/buckets.go\nretrieved the file: cmd.go and wrote to: ./secrets/cmd.go\nretrieved the file: doc.go and wrote to: ./secrets/doc.go\nretrieved the file: files.go and wrote to: ./secrets/files.go\nretrieved the file: formater.go and wrote to: ./secrets/formater.go\nretrieved the file: keys.go and wrote to: ./secrets/keys.go\nretrieved the file: main.go and wrote to: ./secrets/main.go\n```\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)","masterBranchProtection":false},{"name":"UKHomeOffice/docker-fedora-baseservices","private":false,"url":"https://github.com/UKHomeOffice/docker-fedora-baseservices","license":null,"readme":"# docker-fedora-baseservices\nDocker base services fedora image\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/check_byod","private":false,"url":"https://github.com/UKHomeOffice/check_byod","license":null,"readme":"# check_byod\nScript to check OS is compliant with CESG guidelines\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/aws_usersync","private":false,"url":"https://github.com/UKHomeOffice/aws_usersync","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# aws_usersync\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/aws_usersync.svg?branch=master)](https://travis-ci.org/UKHomeOffice/aws_usersync)\n\nThis is used for syncing users from AWS to the local machine as well as their user key. It runs as a daemon and polls with whatever interval you define. By default it is set to run only once and exit, but this can be overriden.\n\nThe default group people are added to is sudo, but this can be overriden to add users to an alternative group.\n\nThis was written primarily to only work with AWS and also CoreOS. The user keys are really for AWS CodeCommit service, however, as they are\nassociated with the IAM account, they become accessible through IAM. It isn't particularly obvious that you need to place your key there but this is where it needs to go. \n\n### AWS IAM\n\nIf a user logs in to AWS Console and goes to AWS IAM Identity Access Management and then their own user, there is the codecommit section at the bottom. Users can paste in their public key in there, or multiple and make them active. This tool will only sync active keys, if you make a key inactive, then it will replace the keys on the box with only the active ones. \n\n#### IAM POLICY\n\nBelow is the policy that needs to be associated with the instances you are provisioning. Once you have created this, you can assign this to instances to give the relevant access to the instance to get the keys / users / groups.\n\n```\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n       {\n           \"Sid\": \"Stmt1442396947000\",\n           \"Effect\": \"Allow\",\n           \"Action\": [\n               \"iam:GetGroup\",\n               \"iam:GetSSHPublicKey\",\n               \"iam:GetUser\",\n               \"iam:ListSSHPublicKeys\"\n           ],\n           \"Resource\": [\n               \"arn:aws:iam::*\"\n           ]\n       }\n   ]\n}\n```\n\n\n### How to use this\n\nYou can build the go application by running:\n```\ngit clone git@github.com:UKHomeOffice/aws_usersync.git\ncd aws_usersync\ndocker run --rm -it -v \"$PWD\":/go -w /go quay.io/ukhomeofficedigital/go-gb:1.0.0 gb build all\n```\n\nThis will build the application in the current directory creating a bin/aws_usersync binary\n\nTo run the application you need to set environment variables or have relevant access to IAM:\n\n```\nexport AWS_ACCESS_KEY_ID=12345678893\nexport AWS_SECRET_ACCESS_KEY=30302499439434\n./bin/aws_usersync -g=\"group1,group2,group3\"\n```\n\nThis will grab all the users within that group and add them locally with relevant keys as a one time run, to run this at an interval of 5 minutes\n\n```\nexport AWS_ACCESS_KEY_ID=12345678893\nexport AWS_SECRET_ACCESS_KEY=30302499439434\n./bin/aws_usersync -o=false -i=5 -g=\"group1,group2,group3\"\n```\n\nFor debugging issues you can run it in debug mode\n```\n./bin/aws_usersync -o=false -i=5 -g=\"group1,group2,group3\" -L=debug\n```\n\n##### Notes\nThis is new and needs some cleanup on the code really and improving as it's a bit jumbled together in areas, but there are retrospective\nissues raised for things, to clean things up. \n\n\n","travis":true,"contributing":"# Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n","masterBranchProtection":false},{"name":"UKHomeOffice/brp-maintenance","private":false,"url":"https://github.com/UKHomeOffice/brp-maintenance","license":null,"readme":"# brp-maintenance\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-centos-base","private":false,"url":"https://github.com/UKHomeOffice/docker-centos-base","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Base Image for the Home Office\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-centos-base.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-centos-base)\n\nThis is a base image to ensure that all home office containers are starting from a known state. This allows us to \nmonitor for security problems in only one operating system, rather than 5 or 6. It also gives us a place to insert \nfixes.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nThis container has no entrypoint.\n\nThis will run bash (or anything else if you replace bash).\n\n```shell\ndocker run -it quay.io/ukhomeofficedigital/centos-base bash\n```\n\n## Built With\n\n* CentOS 7\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-centos-base)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/centos-base)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting\npull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-centos-base/tags). \n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-centos-base/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-dropwizard","private":false,"url":"https://github.com/UKHomeOffice/docker-dropwizard","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Dropwizard\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-dropwizard.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-dropwizard)\n\nThis is an onbuild container for Dropwizard.\n\n## Assumptions\n\n* You are using Maven 3 to build\n\n### Getting started\n\nCreate a Dockerfile in your project and extend this one with the additional ports you app expose. \nAlso specify the command to run the server including the jar file.\n\n```docker\nFROM ukhomeofficedigital:dropwizard\n\nCMD [\"target/my-java-app.jar\", \"server\", \"maybe-a-config.yml\"]\n\nEXPOSE 8080\nEXPOSE 8081\n```\n\nThen build!\n\nYou can change the CMD if you want to pass more than `server configuration.yml` to the jar.\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to \ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-dropwizard/blob/master/code_of_conduct.md).\n By participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [Semantic Versioning](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-dropwizard/graphs/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](https://github.com/UKHomeOffice/docker-dropwizard/blob/master/LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/ff","private":false,"url":"https://github.com/UKHomeOffice/ff","license":null,"readme":"# dsp-frontend-boilerplate\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-redis","private":false,"url":"https://github.com/UKHomeOffice/docker-redis","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# docker-redis\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-redis.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-redis)\n\nDocker image for redis. This image is designed to be used with kubernetes, it\nmay work outside kubernetes as well.\n\nIt is highly recommended to read through [redis sentinel\ndocumentation](http://redis.io/topics/sentinel).\n\n## Launching it in kubernetes\n\nFirst of all create a single replica pod of redis and redis-sentinel. Both\ncontainers will notice that `${REDIS_SENTINEL_SERVICE_HOST}` and\n`${REDIS_SENTINEL_SERVICE_PORT}` are empty and assume that this is an initial\nbootstrap of redis. Redis sentinel will connect to the master at `$(hostname\n-i)` and start monitoring it.\n\n```\nkubectl create -f kube/redis-controller.yaml\n```\n\nThen you need to create redis sentinel service, which will become your redis\nsentinel endpoint for the following redis pods.\n\n```\nkubectl create -f kube/redis-sentinel-service.yaml\n```\n\nOnce the service is up and running, you can check whether it is working\nproperly. Run the following command in some temporary container.\n\n```\nredis-cli -h ${REDIS_SENTINEL_SERVICE_HOST} -p 26379 INFO\n```\n\nNext, we can start scaling our redis out. It is recommended to add redis and\nredis-sentinel replicas one by one.\n\n```\nkubectl scale rc redis --replicas=2\n```\n\nWait a minute and check on the sentinel service `redis-cli -h\n${REDIS_SENTINEL_SERVICE_HOST} -p 26379 INFO`, then scale to `--replicas=3`.\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker MySQL Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql)\n\nDocker MySQL Container that extends the official home office docker base image.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nParameters passed to the container will be passed onto `mysqld`\n\n```shell\ndocker run \\\n       -e 'MYSQL_ROOT_PASSWORD=my-password' \\\n       quay.io/ukhomeofficedigital/mysql:v0.5.0 \\\n       -yr --param=eters\n```\n\nPassing MySQLd  will start MySQLd without any parameters.  \n\n```shell\ndocker run \\\n    -e 'MYSQL_ROOT_PASSWORD=my-password' \\\n    quay.io/ukhomeofficedigital/mysql:v0.5.0 \\\n    mysqld\n```\n\nStarting MySQLd without any parameters is also the default behaviour.\n\n```shell\ndocker run \\\n    -e 'MYSQL_ROOT_PASSWORD=my-password' \\\n    quay.io/ukhomeofficedigital/mysql:v0.5.0 \\\n```\n\nYou can also run arbitrary stuff\n\n```shell\ndocker run quay.io/ukhomeofficedigital/mysql:v0.5.0 bash\n```\n\n#### Environment Variables\n\n* `MYSQL_ROOT_PASSWORD` - The password you want to set as the root password\n* `MYSQL_ROOT_PASSWORD_PATH` - Alternatively, you can put the password at a path and read it from \n  there\n* `MYSQL_ALLOW_EMPTY_PASSWORD` - Set this to true if you want to be able to set a blank password\n\n#### Volumes\n\n* `/var/lib/mysql` - MySQL Data Files\n\n#### Useful File Locations\n\n* `/docker-entrypoint-initdb.d/*.sql` - Any SQL file in that location will be loaded into the \n  database on container init \n  \n* `/healthcheck.sh` - You can execute this file to check the health of the mysql installation. It \n  does `SELECT 1+1` on the database.\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql/tags). \n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mysql/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* Large portions of this container are taken from the \n  [official mysql docker container](https://hub.docker.com/_/mysql/).\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-openjdk8-gradle","private":false,"url":"https://github.com/UKHomeOffice/docker-openjdk8-gradle","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"#docker-openjdk8-gradle\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-openjdk8-gradle.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-openjdk8-gradle)\n\nBuilds upon ukhomeofficedigital/centos-base by adding openjdk8 and running gradlew.\n\n##Assumptions\n\n* you use the installApp plugin to generate your Build\n\n##Usage\n\nBase your application on this image like so:\n\n###Dockerfile\n```\nFROM quay.io/ukhomeofficedigital/openjdk8-gradle:v0.1.0\n\nCMD [\"build/install/myapp/bin/myapp\", \"server\", \"src/main/resources/myconfiguration.yaml\"]\n\nEXPOSE 8080\nEXPOSE 8081\n```\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-nodejs","private":false,"url":"https://github.com/UKHomeOffice/docker-nodejs","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Node.JS On Build Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-nodejs.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-nodejs)\n\nThis is an onbuild container for Node.JS Projects. \n\n## Usage  \n\nThis docker container is an `ONBUILD`. Simply extend the Dockerfile in your application with this Dockerfile and your \nproject will be copied into the `/app` directory and have `npm install` run on it.  You must ensure that your \ndownstream images sets USER nodejs and additionally in rare cases any required permission beyond read. You must also ensure that your application will listen on port 8080.\n\nPlease note, storing state on this container is not recommended, and logs should be written to stdout, thus adding further \npermissions isn't something we'd normally envision.\n\n### Container Parameters\n\n* `start`, `test` or `run` will run `npm COMMAND`\n\nThe following command will run `npm start` on the code within the container\n\nSo if your Dockerfile looks like this\n```shell\nFROM quay.io/ukhomeofficedigital/nodejs:v3.0.0\n\nUSER nodejs\nCMD [\"start\"]\n```\n\nThe following will run `npm start`:\n\n```shell\ndocker run your-docker-container:latest\n```\n\nYou can also run arbitrary commands such as:\n\n```shell\ndocker run your-docker-container:latest /opt/nodejs/bin/npm run \n```\n\nHowever, we'd prefered there was a standard way to start your app and thus,\nhave settled on `npm start` being the canonical way to run your app.\n\n\n### Useful Directories\n\n* `/app` - Where you app will be copied to on build\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to \ndiscuss it in an issue first.\n\nPlease note that this project is released with a \n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-nodejs/blob/master/CODE_OF_CONDUCT.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Build With\n\n* Node v4.4.2\n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of \n[contributors](https://github.com/UKHomeOffice/docker-nodejs/graphs/contributors) who participated \nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the \n[LICENSE.md](https://github.com/UKHomeOffice/docker-nodejs/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* [NodeJS](https://nodejs.org/)\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-proxy","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-proxy","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# OpenResty Docker Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-nginx-proxy.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-nginx-proxy)\n\nThis container aims to be a generic proxy layer for your web services. It includes OpenResty with \nLua and NAXSI filtering compiled in.\n\n## Getting Started\n\nIn this section I'll show you some examples of how you might run this container with docker.\n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n## Usage\n\n### Environment Variables\n\n#### Multi-location Variables\n\nVariables to control how to configure the proxy (can be set per location, see \n[Using Multiple Locations](#using-multiple-locations)).\n\n* `PROXY_SERVICE_HOST` - The upstream host you want this service to proxy.\n* `PROXY_SERVICE_PORT` - The port of the upstream host you want this service to proxy.\n* `NAXSI_RULES_URL_CSV` - A CSV of [Naxsi](https://github.com/nbs-system/naxsi) URL's of files to download and use. \n(Files must end in .rules to be loaded)\n* `NAXSI_RULES_MD5_CSV` - A CSV of md5 hashes for the files specified above\n* `EXTRA_NAXSI_RULES` - Allows NAXSI rules to be specified as an environment variable. This allows one or two extra  \nrules to be specified without downloading or mounting in a rule file.\n* `NAXSI_USE_DEFAULT_RULES` - If set to \"FALSE\" will delete the default rules file.\n* `ENABLE_UUID_PARAM` - If set to \"FALSE\", will NOT add a UUID url parameter to all requests. The Default will add this\n for easy tracking in down stream logs e.g. `nginxId=50c91049-667f-4286-c2f0-86b04b27d3f0`.\n If set to `HEADER` it will add `nginxId` to the headers, not append to the get params.\n* `CLIENT_CERT_REQUIRED` - if set to `TRUE`, will deny access at this location, see [Client Certs](#client-certs).\n* `VERIFY_SERVER_CERT` - if set to `TRUE`, will verify the upstream server's TLS certificate is valid and signed by the CA, see [Verifying Upstream Server](#verifying-upstream-server).\n* `USE_UPSTREAM_CLIENT_CERT` - if set to `TRUE`, will use the set of upstream client certs when connecting upstream, see [Upstream Client Certs](#upstream-client-certs).\n* `ERROR_REDIRECT_CODES` - Can override when Nginx will redirect requests to its own error page. Defaults to\n\"`500 501 502 503 504`\". To support a new code, say `505`, an error page must be provided at\n`/usr/local/openresty/nginx/html/505.shtml`, see [Useful File Locations](#useful-file-locations).\n* `ADD_NGINX_LOCATION_CFG` - Arbitrary extra NGINX configuration to be added to the location context, see \n[Arbitrary Config](#arbitrary-config).\n* `PORT_IN_HOST_HEADER` - If FALSE will remove the port from the http `Host` header.\n* `BASIC_AUTH` - Define a path for username and password file (in `username:password` format), this will turn the file into a .htpasswd file.\n* `REQS_PER_MIN_PER_IP` - Will limit requests based on IP e.g. set to 60 to allow one request per second.\n* `CONCURRENT_CONNS_PER_IP` - Will limit concurrent connections based on IP e.g. set to 10 to allow max of 10 connections per browser or proxy!\n* `REQS_PER_PAGE` - Will limit requests to 'bursts' of x requests at a time before terminating (will default to 20)\n* `DENY_COUNTRY_ON` - Set to `TRUE` to deny access to countries not listed in ALLOW_COUNTRY_CSV with 403 status for a location (set location for 403 with ADD_NGINX_LOCATION_CFG).\n\n#### Single set Variables\n\nNote the following variables can only be set once:\n\n* `ADD_NGINX_SERVER_CFG` - Arbitrary extra NGINX configuration to be added to the server context, see \n[Arbitrary Config](#arbitrary-config)\n* `ADD_NGINX_HTTP_CFG` - Arbitrary extra NGINX configuration to be added to the http context, see\n[Arbitrary Config](#arbitrary-config)\n* `LOCATIONS_CSV` - Set to a list of locations that are to be independently proxied, see the example \n[Using Multiple Locations](#using-multiple-locations). Note, if this isn't set, `/` will be used as the default \nlocation.\n* `LOAD_BALANCER_CIDR` - Set to preserve client IP addresses. *Important*, to enable, see \n[Preserve Client IP](#preserve-client-ip).\n* `NAME_RESOLVER` - Can override the *default* DNS server used to re-resolve the backend proxy (based on TTL). \nThe *Default DNS Server* is the first entry in the resolve.conf file in the container and is normally correct and \nmanaged by Docker or Kubernetes.  \n* `CLIENT_MAX_BODY_SIZE` - Can set a larger upload than Nginx defaults in MB.\n* `HTTPS_REDIRECT_PORT` - Only required for http to https redirect and only when a non-standard https port is in use. \nThis is useful when testing or for development instances or when a load-balancer mandates a non-standard port.\n* `LOG_FORMAT_NAME` - Can be set to `text` or `json` (default).\n* `NO_LOGGING_URL_PARAMS` - Can be set to `TRUE` if you don't want to log url params. Default is empty which means URL params are logged\n* `NO_LOGGING_BODY` - Defaults to true `TRUE`.  Set otherwise and nginx should log the request_body.\n* `NO_LOGGING_RESPONSE` - Defaults to true `TRUE`.  Set otherwise and nginx should log the response_body\n* `SERVER_CERT` - Can override where to find the server's SSL cert.\n* `SERVER_KEY` - Can override where to find the server's SSL key.\n* `SSL_CIPHERS` - Change the SSL ciphers support default only AES256+EECDH:AES256+EDH:!aNULL\n* `SSL_PROTOCOLS` - Change the SSL protocols supported default only TLSv1.2\n* `HTTP_LISTEN_PORT` - Change the default inside the container from 80.\n* `HTTPS_LISTEN_PORT` - Change the default inside the container from 443.\n* `INTERNAL_LISTEN_PORT` - Change the default inside the container from 10418. Note: This is used for internal processing and is not available externally.\n* `HTTPS_REDIRECT` - Toggle whether or not we force redirects to HTTPS.  Defaults to true.\n* `ALLOW_COUNTRY_CSV` - List of [country codes](http://dev.maxmind.com/geoip/legacy/codes/iso3166/) to allow.\n* `STATSD_METRICS_ENABLED` - Toggle if metrics are logged to statsd (defaults to true)\n* `STATSD_SERVER` - Server to send statsd metrics to, defaults to 127.0.0.1\n\n### Ports\n\nThis container exposes\n\n* `80` - HTTP\n* `443` - HTTPS\n\nN.B. see HTTP(S)_LISTEN_PORT above\n\n### Useful File Locations\n\n* `nginx.conf` is stored at `/usr/local/openresty/nginx/conf/nginx.conf`\n* `/etc/keys/crt` & `/etc/keys/key` - A certificate can be mounted here to make OpenResty use it. However a self \n  signed one is provided if they have not been mounted.\n* `/etc/keys/client-ca` If a client CA is mounted here, it will be loaded and configured. \nSee `CLIENT_CERT_REQUIRED` above in [Environment Variables](#environment-variables).\n* `/etc/keys/upstream-server-ca` A CA public cert must be mounted here when verifying the upstream server's certificate is required.\nSee `VERIFY_SERVER_CERT` above in [Environment Variables](#environment-variables).\n* `/etc/keys/upstream-client-crt` A public client cert must be mounted here when when the upstream server requires client cert authentication.\nSee `USE_UPSTREAM_CLIENT_CERT` above in [Environment Variables](#environment-variables).\n* `/etc/keys/upstream-client-key` A private client key must be mounted here when when the upstream server requires client cert authentication.\nSee `USE_UPSTREAM_CLIENT_CERT` above in [Environment Variables](#environment-variables).\n* `/usr/local/openresty/naxsi/*.conf` - [Naxsi](https://github.com/nbs-system/naxsi) rules location in default \nnginx.conf.\n* `/usr/local/openresty/nginx/html/$CODE.shtml` - HTML (with SSI support) displayed when a the status code $CODE\nis encountered upstream and the proxy is configured to intercept. See ERROR_REDIRECT_CODES to change this.\n* `/usr/local/openresty/nginx/html/418-request-denied.shtml` - HTML (with SSI support) displayed when NAXSI\nblocks a request.\n\n### Examples\n\n#### Self signed SSL Certificate\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Custom SSL Certificate\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -p 8443:443 \\\n           -v /path/to/key:/etc/keys/key:ro \\\n           -v /path/to/crt:/etc/keys/crt:ro \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Preserve Client IP\n\nThis proxy supports [Proxy Protocol](http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt).\n\nTo use this feature you will need:\n\n* To enable [proxy protocol](http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt) on your load balancer.  \n  For AWS, see [Enabling Proxy Protocol for AWS](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-proxy-protocol.html).\n* Find the private address range of your load balancer.  \n  For AWS, this could be any address in the destination network. E.g.\n  if you have three compute subnets defined as 10.50.0.0/24, 10.50.1.0/24 and 10.50.2.0/24,\n  then a suitable range would be 10.50.0.0/22 see [CIDR Calculator](http://www.subnet-calculator.com/cidr.php).\n  \n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'LOAD_BALANCER_CIDR=10.50.0.0/22' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Extra NAXSI Rules from Environment\n\nThe example below allows large documents to be POSTED to the /documents/uploads and /documents/other_uploads locations.\nSee [Whitelist NAXSI rules](https://github.com/nbs-system/naxsi/wiki/whitelists) for more examples.\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://myapp.svc.cluster.local' \\\n           -e 'PROXY_SERVICE_PORT=8080' \\\n           -e 'EXTRA_NAXSI_RULES=BasicRule wl:2 \"mz:$URL:/documents/uploads|BODY\";\n               BasicRule wl:2 \"mz:$URL:/documents/other_uploads|BODY\";' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Using Multiple Locations\n\nWhen the LOCATIONS_CSV option is set, multiple locations can be proxied. The settings for each proxy location can be \ncontrolled with the use of any [Multi-location Variables](#multi-location-variables) by suffixing the variable name with\n both a number, and the '_' character, as listed in the LOCATIONS_CSV variable. \n \n##### Two servers \n\nThe example below configures a simple proxy with two locations '/' (location 1) and '/api' (location 2):\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST_1=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT_1=80' \\\n           -e 'PROXY_SERVICE_HOST_2=https://api.svc.cluster.local' \\\n           -e 'PROXY_SERVICE_PORT_2=8888' \\\n           -e 'LOCATIONS_CSV=/,/api' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```           \n\nFor more detail, see the [generated config](./docs/GeneratedConfigs.md#two-separate-proxied-servers).\n\n##### One Server, Multiple locations\n\nThe example below will proxy the same address for two locations but will disable the UUID (nginxId) parameter for the\n/about location only.\n\nSee the [generated config](./docs/GeneratedConfigs.md#same-server-proxied) for below:\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'LOCATIONS_CSV=/,/about' \\\n           -e 'ENABLE_UUID_PARAM_2=FALSE' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Client Certs\n\nIf a client CA certificate is mounted, the proxy will be configured to load it. If a client has the cert, the client CN\nwill be set in the X-Username header and logged.\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -v \"${PWD}/client_certs/ca.crt:/etc/keys/client-ca\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nThe following example will specifically deny access to clients without a cert:\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://serverfault.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'LOCATIONS_CSV=/,/about' \\\n           -e 'CLIENT_CERT_REQUIRED_2=TRUE' \\\n           -v \"${PWD}/client_certs/ca.crt:/etc/keys/client-ca\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\nSee [./client_certs](./client_certs) for scripts that can be used to generate a CA and client certs.  \n\n#### Upstream Client Certs\n\nIf the environment variable `USE_UPSTREAM_CLIENT_CERT` is set to `TRUE`\nthen the client certs at `/etc/keys/upstream-client-crt` and\n`/etc/keys/upstream-client-key` will be used to authenticate with the\nupstream HTTPS service.\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=https://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=443' \\\n           -e 'USE_UPSTREAM_CLIENT_CERT=TRUE' \\\n           -v \"/path/to/client-public.crt:/etc/keys/upstream-client-crt\" \\\n           -v \"/path/to/client-private.key:/etc/keys/upstream-client-key\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v2.1.0\n```\n\n#### Verifying Upstream Server\n\nIf the environment variable `VERIFY_SERVER_CERT` is set to `TRUE` then\nthe upstream server's certificate will be validated against the CA\npublic cert at `/etc/keys/upstream-server-ca`.\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=https://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=443' \\\n           -e 'VERIFY_SERVER_CERT=TRUE' \\\n           -v \"/path/to/ca.crt:/etc/keys/upstream-server-ca\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v2.1.0\n```\n\n#### Arbitrary Config\n\nThe example below will return \"ping ok\" for the URL /ping.\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'ADD_NGINX_LOCATION_CFG=if ($uri = /proxy-ping) return 200 \"ping ok\";' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nThe example below will return \"404\" for the URL /notfound.\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'ADD_NGINX_SERVER_CFG=location /notfound { return 404; };' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nThe example below enables proxy_cache_path directive.  Allows you to define where cached files are stored.\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'ADD_NGINX_HTTP_CFG=proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=static:10m;' \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\n#### Basic Auth\n\nTo add basic auth to your server you need to define the username and password by mounting a file and defining that file in the `BASIC_AUTH` variable, then add the location config to you config.\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://stackexchange.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'ADD_NGINX_LOCATION_CFG='auth_basic \"Restricted\"; auth_basic_user_file /etc/secrets/.htpasswd;' \\\n           -e BASIC_AUTH='/etc/secrets/basic-auth'\n           -p 8443:443 \\\n           -v ~/Documents:/etc/secrets/\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nThe basic auth file will look like this.\n```shell\nadmin:testing\nusername:password\n```\n##### Basic Auth on mutliple Locations\n\nIf you're using multiple locations then we need to define the location that basic_auth will be set in relation to the `LOCATIONS_CSV`\n\n```shell\ndocker run -e 'PROXY_SERVICE_HOST=http://serverfault.com' \\\n           -e 'PROXY_SERVICE_PORT=80' \\\n           -e 'LOCATIONS_CSV=/,/about' \\\n           -e 'CLIENT_CERT_REQUIRED_2=TRUE' \\\n           -e BASIC_AUTH_2=/etc/secrets/basic-auth \\\n           -v \"${PWD}/client_certs/ca.crt:/etc/keys/client-ca\" \\\n           -p 8443:443 \\\n           quay.io/ukhomeofficedigital/nginx-proxy:v1.0.0\n```\n\nthis will setup basic-auth for the the `/about` location or simply swap the 2 for a 1 to setup basic auth for the root location. \n\n\n\n## Built With\n\n* [OpenResty](https://openresty.org/) - OpenResty (aka. ngx_openresty) is a full-fledged web\n  application server by bundling the standard Nginx core, lots of 3rd-party Nginx modules, as well \n  as most of their external dependencies.\n* [Nginx](https://www.nginx.com/resources/wiki/) - The proxy server core software.\n* [ngx_lua](http://wiki.nginx.org/HttpLuaModule) - Embed the power of Lua into Nginx\n* [Naxsi](https://github.com/nbs-system/naxsi) - NAXSI is an open-source, high performance, low \n  rules maintenance WAF for NGINX \n* [GeoLite data](http://www.maxmind.com\">http://www.maxmind.com) This product includes GeoLite data created by MaxMind.\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-nginx-proxy)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/nginx-proxy)\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to \ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Authors\n\n* **Lewis Marshal** - *Initial work* - [lewismarshall](https://github.com/lewismarshall)\n\nSee also the list of \n[contributors](https://github.com/UKHomeOffice/docker-nginx-proxy/graphs/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/dropwizard-sample-gradle","private":false,"url":"https://github.com/UKHomeOffice/dropwizard-sample-gradle","license":null,"readme":"#Dropwizard Sample Application with Gradle\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/dropwizard-sample-gradle.svg?branch=master)](https://travis-ci.org/UKHomeOffice/dropwizard-sample-gradle)\n\nThis is a sample application using Gradle for the build and package\n\n##Building\n\n```\n./gradlew installApp\n```\n\n##Running\n\n```\nbuild/install/dropwizard-gradle-sample/bin/dropwizard-gradle-sample server\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/jenkins-docker-aws","private":false,"url":"https://github.com/UKHomeOffice/jenkins-docker-aws","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# DOCKER JENKINS\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/jenkins-docker-aws.svg?branch=master)](https://travis-ci.org/UKHomeOffice/jenkins-docker-aws)\n\nThis folder contains the build for a docker image of jenkins with given plugins. Features include:\n- Backing up and restoring of config from Amazon S3\n- Includes docker, git, awscli\n- Includes kubectl and restoration of corresponding config from encrypted file in Amazon S3\n- Includes restoration of encrypted config for docker logins from encrypted file in Amazon S3\n\nTo automatically build and push a new version to your chosen docker repository from this folder run:\n```bash\n$ ./build_and_push.sh <repositoryname>/<username>/<reponame>:<tag>\n```\ne.g.\n```bash\n./build_and_push.sh quay.io/timgent/aws-jenkins:v0.5\n```\n\n# Syncing config from S3 bucket\nJenkins docker image. Jenkins configuration can be synced from AWS S3 bucket at\nstartup.\n\nBy default there is only one-way configuration sync, but you can set up a jenkins\njob which syncs `${JENKINS_HOME}` to the same S3 bucket, so next time you start\nthis container you will have all your config loaded at startup time.\n\nIf `JENKINS_HOME_S3_BUCKET_NAME` is set, bucket config will be written out to\n`/etc/jenkins-bucket-config`, which is used by\n`/srv/jenkins/jenkins_backup.sh`. So you can just simply create a jenkins job\nwhich runs the backup script.\n\nConfiguration is done using environment variables.\n\nAuthentication to S3 bucket can be passed in via `AWS_SECRET_ACCESS_KEY` and\n`AWS_ACCESS_KEY_ID` or EC2 instance IAM role.\n\n- `JENKINS_HOME` Default: `/var/lib/jenkins`. If you decide to change this,\n  make sure you run docker container with `-v <new_jenkins_home>` set\n- `JENKINS_HOME_S3_BUCKET_NAME` Default: unset. If unset, config sync will not run\n- `JAVA_OPTS` Default: unset.\n- `JENKINS_OPTS` Default: unset. Any valid jenkins parameter is supported\n\n# Secrets for kubeconfig and dockercfg\n## Option 1 - getting secrets from S3\nkubeconfig and docker login config syncing to S3 bucket are supported. You will need to encrypt and upload dockercfg and kubeconfig files to your chosen S3 buckets to enable this. For example to encrypt:\n\n`aws kms encrypt --key-id xxxxxxx --plaintext \"$(cat dockercfg)\" --query CiphertextBlob --output text | base64 -d > dockercfg.encrypted`\n\nThen upload to s3. The bucket name will need to be set as an environment variable SECRETS_BUCKET when the container is run.\n## Option 2 - map secrets in using volumes\nUsing plain docker you can map secrets in with the -v command when running this container.\n- Kube config needs to be mapped in to /root/.kube/config\n- Docker config needs to be mapped in to /root/.docker/config.json\nIf you are running this container using kubernetes then kubernetes secrets can be used to map these in as volumes as usual. Documentation is available [here](https://github.com/kubernetes/kubernetes/tree/master/docs/user-guide/secrets)\n\n# Enabling docker in docker\nThis container containers docker which enables it to execute docker commands using the host machines docker daemon. To enable this the docker socket will need to be mapped in as a volume to the container like:\n-v /var/run/docker.sock:/var/run/docker.sock\n\n# Running\n\n```bash\ndocker run \\\n  -e AWS_SECRET_ACCESS_KEY=xxx \\\n  -e AWS_ACCESS_KEY_ID=xxx \\\n  -e JENKINS_HOME_S3_BUCKET_NAME=example-jenkinsconfig-us-east-1 \\\n  -e SECRETS_BUCKET=my_secrets_bucket \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -p 8080:8080 state/jenkins\n```\n\n# Useful Paths\n\nYou may choose to mount your Amazon secrets in a file that looks like this at\n`/root/.aws/credentials`\n\n```\n[default]\naws_access_key_id = xxx\naws_secret_access_key = xxx\n```\n\nRather than via your environment variables.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mongonodejava8","private":false,"url":"https://github.com/UKHomeOffice/docker-mongonodejava8","license":null,"readme":"# docker-mongonodejava8\nImage that has Sun Java 8, mongodb and node installed.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/registered-traveller-devops","private":false,"url":"https://github.com/UKHomeOffice/registered-traveller-devops","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-logstash-s3","private":false,"url":"https://github.com/UKHomeOffice/docker-logstash-s3","license":null,"readme":"# docker-logstash-s3\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-logstash-s3.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-logstash-s3)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-s3-backup","private":false,"url":"https://github.com/UKHomeOffice/docker-s3-backup","license":null,"readme":"# docker-archive\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-archive.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-archive)\n\nSo this is how we do backups.\n\nIt looks at the share dir for a configureable named file; \"*.tar.gz\" by default.\nGPG the file\nUploads to s3.\n\nRuns in a cruddy while loop.\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-go-gb","private":false,"url":"https://github.com/UKHomeOffice/docker-go-gb","license":null,"readme":"# docker-go-gb\nFor using gb build and fetch for go applications\n\n# Build the image\ndocker build -t <user>/<repo>:<version> .\n\n# Example use case if the image is built and pushed into a repo\ncd \"$GO_REPO\"\ndocker run --rm -it -v \"$PWD\":/go -w /go quay.io/ukhomeofficedigital/go-gb:1.0.0 gb build all\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vaultconf","private":false,"url":"https://github.com/UKHomeOffice/vaultconf","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"[![Build Status](https://travis-ci.org/UKHomeOffice/vaultconf.svg)](https://travis-ci.org/UKHomeOffice/vaultconf)\n\n# Vaultconf\nA command line tool to allow mass configuration updates in vault with support included for kubernetes. Functions include:\n- update of policies in vault\n- update of users in Vault\n \nFor more context please see this [blog post](http://timturnstechie.blogspot.co.uk/2015/10/vaultconf-managing-vault-logins-for.html).\n\n## Installation\nThis tool has not yet been setup as a Ruby gem, though it would be easy to do so. Instead we recommend running using docker to ensure no dependency issues:\n\ne.g. docker run --net=host -v policies:/policies -ti quay.io/ukhomeofficedigital/vaultconf policies -c /policies -u user -p password -a http://localhost:8200 --nokube\nNB: In this example --net=host is needed as we are accessing a local vault server. This is not required for accessing remote vault servers.\n\n## Usage\nRun with option --help to show command line help.\n\nExample usage is included in vaultconf.feature.\nExample policies directory structure is provided in test/resources/policies.\nExample users yaml structure is provided in test/resources/users/users/yaml\n\nIn order to not need to define password in the command line vaultconf can read login details from a file called \"login\" in the .vaultconf directory in your home directory. The format for this file is as follows:\n``` yaml\n---\nusername: myusername\npassword: mypassword\n```\n\n## Development\n\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `bin/console` for an interactive prompt that will allow you to experiment.\n\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the version number in `version.rb`, and then run `bundle exec rake release` to create a git tag for the version, push git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\n\n## Contributing\n\n1. Fork it ( https://github.com/UKHomeOffice/vaultconf/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-confluence","private":false,"url":"https://github.com/UKHomeOffice/docker-confluence","license":null,"readme":"# docker-confluence\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-confluence.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-confluence)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-sonarqube","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-sonarqube","license":null,"readme":"# docker-mysql-sonarqube\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql-sonarqube.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql-sonarqube)\n\nThe docker MySQL container plus a single SQL file that creates a sonar db. For use with the sonarqube docker container\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-sonarqube","private":false,"url":"https://github.com/UKHomeOffice/docker-sonarqube","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Sonar Qube\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-sonarqube.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-sonarqube)\n\nThis is a [Sonar Qube](http://www.sonarqube.org/) Docker container.\n\n## Getting Started\n\nThese instructions will get the container running.\n\nThere is a H2 Database included in Sonar Qube, which you may choose to use, however it is not \nsuitable for production\n\n### Prerequisities\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nYou'll also need a database you can connect to.\n\n### Usage\n\n#### Container params\n\nIf the arguments passed to the container begin with `-` for example `-something` All those arguments\nwill be passed to Sonar Qube.\n\n```bash\ndocker run quay.io/ukhomeofficedigital/sonarqube:v0.2.0 -something\n```\n\nLikewise, no arguments will also start Sonar Qube.\n\n```bash\ndocker run quay.io/ukhomeofficedigital/sonarqube:v0.2.0\n```\n\nOtherwise it'll run what you passed in. So for example `bash` would run bash\n\n```bash\ndocker run quay.io/ukhomeofficedigital/sonarqube:v0.2.0 bash\n```\n\n#### Backups\n\nThis container will attempt to backup and restore itself on start and stop. You can also trigger the process manually by running\n\n* `/opt/sonarqube/backup.sh`\n* `/opt/sonarqube/restore.sh`\n\n#### Environment Variables\n\n* `SONARQUBE_JDBC_USERNAME` Database username for Sonar Qube. Defaults to `sonar`\n* `SONARQUBE_JDBC_PASSWORD` Database password for Sonar Qube. Defaults to `sonar`\n* `$SONARQUBE_JDBC_PASSWORD_PATH` Path to file with database password for Sonar Qube. Overwrites \n  `SONARQUBE_JDBC_PASSWORD` if present.\n* `SONARQUBE_JDBC_URL` The JDBC url to the database for Sonar Qube. Defaults to \n  `jdbc:h2:tcp://localhost:9092/sonar`\n\nIf you want to back things up, then you'll need to set these too.\n\n* `AWS_ACCESS_KEY_ID` AWS Access Key to use for backups\n* `AWS_SECRET_ACCESS_KEY` AWS Secret Key to use for backups\n* `SONAR_QUBE_BACKUP_S3_BUCKET_NAME` Bucket to backup to\n\n#### Exposed Ports\n\n* `9000` Web Interface\n* `9092` H2 if you choose to use that database\n\n#### Volumes\n\n* `/opt/sonarqube/extensions` - Installed Extensions\n\n## Built With\n\n* Sonar Qube 5.1.2\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-sonarqube/tags). \n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-sonarqube/contributors) \nwho participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* Lots of this code comes from the official \n  [Sonar Qube Docker image](https://github.com/SonarSource/docker-sonarqube).\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-java","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-java","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker MySQL Java Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql-java.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql-java)\n\nDocker MySQL Container that also includes Open Java 8 *JRE* install.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\nThis is intended as a base image that would extended mysql so Java code maybe run along with mysql tools installed e.g.\n\n\n```\nFROM quay.io/ukhomeofficedigital/mysql-java:v0.1.2\n\n# Customisations to allow for schema updates using liquidbase Java file\n# =====================================================================\n\nENV TERM dumb\n\nCOPY docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n```\n\nIt was created to run a simple bash mysql users script and then run a Java \n[Liquidbase](http://www.liquibase.org/) schema install.\n\nIt extends the mysql only repository and as such, most of the documentation is available here:\n[Docker MySQL](https://github.com/UKHomeOffice/docker-mysql/blob/v0.5.1/README.md)\n\n \n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql-java/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mysql-java/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* This container is taken from the \n  [UKHomeOffice mysql docker container](https://quay.io/repository/ukhomeofficedigital/mysql).\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-crond","private":false,"url":"https://github.com/UKHomeOffice/docker-crond","license":null,"readme":"# docker-cron\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-crond.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-crond)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-selenium-standalone-server","private":false,"url":"https://github.com/UKHomeOffice/docker-selenium-standalone-server","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker: Selenium Server with Firefox and Google Chrome\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-selenium-standalone-server.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-selenium-standalone-server)\n\nDocker container containing Selenium Server\n\n> Selenium automates browsers. That's it! What you do with that power is entirely up to you. \n> Primarily, it is for automating web applications for testing purposes, but is certainly not \n> limited to just that. Boring web-based administration tasks can (and should!) also be automated as\n> well.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nParameters passed to the container will be passed onto Selenium Server.\n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/selenium-standalone-server:v0.1.2 \\\n       -your --param=eters\n```\n\nPassing no parameters will start Selenium Server\n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/selenium-standalone-server:v0.1.2\n```\n\nYou can also run arbitrary stuff\n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/selenium-standalone-server:v0.1.2 \\\n       bash\n```\n\n### Exposes\n\n* `4444` Selenium Server \n\n## Kubernetes\n\nFor example Kubernetes files see [/kb8](/kb8)\n\n## Built With\n\n* Chrome Stable\n* Firefox\n* Selenium Chrome Driver 2.18\n* Selenium Server Standalone 2.47.1\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository][tags]. \n\n[tags]: https://github.com/UKHomeOffice/docker-selenium-standalone-server/tags\n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors][contrib] who participated in this project.\n\n[contrib]: https://github.com/UKHomeOffice/docker-selenium-standalone-server/contributors\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\n* Lots of this code was stolen from the \n  [official Selenium container](https://github.com/SeleniumHQ/docker-selenium).\n","travis":true,"contributing":"# Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to \ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mediawiki","private":false,"url":"https://github.com/UKHomeOffice/docker-mediawiki","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# docker-mediawiki\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mediawiki.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mediawiki)\n\nFor this to work, PHP will be running in another container separate to mediawiki\nThis will be handled currently as a sidekick container in a pod for Kubernetes, but also could be\njust a bound container also.\n\nFor additional extensions, modify the extensions.txt with the git hash. These can be found at https://extdist.wmflabs.org/dist/extensions/ .\nThe contents of the file will look like\n\n```\nTwoFactorAuthentication:3e8f4ce\n```\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nParameters passed to the container will be passed onto Selenium Server.\n\n```shell\ndocker run -e MEDIAWIKI_VERSION=<version> \\\n       quay.io/ukhomeofficedigital/mediawiki:v0.5.1 \\\n       \n```\n\nPassing no parameters will start mediawiki \n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/mediawiki:v0.5.1\n```\n\nYou can also run arbitrary stuff\n\n```shell\ndocker run \\\n       quay.io/ukhomeofficedigital/mediawiki:v0.5.1 \\\n       bash\n```\n\n## Kubernetes\n\nFor example Kubernetes files see [/kb8](/kb8)\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the\n[tags on this repository][tags].\n\n[tags]: https://github.com/UKHomeOffice/docker-mediawiki/tags\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-php-fpm","private":false,"url":"https://github.com/UKHomeOffice/docker-php-fpm","license":null,"readme":"# docker-php-fpm\n\nThis container is for running PHP apps in kubernetes.  It doesn't contain composer as that's only required at the build step which this isn't intended to offer.\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-php-fpm.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-php-fpm)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-s3registry","private":false,"url":"https://github.com/UKHomeOffice/docker-s3registry","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Trusted Private Registry Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-s3registry.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-s3registry)\n\nDocker Trusted Private Registry Container. Requires fully trusted certs \n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nStarting the registry without any parameters is also the default behaviour.\n\n```shell\ndocker run \\\n    -v ${PWD}/secrets:/etc/secrets \\\n    -p 5000:5000\n    quay.io/ukhomeofficedigital/s3registry:v2.0.0 \\\n```\n\n#### Required secrets files\n\nThe yaml file below represents the secret files required to run the registry.\n\nAll the files are required to be present and mounted at /etc/secrets \n\n```yaml\n---\nkind: \"Secret\"\napiVersion: \"v1\"\nmetadata:\n  name: \"registry-secrets\"\ntype: \"Opaque\"\ndata:\n  s3-accesskey: bG9vayBpbiBhd3MgZm9yIGNyZWRzCg==\n  s3-secretkey: bG9vayBpbiBhd3MgZm9yIGNyZWRzCg==\n  s3-region: bG9vayBpbiBhd3MgZm9yIGNyZWRzCg==\n  s3-bucket: bG9vayBpbiBhd3MgZm9yIGNyZWRzCg==\n  key: dXNlIGEgcmVhbCBrZXkK\n  crt: dXNlIGEgcmVhbCBjZXJ0Cg==\n  docker_user: bXJkb2NrZXJ1c2VyCg==\n  docker_pass: YmFkcGFzcwo=\n\n```\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-s3registry/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [lewismarshall](https://github.com/lewismarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-s3registry/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* Large portions of this container are taken from the \n  [official registry docker container](https://hub.docker.com/_/registry/).\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-openjdk8","private":false,"url":"https://github.com/UKHomeOffice/docker-openjdk8","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Java JDK Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-openjdk8.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-openjdk8)\n\nDocker container that also includes Open Java 8 *JDK* install for running containerized builds.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\nThe example below, runs a Java (gradle) build:\n\n```\ndocker run -i --rm=true \\\n        -v ${BUILD_HOME_DIR}:/code \\\n        -e BUILD_NUMBER=${BUILD_NUMBER} \\\n        -v ${GRADLE_CACHE}:/root/.gradle/caches \\\n        quay.io/ukhomeofficedigital/openjdk8:v0.1.2 \\\n        ./gradlew \"$@\"\n```\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-openjdk8/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-openjdk8/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* [OpenJDK8](http://openjdk.java.net/projects/jdk8/)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-gitlab-tools","private":false,"url":"https://github.com/UKHomeOffice/docker-gitlab-tools","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-openjdk8-jre","private":false,"url":"https://github.com/UKHomeOffice/docker-openjdk8-jre","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Java JRE Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-openjdk8-jre.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-openjdk8-jre)\n\nDocker container that also includes Open Java 8 *JRE* install for running production applications.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\nNormally, this would be used as a base image for a Java application.\nThe example Dockerfile below will add custom artefacts and an entrypoint to run them.\nThere is an onbuild trigger which will calls the downstream (child) docker images to upgrade the java-openjdk on each iteration\n\n```\n# Use this repo\nFROM quay.io/ukhomeofficedigital/openjdk8-jre:v0.2.0\n\n# Add application artefacts\nENV app_deploy_path=/var/lib/myapp\nCOPY my_jars/* ${app_deploy_path}/\nENTRYPOINT [\"java -jar ${app_deploy_path}/myapp.jar\"]\n\n```\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-openjdk8-jre/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-openjdk8-jre/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* [OpenJDK8](http://openjdk.java.net/projects/jdk8/)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rotm","private":false,"url":"https://github.com/UKHomeOffice/rotm","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# Report Online Terrorist Material (ROTM)\n\n[![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/rotm/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/rotm) [![Build Status](https://travis-ci.org/UKHomeOffice/rotm.svg?branch=master)](https://travis-ci.org/UKHomeOffice/rotm)\n\nThis project is built with [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap) and uses [Docker](https://www.docker.com/).\n\n## Getting started\n\nGet the project from Github\n```bash\n$ git clone git@github.com:UKHomeOffice/rotm.git && cd rotm\n```\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\n[Install Docker Compose](https://docs.docker.com/compose/install/)\n\nRun the services locally with Docker Compose\n```bash\n$ docker-compose up\n```\n\nGetting your hands dirty (You'll need [Redis](http://redis.io/) for this)\n```bash\n$ npm run dev\n```\n\nFor anything else ROTM-related, look in [package.json](./package.json) for a full list of scripts etc, and\n[config.js](./config.js) for environment variables.\n\nOtherwise, see [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap).\n","travis":true,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/scala-futures-demo","private":false,"url":"https://github.com/UKHomeOffice/scala-futures-demo","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"Scala Futures Demo\n==================\nDemo of Scala Futures at a high level - Get the basics of using Futures correctly.\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Specs\n\nIntroduction\n------------\nTODO\n\nBuild\n-----\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nHow Not to use Futures\n----------------------\nThe original Registered Traveller Customer application is a prime example of how not to use Scala Futures.\nAt the time of writing, there are some issues in the Registered Traveller Caseworker application, and we shall highlight some examples here that have been fixed.\n\nIn \"corecaseworker\" WICrossCheckDownloadServiceSpec, there was the following code:\n\n```scala\nwiCrossCheckDownloadService.generateDownload(\"tester@tester.com\")\nthere was one(crossCheckService).setCheckToInProgress(casesReadyForTravelHistory)\n\n```\n\nWhere generateDownload results in a Future[ProcessingStatus]\n\nThis was subsequently changed to:\n\n```scala\nwiCrossCheckDownloadService.generateDownload(\"tester@tester.com\") must beLike[ProcessingStatus] {\n  case ProcessingStatus(ProcessingStatus.SUCCESS, 5, 3, Nil) =>\n    there was one(crossCheckService).setCheckToInProgress(casesReadyForTravelHistory)\n}.awaitFor(10 seconds)\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ReportTerroristMaterialPrototype","private":false,"url":"https://github.com/UKHomeOffice/ReportTerroristMaterialPrototype","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# ReportTerroristMaterialPrototype\nReport Terrorist Material UX Prototype\n","travis":false,"contributing":"# Contribution guidelines\n\nWe really like contributions and bug reports, in fact the project wouldn't have got to this stage without them. \nWe do have a few guidelines to bear in mind.\n\n## GOV.UK Elements\n\nThe project contains code taken from the [GOV.UK Elements](https://github.com/alphagov/govuk_elements/) project.\nPlease check that any issues related to that code are raised with that project, not this one.\n\n## Raising bugs\n\nWhen raising bugs please explain the issue in good detail and provide a guide to how to replicate it. \nWhen describing the bug it's useful to follow the format:\n\n- what you did\n- what you expected to happen\n- what happened\n\n## Suggesting features\n\nPlease raise feature requests as issues before contributing any code.\nThis is just to ensure they are discussed properly before any time is spent on them.\n\n## Contributing code\n\n### Indentation and whitespace\n\n2-space, soft-tabs only please. No trailing whitespace.\n\n### Versioning\n\nWe use [semantic versioning](http://semver.org/), and bump the version\non master only. Please don't submit your own proposed version numbers.\n\n### Commit hygiene\n\nPlease see our [git style guide](https://github.com/alphagov/styleguides/blob/master/git.md)\nwhich describes how we prefer git history and commit messages to read.\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-selenium-local-server","private":false,"url":"https://github.com/UKHomeOffice/docker-selenium-local-server","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Selenium Server in the Background\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-selenium-local-server.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-selenium-local-server)\n\nThis docker container extends selenium server and allows you to run \nprocesses which require it locally. This is useful for tests that require \nfile uploads, which can only be done locally from the selenium server.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nThis will run anything you pass after the container. The example below will run a java application mounted from the \ncurrent directory:\n\n```shell\ndocker run -v ${PWD}:/code quay.io/ukhomeofficedigital/selenium-local-server:v0.1.2 java -jar /code/myjar.jar\n```\n\n#### Environment Variables\n\n* `LOCAL_HOSTS_ENTRY` - An entry point to a hosts file (Supports browser endpoint testing without complex whitelisting \nrules).  \n  Example: LOCAL_HOSTS_ENTRY='127.0.0.1 mywebsite.prod.gov.uk'\n\n#### Volumes\n\n* `/code` - Mount any dependencies you want to send as files to Selenium as a volume.\n* `/root/.gradle/caches` - Speeds up gradle builds when this data is mounted. \n\n## Built With\n\n* [quay.io/ukhomeofficedigital/selenium-standalone-server:v0.1.2](https://github.com/UKHomeOffice/docker-selenium-standalone-server)\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-selenium-local-server)\n* [Quay.io](https://quay.io/ukhomeofficedigital/selenium-local-server)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-selenium-local-server/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/lewismarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-selenium-local-server/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/UKHomeOffice.github.io","private":false,"url":"https://github.com/UKHomeOffice/UKHomeOffice.github.io","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# UKHomeOffice.github.io\n\nGitHub pages site for the Home Office Digital team summarising what has been open sourced.\n\nIt uses [Jekyll](https://jekyllrb.com/), see there for more usage documentation\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisities\n\nYou'll need ruby, and bundler.\n\nDownload ruby through however you prefer for you system. Bundler can be installed by gem.\n\n```\ngem install bundler\n```\n\n### Installing\n\nSimply install the dependencies\n\n```\nbundle install\n```\n\nAnd run the server\n\n```\nbundle exec jekyll serve\n```\n\nEnd with an example of getting some data out of the system or using it for a little demo\n\n## Deployment\n\nThis is deployed using [Github Pages](https://help.github.com/articles/using-jekyll-with-pages/)\n\n## Built With\n\n* jekyll\n* Github Pages\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/UKHomeOffice/UKHomeOffice.github.io/tags). \n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you \ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-java-jdk","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-java-jdk","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker MySQL Java JDK Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql-java-jdk.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql-java-jdk)\n\nDocker MySQL Container that also includes Open Java 8 *JDK* install.\nIt will start mysql in the background then run any parameters provided. \n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\nThe example below, starts the mysql instance then runs a Java (gradle) build:\n\n```\ndocker run -i --rm=true \\\n        -v ${BUILD_HOME_DIR}:/code \\\n        -e BUILD_NUMBER=${BUILD_NUMBER} \\\n        -e MYSQL_ROOT_PASSWORD=password \\\n        -v ${GRADLE_CACHE}:/root/.gradle/caches \\\n        quay.io/ukhomeofficedigital/mysql-java-jdk:v0.1.1 \\\n        ./gradlew -Dspring.datasource.username=root \\\n            -Dspring.datasource.password=${MYSQL_ROOT_PASSWORD} \\\n            -Dspring.datasource.url=jdbc:mysql://127.0.0.1/mydb \\\n            -Dliquibase.url=jdbc:mysql://127.0.0.1/mydb \\\n            -Dliquibase.user=root \\\n            -Dliquibase.password=${MYSQL_ROOT_PASSWORD} \\\n            \"$@\"\n    exit 0\nfi\n```\n\nIt extends the mysql only repository and as such, additional relevant documentation is available here:\n[Docker MySQL](https://github.com/UKHomeOffice/docker-mysql/blob/v0.5.1/README.md)\n \n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particualy large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql-java/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mysql-java/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* This container is taken from the \n  [UKHomeOffice mysql docker container](https://quay.io/repository/ukhomeofficedigital/mysql).\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-maintenance","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-maintenance","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker MySQL Maintenance Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-mysql-maintenance.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-mysql-maintenance)\n\nThis is a one shot docker container that change your MySQL root password from the default. Optionally it can also run \nscripts and SQL after it has done this to do basic DB initialisation.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nProvide no parameters and the container will ensure the root password is set correctly and run any SQL or shell scripts \nin the directory and exit\n\n```shell\ndocker run quay.io/ukhomeofficedigital/mysql-maintenance:v0.1.0\n```\n\nProvide any other parameter and it'll execute it\n\n```shell\ndocker run quay.io/ukhomeofficedigital/mysql-maintenance:v0.1.0 echo hello\n```\n\nwill echo `hello`\n\n#### Environment Variables\n\n* `MYSQL_HOST` - Host of MySQL server\n* `MYSQL_PORT` - MySQL Port (defaults to `3306`)\n* `DEFAULT_PW` - Default password your MySQL server is started up with (defaults to `changeme`)\n* `MYSQL_PASSWORD_PATH` - Path to file with new password in\n\n#### Useful File Locations\n\n* `/docker-entrypoint-initdb.d/*.sh` - Will be executed. MySQL password and user root is already set.\n* `/docker-entrypoint-initdb.d/*.sql` - Will be ran as root mysql user\n\n#### Kubernetes Example\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    db: mysql\n    type: oneshot\n    maintenance: true\n  name: mysql-maintenance\nspec:\n  containers:\n  - image: quay.io/ukhomeofficedigital/mysql-maintenance:v0.1.0\n    name: mysql-maintenance\n    env:\n    - name: MYSQL_HOST\n      value: mymysqlserver\n    - name: MYSQL_PASSWORD_PATH\n      value: /secrets/password.txt\n    volumeMounts:\n    - mountPath: /secrets\n      name: mysql-password\n  imagePullPolicy: Always\n  restartPolicy: Never\n  volumes:\n    -\n      name: mysql-password\n      secret:\n        secretName: \"mysql-password\"\n```\n\n\n## Built With\n\n* [ukhomeofficedigital/mysql v0.5.0](https://github.com/UKHomeOffice/docker-mysql/releases/tag/v0.5.0)\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-mysql-maintenance)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/mysql-maintenance)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql-maintenance/tags). \n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/docker-mysql-maintenance/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/vault-sidekick","private":false,"url":"https://github.com/UKHomeOffice/vault-sidekick","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"[![Build Status](https://travis-ci.org/UKHomeOffice/vault-sidekick.svg?branch=master)](https://travis-ci.org/UKHomeOffice/vault-sidekick)\n[![GoDoc](http://godoc.org/github.com/UKHomeOffice/vault-sidekick?status.png)](http://godoc.org/github.com/UKHomeOffice/vault-sidekick)\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/vault-sidekick/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/vault-sidekick)\n[![GitHub version](https://badge.fury.io/gh/UKHomeOffice%2Fvault-sidekick.svg)](https://badge.fury.io/gh/UKHomeOffice%2Fvault-sidekick)\n\n### **Vault Side Kick**\n\n**Summary:**\nVault Sidekick is a add-on container which can be used as a generic entry-point for interacting with Hashicorp [Vault](https://vaultproject.io) service, retrieving secrets\n(both static and dynamic) and PKI certs. The sidekick will take care of renewal's and extension of leases for you and renew the credentials in the specified format for you.\n\n**Usage:**\n\n```shell\n[jest@starfury vault-sidekick]$ bin/vault-sidekick --help\nUsage of bin/vault-sidekick:\n  -alsologtostderr=false: log to standard error as well as files\n  -auth=\"\": a configuration file in a json or yaml containing authentication arguments\n  -cn=: a resource to retrieve and monitor from vault (e.g. pki:name:cert.name, secret:db_password, aws:s3_backup)\n  -ca-cert=\"\": a CA certificate to use in order to validate the vault service certificate\n  -delete-token=false: once the we have connected to vault, delete the token file from disk\n  -dryrun=false: perform a dry run, printing the content to screen\n  -log_backtrace_at=:0: when logging hits line file:N, emit a stack trace\n  -log_dir=\"\": If non-empty, write log files in this directory\n  -logtostderr=false: log to standard error instead of files\n  -output=\"/etc/secrets\": the full path to write the protected resources (VAULT_OUTPUT if available)\n  -stats=5m0s: the interval to produce statistics on the accessed resources\n  -stderrthreshold=0: logs at or above this threshold go to stderr\n  -tls-skip-verify=false: skip verifying the vault certificate\n  -token=\"\": the token used to authenticate to teh vault service (VAULT_TOKEN if available)\n  -v=0: log level for V logs\n  -vault=\"https://127.0.0.1:8200\": the url the vault service is running behind (VAULT_ADDR if available)\n  -vmodule=: comma-separated list of pattern=N settings for file-filtered logging\n```\n\n**Building**\n\nThere is a Makefile in the base repository, so assuming you have make and go: # make\n\n**Example Usage**\n\nThe below is taken from a [Kubernetes](https://github.com/kubernetes/kubernetes) pod specification;\n\n```YAML\nspec:\n      containers:\n      - name: vault-side-kick\n        image: gambol99/vault-sidekick:latest\n        args:\n          - -output=/etc/secrets\n          - -cn=pki:project1/certs/example.com:common_name=commons.example.com,revoke=true,update=2h\n          - -cn=secret:secret/db/prod/username:file=.credentials\n          - -cn=secret:secret/db/prod/password\n          - -cn=aws:aws/creds/s3_backup_policy:file=.s3_creds\n        volumeMounts:\n          - name: secrets\n            mountPath: /etc/secrets\n```\n\nThe above say's\n\n - Write all the secrets to the /etc/secrets directory\n - Retrieve a dynamic certificate pair for me, with the common name: 'commons.example.com' and renew the cert when it expires automatically\n - Retrieve the two static secrets /db/prod/{username,password} and write them to .credentials and password.secret respectively\n - Apply the IAM policy, renew the policy when required and file the API tokens to .s3_creds in the /etc/secrets directory\n - Read the template at /etc/templates/db.tmpl, produce the content from Vault and write to /etc/credentials file\n\n**Authentication**\n\nA authentication file can be specified in either yaml of json format which contains a method field, indicating one of the authentication\nmethods provided by vault i.e. userpass, token, github etc and then followed by the required arguments for that plugin.\n\nIf the required arguments for that plugin are not contained in the authentication file, fallbacks from environment variables are used.\nEnvironment variables are prefixed with `VAULT_SIDEKICK`, i.e. `VAULT_SIDEKICK_USERNAME`, `VAULT_SIDEKICK_PASSWORD`.\n\n**Secret Renewals**\n\nThe default behaviour of vault-sidekick is **not** to renew a lease, but to retrieve a new secret and allow the previous to\nexpire, in order ensure the rotation of secrets. If you don't want this behaviour on a resource you can override using resource options. For exmaple,\nyour using the mysql dynamic secrets, you want to renew the secret not replace it\n\n```shell\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=mysql:mysql/creds/my_database:fmt=yaml,renew=true\nor an iam policy renewed every hour\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=aws:aws/creds/policy:fmt=yaml,renew=true,update=1h\n\n```\n\nOr you want to rotate the secret every **1h** and **revoke** the previous one\n\n```shell\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=aws:project/creds/my_s3_bucket:fmt=yaml,update=1h,revoke=true\n\nThe format is;\n\n-cn=RESOURCE_TYPE:PATH:OPTIONS\n```\n\nThe sidekick supports the following resource types: mysql, postgres, pki, aws, secret, cubbyhole, raw, cassandra and transit\n\n**Environment Variable Expansion**\n\nThe resource paths can contain environment variables which the sidekick will resolve beforehand. A use case being, using a environment\nor domain within the resource e.g -cn=secret:secrets/myservice/${ENV}/config:fmt=yaml\n\n**Output Formatting**\n\nThe following output formats are supported: json, yaml, ini, txt, cert, csv, bundle, env\n\nUsing the following at the demo secrets\n\n```shell\n[jest@starfury vault-sidekick]$ vault write secret/password this=is demo=value nothing=more\nSuccess! Data written to: secret/password\n[jest@starfury vault-sidekick]$ vault read secret/password\nKey            \tValue\nlease_id       \tsecret/password/7908eceb-9bde-e7de-23da-96131505214a\nlease_duration \t2592000\nlease_renewable\tfalse\ndemo           \tvalue\nnothing        \tmore\nthis           \tis\n```\n\nIn order to change the output format:\n\n```shell\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=secret:secret/password:fmt=ini -logtostderr=true -dry-run\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=secret:secret/password:fmt=json -logtostderr=true -dry-run\n[jest@starfury vault-sidekick]$ build/vault-sidekick -cn=secret:secret/password:fmt=yaml -logtostderr=true -dry-run\n```\n\nFormat: 'cert' is less of a format of more file scheme i.e. is just extracts the 'certificate', 'issuing_ca' and 'private_key' and creates the three files FILE.{ca,key,crt}. The\nbundle format is very similar in the sense it similar takes the private key and certificate and places into a single file.\n\n**Resource Options**\n\n- **file**: (filaname) by default all file are relative to the output directory specified and will have the name NAME.RESOURCE; the fn options allows you to switch names and paths to write the files\n- **create**: (create) create the resource\n- **update**: (update) override the lease time of this resource and get/renew a secret on the specified duration e.g 1m, 2d, 5m10s\n- **renew**: (renewal) override the default behavour on this resource, renew the resource when coming close to expiration e.g true, TRUE\n- **delay**: (renewal-delay) delay the revoking the lease of a resource for x period once time e.g 1m, 1h20s\n- **revoke**: (revoke) revoke the old lease when you get retrieve a old one e.g. true, TRUE (default to allow the lease to expire and naturally revoke)\n- **fmt**: (format) allows you to specify the output format of the resource / secret, e.g json, yaml, ini, txt\n- **exec** (execute) execute's a command when resource is updated or changed\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)","masterBranchProtection":false},{"name":"UKHomeOffice/docker-vault-sidekick","private":false,"url":"https://github.com/UKHomeOffice/docker-vault-sidekick","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-tls","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-tls","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"#### **Nginx TLS Sidekick**\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-nginx-tls.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-nginx-tls)\n\nA small utility container which is responsible to rotating the certificates on a nginx proxy.\n\n```shell\nUsage: run.sh\n  -c|--confd DIRECTORY      : the path of the nginx conf.d directory (default /etc/nginx/conf.d)\n  -d|--dir DIRECTORY        : the directory which contains the certificates (default /etc/secrets)\n  -p|--proxy SPEC           : the specification for a proxy\n  -h|--help                 : display this usage menu\n```\n\n##### **Usage**\n\n```shell\n[jest@starfury docker-nginx-tls]$ make demo\nsudo docker run -ti  --name nginx-tls --rm -v /home/jest/scm/github/UKHomeOffice/docker-nginx-tls/tests:/etc/secrets gambol99/nginx-tls /run.sh -p 443:127.0.0.1:80:demo.example.com\n[v] proxy spec: '443:127.0.0.1:80:demo.example.com' is valid\n[v] reconfiguring the nginx service\n[v] configuring the nginx proxy: 443:127.0.0.1:80:demo.example.com\n[v] starting the nginx service\n[v] watching the directory: /etc/secrets for changes\n[v] /etc/secrets/ CLOSE_WRITE,CLOSE demo.example.com.crt has changed, reconfiguring the service now\n[v] reconfiguring the nginx service\n[v] configuring the nginx proxy: 443:127.0.0.1:80:demo.example.com\n[v] nginx config passed validation, reloading service\n```\n\nA proxy specification takes the form for: LISTENING_PORT:PROXY_IPADDRESS:PROXY_PORT:CERTIFICATE. Multiple endpoints can be defined by repeating the -p|--proxy command line option.\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/AlfrescoAuditAnalysis","private":false,"url":"https://github.com/UKHomeOffice/AlfrescoAuditAnalysis","license":null,"readme":"# AlfrescoAuditAnalysis\nAlfresco Audit Analysis\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/OSX-Provisioning","private":false,"url":"https://github.com/UKHomeOffice/OSX-Provisioning","license":null,"readme":"# OSX-Provisioning\n\n**Admin-setup.sh**\n\nThis script is designed to be run on a mac that is brand new, or had been rebuilt from a usb image. The script assumes the inital stages of first boot have been completed and that you have created a local admin account, are logged on and know the password for that. There should be no other accounts present, so runt his prior to creating any user accounts.\n\nThis will apply a number of security hardening settings, including applying full disk encryption wiht file vault. PLEASE make sure you make a note of the key that is shown on screen during this script running.\n\n**byod-check.sh**\n\nThis script, must be run as admin, and will check to see if a device has the required security applied. It does not change settings, only reports on them.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-sonar-mysql-maintenance","private":false,"url":"https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Sonar Maintenance Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-sonar-mysql-maintenance.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-sonar-mysql-maintenance)\n\nThis is a one shot container that will create the missing Sonar DB in your database, and also ensure the password is up \nto date (and not the default one).\n\nIf you are looking for a container that has a MySQL server running within it, that has the sonar database, see \n[UKHomeOffice/docker-mysql-sonarqube](https://github.com/UKHomeOffice/docker-mysql-sonarqube).\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisities\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nProvide no parameters and the container will ensure the root password is set correctly and create the Sonar database.\nin the directory and exit\n\n```shell\ndocker run quay.io/ukhomeofficedigital/sonar-mysql-maintenance:v0.1.0\n```\n\nProvide any other parameter and it'll execute it\n\n```shell\ndocker run quay.io/ukhomeofficedigital/sonar-mysql-maintenance:v0.1.0 echo hello\n```\n\nwill echo `hello`\n\n#### Environment Variables\n\n* `MYSQL_HOST` - Host of MySQL server\n* `MYSQL_PORT` - MySQL Port (defaults to `3306`)\n* `DEFAULT_PW` - Default password your MySQL server is started up with (defaults to `changeme`)\n* `MYSQL_PASSWORD_PATH` - Path to file with new password in\n\n#### Kubernetes Example\n\nSee the [kb8 directory](kb8)\n\n## Built With\n\n* [UKHomeOffice/docker-mysql-maintenance v0.1.0](https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance/releases/tag/v0.1.0)\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance)\n* [Quay.io](https://quay.io/ukhomeofficedigital/sonar-mysql-maintenance/docker-repository)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance/tags). \n\n## Authors\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-sonar-mysql-maintenance/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-logstash-kubernetes","private":false,"url":"https://github.com/UKHomeOffice/docker-logstash-kubernetes","license":null,"readme":"# docker-logstash-kubernetes\n\nLogstash container for pulling docker logs with kubernetes metadata support.\nAdditionally logs are pulled from systemd journal too. Events can be pushed to\nCloudwatch Logs and or ElasticSearch.\n\nLogstash tails docker logs and extracts `pod`, `container_name`, `namespace`,\netc. The way this works is very simple. Logstash looks at an event field which\ncontains full path to kubelet created symlinks to docker container logs, and\nextracts useful information from a symlink name. No access to Kubernetes API\nis required.\n\nEvents can then pushed to Cloudwatch logs (disabled by default). An example\nevent in Cloudwatch Logs looks like below:\n\n```json\n{\n    \"log\": \"10.10.112.0 - - [02/Oct/2015:15:20:38 +0000] \\\"GET /dataset HTTP/1.1\\\" 200 2 \\\"-\\\" \\\"axios/0.5.4\\\" 6\\n\",\n    \"stream\": \"stdout\",\n    \"time\": \"2015-10-02T15:20:38.706043658Z\",\n    \"replication_controller\": \"data-example-api\",\n    \"pod\": \"data-example-api-p82sy\",\n    \"namespace\": \"hoapi-catalogue\",\n    \"container_name\": \"data-example-api\",\n    \"container_id\": \"df1874255f0c85d18747b5edfc8dc372dbebf725b9ccbfb37549f5f81bba8326\"\n}\n```\n\nOther outputs can be added in the future.\n\n## Requirements\n\nYou need to have kubelet process running on the host. Normally kubelet creates\nsymlinks to container logs from `/var/log/containers/` to\n`/var/lib/docker/containers/`. So for that you need to make sure that logstash\nhas access to both directories.\n\nFor logstash to be able to pull logs from journal, you need to make sure that\nlogstash can read `/var/log/journal`.\n\nAlso, logstash writes `sincedb` file to its home directory, which by default is\n`/var/lib/logstash`. If you don't want logstash to start reading docker or\njournal logs from the beginning after a restart, make sure you mount\n`/var/lib/logstash` somewhere on the host.\n\nIf you want to push events to Cloudwatch Logs, then you will have to set AWS\naccess keys via environment variables.\n\n\n## Configuration\n\nAs usual, configuration is passed through environment variables.\n\n- `LS_HEAP_SIZE` - logstash JVM heap size. Defaults to `500m`.\n- `OUTPUT_CLOUDWATCH` - whether to enable this output. Defaults to `false`.\n- `AWS_REGION` - defaults to `eu-west-1`.\n- `AWS_ACCESS_KEY_ID` - must be set.\n- `AWS_SECRET_ACCESS_KEY` - must be set.\n- `LOG_GROUP_NAME` - Cloudwatch logs group name. Defaults to `logstash`.\n- `LOG_STREAM_NAME` - Cloudwatch logs stream name. Defaults to `hostname()`.\n- `INPUT_JOURNALD` - Enable logs ingestion from journald. Default: `true`.\n- `OUTPUT_ELASTICSEARCH` - Enable logs output to ElasticSearch. Default `true`.\n- `ELASTICSEARCH_HOST` - ElasticSearch host, can be comma separated. Default: `127.0.0.1:9200`.\n- `ELASTICSEARCH_INDEX_SUFFIX` - ElasticSearch index suffix. Default: `\"\"`.\n- `LOGSTASH_ARGS` - Sets additional logstash command line arguments.\n\n\n## Running\n\n```\n$ docker run -ti --rm \\\n    -v /var/lib/logstash-kubernetes:/var/lib/logstash:z \\\n    -v /var/log/journal:/var/log/journal:ro \\\n    -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n    -v /var/log/containers:/var/log/containers:ro \\\n    -e ELASTICSEARCH_HOST=my-est-host.local:9200 \\\n    quay.io/ukhomeofficedigital/logstash-kubernetes:v0.4.0\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-landscaper-server","private":false,"url":"https://github.com/UKHomeOffice/docker-landscaper-server","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Ubuntu LandScape Docker Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-landscape-server.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-landscape-server)\n\nThis container runs the Ubuntu landscape server components\n\n#Requirements\n\n- Landscape requires a postgres 9.3/9.4 server with plpython and the debversion modules installed\n- A rabbitmq server is also required as the message bus between the various components\n\n#TLS\n\nThere is a placeholer certificate in the files/certs directory which gets added to the container and used by apache for the SSL endpoint.\n\nThis has a common name of 'landscape-server'.\nThis should be replaced with a valid certificate and key\n\n#Running locally\n\nThere is a docker compose file which will bring up a landscape server,\nthis will bring up the landscape server on port 80/443 on your docker host\n```\ndocker-compose build\ndocker-compose up\n```\n\nIt does the following:\n## Postgres database server\nCreate a postgres container based off of the official 9.4 version with plpython and debversion installed\n\n```\ndocker build -t postgres .\ndocker run -d --name postgres -e POSTGRES_PASSWORD=password postgres\n```\n\n## Rabbitmq server\nCreate a rabbitmq container that will be linked in, which has the management module enables so you can \naccess it via a web console\n\n```\ndocker run -d --name rabbitmq -p 15672:15672 rabbitmq:3-management\n```\n\n## Landscape container creation\nThen it build the landscape container, this container is based on ubuntu:14.04, this will link the postgres container into the landscape container and use that, if you have an external postgres instance you would just set the variables that are required\n\n```\ndocker build -t landscape-server\ndocker run -d --link postgres:postgres --link rabbitmq:rabbitmq -e INITIALIZE_SCHEMA=yes -e DB_USER=postgres -e DB_PASS=password -e DB_LANDSCAPE_PASS=password -p 80:80 -p 443:443 landscape-server\n```\n\n### Valid commands for the landscape container\n- app:schema - This will create the landscape user and schema but not start the application\n- app:start - This starts the application, this is also the default action\n\n#Variables that can be set\n\n| Variable             | Default   | Usage  |\n| -------------------- | --------- | ------ |\n| STARTUP_WAIT_TIME    | empty     | Wait number of seconds before starting process, useful for waiting for other services to come up |\n| INITIALIZE_SCHEMA    | empty     | If set this will create the database schema or confirm it is valid |\n| DB_HOST              | empty     | The postgres server hostname |\n| DB_PORT              | 5432      | The postgres server port |\n| DB_LANDSCAPE_PASS    | password  | The landscape user password |\n| DB_USER              | landscape | The postgres super user, this user is used for schema creation|\n| DB_PASS              | landscape | The postgres super user password |\n| DB_NAME              | postgres  | The default database name for testing connectivity |\n| RMQ_HOST             | empty     | The rabbitmq server hostname |\n| RMQ_PORT             | 5672      | The rabbitmq server amqp port |\n| RMQ_USER             | guest     | The rabbitmq user |\n| RMQ_PASS             | guest     | The rabbitmq password |\n| RMQ_VHOST            | default   | The vhost to be used by the message broker |\n","travis":true,"contributing":"# Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-elasticsearch","private":false,"url":"https://github.com/UKHomeOffice/docker-elasticsearch","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# ElasticSearch on Kubernetes\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-elasticsearch.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-elasticsearch)\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/elasticsearch/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/elasticsearch)\n\nElasticSearch 2.4.x with kubernetes discovery plugin for simple deployment and\ndiscovery.\n\n### Configuration\nConfiguration is done via environment variables.\n\nThe following configuration defaults may not necessarily be set to the same\nvalues in [kube/](kube/) example files.\n\n* `CLUSTER_NAME`: ElasticSearch cluster name. Default: `elasticsearch`.\n* `NODE_NAME`: Node name. Default: `${HOSTNAME}` (kubernetes assigned pod name by default).\n* `PATH_DATA`: Path where ES stores its data. Default: `/data`.\n* `ES_HEAP_SIZE`: JVM heap size. Default: `450m`. If you adjust this parameter,\n  make sure to increase container limits as well.\n* `INDEX_AUTO_EXPAND_REPLICAS`: Whether to automatically expand index replicas\n  across data nodes. Default: `false`.\n* `INDEX_NUMBER_OF_SHARDS`: The default number of primary shards for each index. Default: `5`.\n* `INDEX_NUMBER_OF_REPLICAS`: The number of replicas per shard that an index should create. Default `1`.\n* `INDEX_REFRESH_INTERVAL`: How often to refresh indexes. Default: `1s`.\n* `NODE_MASTER`: Whether this node can be a master node. Default: `true`.\n* `NODE_DATA`: Whether this node can be a data node. Default: `true`.\n* `HTTP_ENABLE`: Whether this node can be a client (HTTP) node. Default: `true`.\n* `HTTP_BIND_HOST`: http bind address.. Default: `0.0.0.0`.\n* `KUBERNETES_SERVICE`: kubernetes service name for master nodes. Default `elasticsearch-master`.\n* `ENABLE_TRANSPORT_SSL`: whether to enable search-guard transport SSL. Default: `false`.\n* `DISCOVERY_ZEN_FD_PING_INTERVAL` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#fault-detection\n* `DISCOVERY_ZEN_FD_PING_TIMEOUT` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#fault-detection\n* `DISCOVERY_ZEN_FD_PING_RETRIES` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#fault-detection\n* `DISCOVERY_ZEN_PUBLISH_TIMEOUT` - see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html#_cluster_state_updates\n\n\n### Plugins\n#### Kubernetes Discovery\nFor more kubernetes discovery plugin related options, see\nhttps://github.com/fabric8io/kubernetes-client. Our examples use just a\nstandard kubernetes auth token to authenticate against the kubernetes API for\ndiscovery.\n\n#### Search Guard SSL\nIf you want to use transport TLS, please take a look at their documentation\nhttps://github.com/floragunncom/search-guard-ssl.\n\nElasticSearch expects `truststore.jks` and `keystore.jks` files to be placed in\n`/elasticsearch/config/certs`. Keystore cert/key alias must be `cert` and\ntruststore alias - `ca`. Bare in mind that certs need to be signed by the same\nCA. If you use vault, then take a look at\nhttps://github.com/UKHomeOffice/vaultjks, which could help you to get your\ncerts from vault and create keystore files.\n\n\n### Deployment\nBy default if you start the docker container, ElasticSearch will start in\nstandalone mode.\n\nDeploying onto a Kubernetes cluster is fairly easy. There are example\nkubernetes controller and service files in [kube/](kube/) directory.\n\n\n#### Deploy Master Node\nFirst of all we need to deploy master service for ES master nodes to find each\nother and other communications between nodes. Then we can create the master\nreplication controller.\n\n```bash\n$ kubectl create -f kube/es-master-svc.yaml\n$ kubectl create -f kube/es-master-rc.yaml\n```\n\nWait a few seconds and verify whether it is up and running. You can also scale\nthe master nodes to 3.\n\n```bash\n$ kubectl logs -f es-master-fdfw -c elasticsearch\n$ kubectl scale --replicas=3 rc/es-master\n```\n\n#### Deploy Client and Data Nodes\nOnce the master node is up and running, you can start deploying the rest of the cluster.\n\n```bash\n$ kubectl create -f kube/es-svc.yaml\n$ kubectl create -f kube/es-client-rc.yaml\n$ kubectl create -f kube/es-data-rc.yaml\n```\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-proxy-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-proxy-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"RTP Proxy Library\n=================\n\nScala Spray library to proxy request/response between client and server\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- Spray\n\nIntroduction\n------------\n![alt text](docs/your-service.png \"Your service\")\n\nYou want to call another service either securely or not, but you've been told you cannot do this directly - you need a proxy in the middle.\n\nrtp-proxy-lib acts as either a proxy - it could be a dumb proxy or maybe one that makes SSL connections.\n\nLet's take the example of communicating with another service over SSL.\n\n![alt text](docs/your-service-with-proxy.png \"Your service with proxy\")\n\nApplication\n-----------\nThis module is configured as per any Akka application, where the default configuration file is \"application.conf\".\nThis default file can be overridden with other \"conf\" files or system properties and then given to the application upon boot with the following example Java option:\n```bash\n-Dconfig.file=test-classes/application.test.conf\n```\n\nIndividual configuration properties can be overridden again by Java options e.g. to override which Mongodb to connect e.g.:\n```bash\n-Dmy.foo=blah\n```\n\nwhere this overrides the default in application.conf.\n\nBooting the application (uk.gov.homeoffice.rtp.proxy.Boot) exposes a RESTful API to act as a proxy to the real API e.g. the following URL could be given in a browser, a browser's REST client plugin or curl:\n```bash\nhttp://localhost:9300/blah\n```\n\nthis would get back some appropriate response for some existing API.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```bash\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```bash\nbrew install typesafe-activator\n```\n\nTo compile:\n```bash\nsbt compile\n```\n\nor\n```bash\nactivator compile\n```\n\nTo run the specs:\n```bash\nsbt test\n```\n\nTo actually run the application, first \"assemble\" it:\n```bash\nsbt assembly\n```\n\nThis packages up an executable JAR - Note that \"assembly\" will first compile and test.\n\nThen just run as any executable JAR, with any extra Java options for overriding configurations.\n\nFor example, to use a config file (other than the default application.conf) which is located on the file system (in this case in the boot directory)\n```bash\njava -Dconfig.file=test-classes/my-application.conf -jar <jar name>.jar\n```\n\nNote that the log configuration file could also be included e.g.\n```bash\n-Dlogback.configurationFile=path/to/my-logback.xml\n```\n\nAnd other examples:\n\nbooting from project root:\n```bash\njava -Dspray.can.server.port=8080 -jar target/scala-2.11/<jar name>.jar\n```\n\nand running from directory of the executable JAR using a config that is within said JAR:\n```bash\njava -Dconfig.resource=application.uat.conf -jar <jar name>.jar\n```\n\nFinally you can perform a quick test of the application by calling one of the monitor API e.g. making a cURL call to the application:\n```bash\ncurl http://localhost:9300/proxy-server \n```\n\nExample Usage\n-------------\nProxying can be just a dumb proxy or it can use certificates to create a SSL connection.\nThere are examples in the code e.g. regarding SSL the application configuration would be similar to:\n```scala\nspray {\n  can {\n    server {\n      name = \"your-service-spray-can\"\n      host = \"0.0.0.0\"\n      port = 9300\n      request-timeout = 5 minutes\n      idle-timeout = 10 minutes\n      service = \"http-routing-service\"\n      remote-address-header = on\n      ssl-tracing = on\n    }\n\n    client {\n      ssl-tracing = on\n      request-timeout = 5 minutes\n    }\n  }\n}\n\nproxied {\n  server {\n    host = \"localhost\"\n    port = 8443\n  }  \n}\n\nssl {\n  keystore {\n    type = \"jks\"\n    path = \"classpath:test.keystore\"\n    password = \"password\"\n  }\n\n  truststore {\n    type = \"jks\"\n    path = \"classpath:test.keystore\"\n    password = \"password\"\n  }\n}\n```\nThe \"proxied.server\" is the host and port of the service that you would normally connected to, but now that service will be proxied.\nIf the proxy is to make SSL connections to \"some service\" then you must configure where this proxy will acquire the necessary certificates and you must \"boot\" the proxy using SSLProxying instead of the default Proxying.\n\nAnd a \"boot\" object would be required for your proxy such as:\n```scala\nobject ExampleBootSSL extends App {\n  val config = ConfigFactory.load(\"application.example.ssl.conf\")\n\n  val proxiedServer = ProxiedServer(config.getString(\"proxied.server.host\"), config.getInt(\"proxied.server.port\"))\n\n  val server = Server(config.getString(\"spray.can.server.host\"), config.getInt(\"spray.can.server.port\"))\n\n  implicit val system = ActorSystem(\"rtp-proxy-ssl-example-spray-can\", config)\n\n  sys.addShutdownHook {\n    system.terminate()\n  }\n\n  SSLProxying(sslContext(config)).proxy(proxiedServer, server)\n}\n```\n\nWe can cURL the application (assuming that some service is being proxied) e.g.\n```bash\ncurl -ki http://localhost:9300\n```\nwhere -k command line argument turns off SSL certificate verification.\n\nOr where the certificate is passed along with the cURL command so a complete SSL certificate verification takes place:\n```bash\ncurl -i --cacert src/main/resources/test-certificate.crt https://localhost:9300\n```\n\nNote, that there is a built in health endpoint for the proxy itself:\n```\ncurl -ki http://localhost:9300/proxy-server\n```\n\nNOTE about timeouts.\nTimeout of requests defaults to 30 seconds. To override this in an application.conf, declare something like:\n````\nproxied.request-timeout = 1 minute\n```\n\nwhere you can use the likes of second, seconds, minute, minutes, hour etc.\n\nSSL\n---\nGenerate x509 certificate and private key:\n```bash\nopenssl req \n        -x509 \n        -sha256 \n        -newkey rsa:2048 \n        -keyout test-certificate.key \n        -out test-certificate.crt \n        -days 100000 \n        -nodes\n```\n\nOn JVM platform the goal is to have a Java keystore (JKS), a repository of security certificates.\nTo import our newly generated certificate into JKS, we have to export it in PKCS12 format and then create keystore out of it:\n```bash\nopenssl pkcs12 \n        -export \n        -in test-certificate.crt \n        -inkey test-certificate.key \n        -out test-keystore.p12 \n        -name test-keystore \n        -password pass:password\n\nkeytool -importkeystore \n        -srcstorepass password \n        -destkeystore test.keystore \n        -deststorepass password \n        -srckeystore test-keystore.p12 \n        -srcstoretype PKCS12 \n        -alias test-keystore\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/removals_wallboard","private":false,"url":"https://github.com/UKHomeOffice/removals_wallboard","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Removals Wallboard\n\n[![Build](https://travis-ci.org/UKHomeOffice/removals_wallboard.png)](https://travis-ci.org/UKHomeOffice/removals_wallboard)\n\n## Quickstart:\n\n Get [NodeJS](https://nodejs.org) via [nvm](https://github.com/creationix/nvm)\n```sh\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\n```\n\n#### Install NodeJS 4 LTS\n```sh\n$ nvm install 4\n$ nvm use 4\n```\n### Build:\n```sh\n$ npm install\n```\n### Test:\n```sh\n$ npm test\n```\n### CI Test:\n```sh\n$ npm test\n```\n### Start development service using localhost keycloak and localhost backend\n```sh\n$ npm start\n```\n### Build service to localhost\n```sh\n$ npm run build\n```\n## Environment variables\n\n| VAR | OPTION | RESULT |\n| --- | ------ | ------ |\n| BACKEND | [string] | backend to use |\n| KEYCLOAKURL | [string] | keycloak login url |\n| CLIENTID | [string] | keycloak client id |\n| KEYCLOAKACCOUNTSERVICE | [string] | url to use for managing the user's keycloak account |\n| PORT | [integer] | port to run nginx server on |\n\n## Docker\nCan be built and run in the same way with docker for example:\n```sh\n$ docker build -t ibm-frontend .\n$ docker run -i -e \"BACKEND=localhost:8000\" ibm-frontend\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/removals_schema","private":false,"url":"https://github.com/UKHomeOffice/removals_schema","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Bed Space Management Interface Control Document and schema\n\n[![Build](https://travis-ci.org/UKHomeOffice/removals_schema.png)](https://travis-ci.org/UKHomeOffice/removals_schema)\n\n## Purpose and Scope\nThis document describes the interface between IRC Bed Management and its data providers\nThe purpose of the document is to detail the interactions available between each IRC platform and the Home Office dashboard for Bed Allocation by DEPMU and describes the metadata and security arrangements for the data.\n\n## OWNERSHIP AND CONTROL\n\n### ICD Ownership\nThis ICD is currently owned by Home Office Digital on behalf of the IDP.\n\n### ICD Maintenance Policy\nProposed changes to this ICD and schema will be managed via [Github pull requests](https://help.github.com/articles/using-pull-requests/)\nAny material change to this ICD will need to be approved by the HO change control process.\nNon-material changes such as spelling mistakes of clarifications of existing capabilities do not require the HO change control process.\n\n\n## Interface Context\n\n### Business Context\nThe aim of this interface is to support the processing of updates of bed occupancy and events logged in the IRCs that DEPMU operate.\nThe business require a technology that will aggregate, store and display data in a secure manner that is highly resilient and available.\n\n### Conceptual Architecture Diagram\n\nProgramming interactions between IRCs and the DEPMU Bed Management Dashboard will be through a common API. \n\n[diagram]\n![Conceptual Architecture Diagram](./assets/architecture_diagram.png)\n\nThe API presents the following HTTP endpoints:\n- `/irc_entry/event`\n- `/irc_entry/heartbeat`\n\n## Event API\nInvoked on the following events by the IRC:\n\n1. When a detainee checked in IRC.\n1. When a detainee checked out IRC.\n1. When a bed becomes out of operation.\n1. When a bed returns into operation.\n1. When a detainee is moved between moved between two sites by the IRC.\n1. When a detainee is reinstated.\n1. When a detainee cid/gender/nationality is updated.\n\n##### Process flow:\n- Capture the data required as described in the schema\n- Validate data with the [schema](./event.json)\n- Submit to the correct endpoint (as provided to the provider) over HTTPS/TLS\n- Should an error occur submitting, queue the event, and retry the queue at `1 minute` intervals raising exceptions to the relevant support party so that it can be addressed and monitored\n  - timeout should be set to 5 seconds\n  - `3xx` redirects should be followed\n  - should a `4xx` or `5xx` error occur, \n  - consider ultimately anything (after any redirects) that result in a non `2xx` status code to be an error\n\n## Heartbeat API\nThe purpose of this is to provide always up to date bed occupation and out of commission information.\n\nInvoked at `1 minute` intervals.\n##### Process flow:\n- Capture the data required as described in the schema\n- Validate data with the [schema](./heartbeat.json)\n- Submit to the correct endpoint (as provided to the provider) over HTTPS/TLS\n- Should an error occur submitting *do not queue* and raise the exception to the relevant support party so that it can be addressed and monitored.\n  - Timeout should be set to 5 seconds\n  - `3xx` redirects should be followed\n  - Consider ultimately anything (after any redirects) that result in a non `2xx` status code to be an error\n\n# Utilities\nIn this repository you will also find a tool that can be used to generate fake data which can be useful for testing and exploring the schema.\n### To output 10 events to stdout\n```shell\nnode generate.js event.json 10\n```\n### To output 10 heartbeats to stdout\n```shell\nnode generate.js heartbeat.json 10\n```\nYou can also include tagged releases of the repository in your application.\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ges-proxy-service","private":false,"url":"https://github.com/UKHomeOffice/ges-proxy-service","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"GES Proxy Service\n=================\n\nScala Spray service to proxy request/response between client and server\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- Spray\n\nIntroduction\n------------\nTODO\n\nApplication\n-----------\nThe application is configured as per any Akka application, where the default configuration file is \"application.conf\".\nThis default file can be overridden with other \"conf\" files and then given to the application upon boot with the following example Java option:\n```bash\n-Dconfig.file=test-classes/application.test.conf\n```\n\nIndividual configuration properties can be overridden again by Java options e.g. to override which Mongodb to connect (if Mongo required configuring):\n```bash\n-Dmongo.db=some-other-mongo\n```\n\nwhere this overrides the default in application.conf.\n\nBooting the application (uk.gov.homeoffice.rtp.proxy.Boot) exposes a RESTful API to act as a proxy to the real API e.g. the following URL could be given in a browser, a browser's REST client plugin or curl:\n```bash\nhttp://localhost:9300/blah\n```\n\nthis would get back some appropriate response for some existing API.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```bash\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```bash\nbrew install typesafe-activator\n```\n\nTo compile:\n```bash\nsbt compile\n```\n\nor\n```bash\nactivator compile\n```\n\nTo run the specs:\n```bash\nsbt test\n```\n\nNote: Do not turn off the CONSOLE logging in test/resources/logback.xml as there are Specs that rely on this\n\nTo actually run the application, first \"assemble\" it:\n```bash\nsbt assembly\n```\n\nThis packages up an executable JAR - Note that \"assembly\" will first compile and test.\n\nThen just run as any executable JAR, with any extra Java options for overriding configurations.\n\nFor example, to use a config file (other than the default application.conf) which is located on the file system (in this case in the boot directory)\n```bash\njava -Dconfig.file=test-classes/my-application.conf -jar <jar name>.jar\n```\n\nNote that the log configuration file could also be included e.g.\n```bash\n-Dlogback.configurationFile=path/to/my-logback.xml\n```\n\nSo a more indepth startup with sbt itself could be:\n```bash\nsbt run -Dconfig.file=target/scala-2.11/test-classes/application.test.conf -Dlogback.configurationFile=target/scala-2.11/test-classes/logback.test.xml\n```\n\nAnd other examples:\n\nbooting from project root:\n```bash\njava -Dspray.can.server.port=8080 -jar target/scala-2.11/<jar name>.jar\n```\n\nand running from directory of the executable JAR using a config that is within said JAR:\n```bash\njava -Dconfig.resource=application.uat.conf -jar <jar name>.jar\n```\n\nFinally you can perform a quick test of the application by calling one of the monitor API e.g. making a cURL call to the application:\n```bash\ncurl http://localhost:9300/proxy-server \n```\n\nand to check the connection between the proxy and SOAP service:\n```bash\ncurl -X GET localhost:9300/soapservice/GesService?wsdl\n```\n\nSBT - Revolver\n--------------\nsbt-revolver is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nSee https://github.com/spray/sbt-revolver\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nGatling - Performance (Integration) Testing\n-------------------------------------------\nPerformance tests are under src/it, and test reports are written to the \"target\" directory.\n\nTo execute Gatling performance integration tests from withing SBT:\n```bash\ngatling-it:test\n```\n\nNote that as Gatling tests are integration tests, then a ges-proxy-service must be running.\nWhen running the proxy locally, the global-entry-stub should be started, where both applications run in either SSL or non-SSL mode.","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-clamav","private":false,"url":"https://github.com/UKHomeOffice/docker-clamav","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker ClamAV\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-clamav.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-clamav)\n\nDocker container for starting a [ClamAV](http://www.clamav.net/) daemon.\n\n## Getting Started\n\nThese instructions will cover how to start a container both in Docker and within a [Kubernetes](http://kubernetes.io/) cluster.\n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nOptionally:\n\n* A [Kubernetes](http://kubernetes.io/) cluster to enable Kubernetes api discovery of other nodes.\n\n### Usage\n\nThe example below will start a single ClamAV instance.\n\n```\ndocker run --name clamav -d -p 3310:3310 quay.io/ukhomeofficedigital/clamav:v0.1.0\n```\n\nTo use with [Kubernetes](http://kubernetes.io/) see the [kubernetes examples](examples/kubernetes.md).\n\n\n#### Environment Variables\n\nThe variables and the defaults are shown below.\nBy default, the container does not depend on [Kubernetes](http://kubernetes.io/). \n\n* `CLAMD_SETTINGS_CSV=\"LogVerbose yes,VirusEvent /custom_alert.sh\"` See [clamd.conf](http://linux.die.net/man/5/clamd.conf) for more details  \n  and see [./clamd.conf](./clamd.conf) for the default settings.  \n  To use specify a CSV of settings as they would apear in the config file e.g. `\"CLAMD_SETTINGS_CSV=Setting value\"`\n  Note, clamd has already been configured appropriately for a container but some useful settings include:    \n  * `VirusEvent /path/to/alert_script.sh` If mounted in the container, will provide a custom alert facility\n  * `LogClean yes` Will log every scan performed\n* `FRESHCLAM_SETTINGS_CSV=\"LogVerbose yes\"` See [freshclam.conf](http://linux.die.net/man/5/freshclam.conf) for more details  \n  and see [./freshclam.conf](freshclam.conf) for the default settings. See above for how this works.  \n* `UPDATE=true` (default) will start freshclam daemon in background to watch for update antivirus definitions  \n  `UPDATE=false` will watch for first successful update from separate sidecar container before starting\n* `UPDATE_ONLY=true` configure as a sidecar container and run the update process in the foreground  \n  `UPDATE_ONLY=false` (default) will run clamd and freshclam as normal.  \n  \n#### Ports\n\nThis container exposes:\n\n* `3310` - Access the [Clam AV API](http://linux.die.net/man/8/clamd).\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-clamav/tags). \n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-clamav/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* http://www.clamav.net/\n\n## TODO:\n\n* Ensure the DB access doesn't need to be for user 999 (so the volume can be mounted)...\n* Long startup time, see point above.\n* Add testing for Travis","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-static-haproxy","private":false,"url":"https://github.com/UKHomeOffice/docker-static-haproxy","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Static HAProxy Docker Container\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/static-haproxy/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/static-haproxy)\n\nThis container aims to be a generic and very basic tcp proxy service with static backends, i.e. not fancy service discovery here :-). You can specify\nvia the command line multiple proxies\n\n## Getting Started\n\nIn this section I'll show you some examples of how you might run this container with docker.\n\n### Prerequisities\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n## Usage\n\n```shell\nUsage: haconfig [options]\n    -p, --proxy SPEC                 a proxy specification for the haproxy\n    -d, --dryrun                     perform dryrun, i.e. just show the resulting configuration\n    -t, --template TEMPLATE          the path to the haproxy template erb\n    -h, --help                       display this usage menu\n```\n\nSo to create a load balancer on 127.0.0.1:8080 going to endpoints 10.50.10.100:3499,10.50.10.101:3499\n\n```shell\n[jest@starfury docker-static-haproxy]$ \tdocker run -ti --rm --net=host ukhomeofficedigital/static-haproxy -p 127.0.0.1:6443,10.50.10.100:3499,10.50.10.101:3499\n```\n\nNote: you can specify multiple proxies by repeating the -p switch.\n\n### Useful File Locations\n\n* `haproxy.conf.erb` is stored at `/etc/haproxy/haproxy.conf.erb`\n\n### Examples\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-static-haproxy)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/docker-static-haproxy)\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n## Authors\n\n* **Rohith Jayawardene** - *Initial work* - [gambol99](https://github.com/gambol99)\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/docker-static-haproxy/graphs/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hof","private":false,"url":"https://github.com/UKHomeOffice/hof","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# HOF [![npm version](https://badge.fury.io/js/hof.svg)](https://badge.fury.io/js/hof)\n\nHome Office Forms (HOF) is a single package that bundles up a collection of modules used to create forms at the Home Office in node.js.\n\n[*Read the support documentation*](./documentation/index.md) for more details or see use the simple instructions below to get started, or [*start a discussion on Slack*](https://ukgovernmentdigital.slack.com/messages/hof/)\n\n[The example app](https://github.com/UKHomeOffice/hof-example-form) is also a good place to start. We recommend cloning the repository, cleaning the commit history, and replacing the example form in there with one of your own. The example shows examples for most of the common ways you might want to use the libraries.\n\n## What is it?\n\nHOF provides the following which can be accessed through its properties.\n\n * [hmpo-form-wizard](https://github.com/UKHomeOffice/passports-form-wizard)\n * [hmpo-frontend-toolkit](https://github.com/UKHomeOffice/passports-frontend-toolkit)\n * [hmpo-govuk-template](https://github.com/UKHomeOffice/govuk-template-compiler)\n * [hmpo-model](https://github.com/UKHomeOffice/passports-model)\n * [hmpo-template-mixins](https://github.com/UKHomeOffice/passports-template-mixins)\n * [hof-controllers](https://github.com/UKHomeOffice/hof-controllers)\n * [i18n-future](https://github.com/lennym/i18n-future)\n * [hof-middleware](https://github.com/UKHomeOffice/hof-middleware)\n\n## Who's using HOF\n\n * [Contact UK Trade & Investment (UK Trade & Investment)](https://github.com/UKTradeInvestment/contact-ukti)\n * [Biometric Residence Permit (Home Office)](https://github.com/UKHomeOffice/brp_app)\n * [Report terrorist material (Home Office)](https://github.com/UKHomeOffice/RTM)\n * [HOF Example Form (Home Office)](https://github.com/UKHomeOffice/hof-example-form)\n * [UKVI Complaints (Home Office)](https://github.com/UKHomeOffice/Complaints)\n\n## Installation\n```bash\n$ npm install --save hof\n```\n\n## Usage\n```js\nvar hof = require('hof');\n\nvar wizard = hof.wizard;\nvar toolkit = hof.toolkit;\nvar template = hof.template;\nvar Model = hof.Model;\nvar mixins = hof.mixins;\nvar controllers = hof.controllers;\nvar i18n = hof.i18n;\nvar middleware = hof.middleware;\n```\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)","masterBranchProtection":false},{"name":"UKHomeOffice/hof-transpiler","private":false,"url":"https://github.com/UKHomeOffice/hof-transpiler","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# HOF Transpiler\n\nHome office forms transpiler is a tiny tool that can be used as part of a build or manually to convert multipart locales files into one default.json. This is used in our stack for translations of form applications.\n\n## Installation\n\n\n```npm install --save-dev hof-transpiler```\n\n## Usage\n\n```\nhof-transpiler [source dir|glob] {OPTIONS}\n\n       --shared, -s  A path or glob to a directory of shared translations\n\n  --writeShared, -w  Generate a built JSON file of the the shared\n                     translations. Default setting is false.\n\n```\n\n## Example\n\nLets say you have a directory such as: ```translations/src/en```\n\nWhich contains:\n```\nbuttons.json\nemails.json\nerrors.json\nvalidation.json\n```\n\nIf you run hof-transpiler against the directory ```hof-transpiler ./translations/src```\n\nIt will iterate through src and for each directory it will create a new directory at the root level with a built default.json file ```translations/en/default.json```\n\nWhich will look something like\n\n```\n{\n  \"buttons\": {\n    json blob from buttons.json\n  },\n  \"emails\": {\n    json blob from emails.json\n  },\n  \"errors\": {\n    json blob from errors.json\n  },\n  \"validation\": {\n    json blob from validation.json\n  }\n}\n```\n\nThis is used further down the hof stack for application translations.\n\n## Advanced example - duplicate keys between source folder and shared folder\n\nLets say you have a directory such as: ```translations/src/en```\n\nWhich contains:\nbuttons.json containing:\n```json\n{\n  \"unusual-button\": \"Moo\"\n}\n```\nemails.json containing:\n```json\n{\n  \"customer-email\": \"Hi how are you?\"\n}\n```\n\nAnd you also have a directory of shared translations such as: ```shared-translations/src/en```\n\nWhich contains:\nbuttons.json containing:\n```json\n{\n  \"common-button\": \"Click me\"\n}\n```\n\nIf you then run:\n```bash\nhof-transpiler translations/src -w --shared shared-translations/src\n```\n\nThen transpiled translations should appear in translations/en/default.json as follows:\n```json\n{\n  \"buttons\": {\n    \"unusual-button\": \"Moo\",\n    \"common-button\": \"Click me\"\n  },\n  \"emails\": {\n    \"customer-email\": \"Hi how are you?\"\n  }\n}\n```\n\nNote how a deep merge is performed between the json, with key value pairs from \"buttons\" being included from both files.\n\n## Multiple shared sources\n\nhof-transpiler supports multiple shared sources, extending them from right to left. This is useful if you have translations shared between applications, and additional shared translations between routes within an application.\n\nIf you have the following sources:\n\nnode_modules/hof-template-partials/translations/src/en/buttons.json\n```json\n{\n  \"continue\": \"Continue\",\n  \"skip\": \"Skip\",\n  \"submit\": \"Submit\",\n  \"abort\": \"Abort\"\n}\n```\n\ncommon/translations/src/en/buttons.json\n```json\n{\n  \"skip\": \"Skip this step\",\n  \"cancel\": \"Cancel\"\n}\n```\n\nmy-application/translations/src/en/buttons.json\n```json\n{\n  \"continue\": \"Go Forth!\"\n}\n```\n\nIf you then run:\n```bash\nhof-transpiler my-application/translations/src -w --shared common/translations/src --shared node_modules/hof-template-partials/translations/src\n```\n\nYou will end up with the following compiled files:\n\nnode_modules/hof-template-partials/translations/en/default.json\n```json\n{\n  \"buttons\": {\n    \"continue\": \"Continue\",\n    \"skip\": \"Skip\",\n    \"submit\": \"Submit\",\n    \"abort\": \"Abort\"\n  }\n}\n```\n\ncommon/translations/en/default.json\n```json\n{\n  \"buttons\": {\n    \"continue\": \"Continue\",\n    \"skip\": \"Skip this step\",\n    \"submit\": \"Submit\",\n    \"abort\": \"Abort\",\n    \"cancel\": \"Cancel\"\n  }\n}\n```\n\nmy-application/translations/en/default.json\n```json\n{\n  \"buttons\": {\n    \"continue\": \"Go Forth!\",\n    \"skip\": \"Skip this step\",\n    \"submit\": \"Submit\",\n    \"abort\": \"Abort\",\n    \"cancel\": \"Cancel\"\n  }\n}\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/myproject","private":false,"url":"https://github.com/UKHomeOffice/myproject","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/email-api","private":false,"url":"https://github.com/UKHomeOffice/email-api","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Email API\n\n[![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Femail-api.svg)](https://badge.fury.io/gh/ukhomeoffice%2Femail-api) [![Build Status](https://travis-ci.org/UKHomeOffice/email-api.svg?branch=master)](https://travis-ci.org/UKHomeOffice/email-api) [![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/email-api/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/email-api) [![Codacy Badge](https://api.codacy.com/project/badge/grade/8fad759d912b4a5793dfd101e71861f8)](https://www.codacy.com/app/purplebooth/email-api)\n\nThis is an service that will allow you to send templated emails via a RESTful API. \n\n## Getting Started\n\nThese instructions will cover usage information for developing stand alone, and running the docker container.\n\n### Clients\n\n#### Java Email Api Client\n\nClient Generated from the swagger file from this API.\n\nIncludes MVN and Gradle imports, for easy inclusion\n\n[[github](https://github.com/UKHomeOffice/email-api-client-java)] [[jitpack](https://jitpack.io/#UKHomeOffice/email-api-client-java)]\n\n#### JavaScript swagger-client (Swagger JS library)\n\nThis is the official Swagger javascript client for use with swagger enabled APIs (such as this one). Simply provide is the swagger.json ('yourhost:8080/swagger.json' on this project), to have a working client.\n\n[[npm](https://www.npmjs.com/package/swagger-client)]\n\n### Usage\n\nThe first step to using this API is to create some templates for it to use. To do this we use \n[freemarker](http://freemarker.org/). An example of this is below.\n\n```freemarker\nHello ${user},\n\nYou have received a test email.\n\nFrom\nThe Email API.\n```\n\nThe location that this application looks for templates is set in the `TEMPLATE_PATH` environment variable. \n\nThe template is then referred to by the filename when we try to load it. If we were to put it as \"test-text\" in the \ndirectory referred to by that environment variable, we could use it like below.\n\nIt's worth mentioning that this email service will send an MIME email with both text and html sections. The Html \ntemplates work in the exact same way, and you could even use the same template for both if you really wanted to. Below \nis an example of that.\n\n\n\nTo send the email, send a http `POST` request to the email service `http://localhost:8080/outbound` (assuming you're \nrunning the service at localhost on the default port).\n\n```json\n{\n  \"sender\": \"example@example.org\",\n  \"subject\": \"Subject of the email\",\n  \"htmlTemplate\": \"test-html\",\n  \"textTemplate\": \"test-text\",\n  \"variables\": {\"user\":\"user\"},\n  \"recipients\": [\n    \"test@example.com\"\n  ]\n}\n```\n\nThis will send an email.\n\nMost of these are self explanatory, however I just want to mention that the \"variables\" parameter can contain any JSON,\ndata, including objects, and arrays (on top of normal things like Numbers and Strings).\n\nIf you had made your email template the same as the one below, you should get an email which looks like the one below.\n\n```\nto: test@example.com\nfrom: example@example.org\nSubject: Subject of the email\n\nHello ${user},\n\nYou have received a test email.\n\nFrom\nThe Email API.\n```\n\nFor further documentation and a test client see the swagger documentation at `http://localhost:8080/swagger` \n\n### Running Stand Alone\n\nYou can run this application as a stand alone Java application\n\n#### Building\n\nThe tests will be automatically ran.\n\n```shell\n./gradlew install\n```\n\n#### Running\n\nWe configure the application through environment variables. See below.\n\n```shell\nSMTP_REQUIRE_TSL=false \\\nSMTP_START_TSL_ENABLED=false \\\nSMTP_ON_SSL_CONNECT=false \\\nSMTP_PASSWORD=\"\" SMTP_USERNAME=\"\" \\\nSMTP_PORT=1025 \\\nSMTP_HOSTNAME=localhost \\\nTEMPLATE_PATH=/tmp \\\n./build/install/email-api/bin/email-api server src/main/resources/configuration.yaml \n```\n\nMore details on these environment variables can be found in the docker section.\n\n#### Tests\n\n```shell\n./gradlew test\n```\n\n### Docker\n\n#### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n#### Usage\n\n##### Kubernetes Examples\n\nYou can find Kubernetes examples in the [k8s directory](k8s).\n\n##### Container Parameters\n\nIf you run the application without parameters it'll start the application.\n\n```shell\ndocker run quay.io/ukhomeofficedigital/email-api:v2.0.0\n```\n\nOtherwise it'll run the command you provide. For example the command below will run bash.\n\n```shell\ndocker run quay.io/ukhomeofficedigital/email-api:v2.0.0 bash\n```\n\n##### Environment Variables\n\n* `SMTP_HOSTNAME` The hostname of the SMTP server to use.\n* `SMTP_PORT` Server port (Default: 25)\n* `SMTP_REQUIRE_TSL` Require TSL (Default: false)\n* `SMTP_START_TSL_ENABLED` Start TSL Enabled (Default: false)\n* `SMTP_ON_SSL_CONNECT` SSL On Connect (Default: false)\n* `SMTP_USERNAME` If this is populated we will attempt to authenticate with the SMTP server (Default: \"\")\n* `SMTP_PASSWORD` Used if SMTP_USERNAME is set (Default: \"\")\n* `SMTP_PASSWORD_PATH` If used this will overwrite SMTP_PASSWORD with the contents of this file.\n* `TEMPLATE_PATH` Where to look for templates to use (Default: \"/templates\")\n\n##### Useful File Locations\n\n* `/templates` - Where to put your Freemarker templates\n\n## Built With\n\n* Dropwizard 0.8.2\n* Freemarker 2.3.23\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/email-api)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/email-api)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/email-api/tags). \n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/email-api/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure you have discussed any large changes in an issue first, and reference that issue in the PR.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of one other developer, or if you \n   do not have permission to do that, you may request the reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)","masterBranchProtection":false},{"name":"UKHomeOffice/email-api-client-java","private":false,"url":"https://github.com/UKHomeOffice/email-api-client-java","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Email API Client\n\n[![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Femail-api-client-java.svg)](https://badge.fury.io/gh/ukhomeoffice%2Femail-api-client-java) [![Build Status](https://travis-ci.org/UKHomeOffice/email-api-client-java.svg?branch=master)](https://travis-ci.org/UKHomeOffice/email-api-client-java)\n\nThis is a client for the [Email API](https://github.com/UKHomeOffice/email-api)\n\n## Getting Started\n\nThis documents how to get started using Maven or Gradle.\n\nThis repository is generated using [swagger-codegen](https://github.com/swagger-api/swagger-codegen). The command used is as follows:\n\n```shell\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate   \\\n    -i http://localhost:8080/swagger.json \\\n    -l java \\\n    --library jersey2 \\\n    --group-id uk.gov.homeoffice.emailapi \\\n    --artifact-id email-api-client \\\n    --api-package uk.gov.homeoffice.emailapi.client \\\n    --artifact-version v2.0.0  \\\n    -o ../email-api-client/ \n```\n\n### Adding to your project\n\n#### Gradle\n\nAdd JetPack as a repository\n\n```gradle\n repositories {\n        // ...\n        maven { url \"https://jitpack.io\" }\n    }\n```\n\n\n\n```gradle\n    dependencies {\n            compile 'com.github.UKHomeOffice:email-api-client:v2.0.0'\n    }\n```\n\n#### Maven\n\n```xml\n    <repository>\n        <id>jitpack.io</id>\n        <url>https://jitpack.io</url>\n    </repository>\n```\n\n```xml\n    <dependency>\n        <groupId>com.github.UKHomeOffice</groupId>\n        <artifactId>email-api-client</artifactId>\n        <version>v2.0.0</version>\n    </dependency>\n```\n\n### Using it\n\n```java\nimport io.swagger.client.ApiClient;\nimport io.swagger.client.model.TemplatedEmail;\nimport uk.gov.homeoffice.emailapi.client;\n```\n\n```java\nApiClient client = new ApiClient(\"localhost\");\nOutboundApi outboundEmailApi = new OutboundApi(client);\n\nTemplatedEmail email = TemplatedEmail();\n\n// Set some parameters on the email\n// email.setSender(\"annie@example.com\");\n// etc.\n\noutboundEmailApi.sendEmail(email);\n```\n\n## Built With\n\n* swagger-codegen\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/email-api-client-java)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nThe version of this repository tracks the [Email API](https://github.com/UKHomeOffice/email-api). For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/email-api-client-java/tags). \n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/email-api-client-java/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure you have discussed any large changes in an issue first, and reference that issue in the PR.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of one other developer, or if you \n   do not have permission to do that, you may request the reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)","masterBranchProtection":false},{"name":"UKHomeOffice/docker-stacks","private":false,"url":"https://github.com/UKHomeOffice/docker-stacks","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Stacks\n\n[Stacks](https://github.com/State/stacks) it's an Aws CloudFormation stacks management tool.\nIt can generate templates, list, create, delete and update stacks.\n\nTo use the docker image\n\n        -> % docker run -it --rm -v $(HOME)/.aws:/root/.aws:ro \\\n            quay.io/ukhomeofficedigital/stacks stacks --profile default --region eu-west-1 list\n\n            ukhomeofficedigital-guestbook-elb        CREATE_COMPLETE\n            ukhomeofficedigital-kubernetes-elb       CREATE_COMPLETE\n            ukhomeofficedigital-coreos-compute       UPDATE_COMPLETE\n            ukhomeofficedigital-coreos-etcd          UPDATE_COMPLETE\n            ukhomeofficedigital-coreos-etcd-volumes  UPDATE_COMPLETE\n            ukhomeofficedigital-infra                CREATE_COMPLETE\n\n\nThere are a few details you have to provide. AWS Credentials, profile and default region.\nThe name of your stack (called ENV) and the location of the templates folder.\n\n        -> % docker run -it --rm\n                -e AWS_PROFILE=HomeOfficeProfile \\\n                -e AWS_REGION=eu-west-1 \\\n                -e ENV=MyNewStack \\\n                -v $(HOME)/.aws:/root/.aws:ro  \\\n                -v $(pwd)/../examples/templates:/templates\n            quay.io/ukhomeofficedigital/stacks \\\n                stacks -p $AWS_PROFILE -r $AWS_REGION create -e ${ENV} -t /templates/infra.yaml ${ENV}-infra\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-stacks/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n\n## Authors\n\n* **Ivan Pedrazas** - *Initial work* - [ipedrazas](https://github.com/ipedrazas)\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/docker-stacks/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the MIT License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/docker-stacks/blob/master/LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hubot-merge-spam","private":false,"url":"https://github.com/UKHomeOffice/hubot-merge-spam","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Hubot Merge Spam\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/hubot-merge-spam.svg?branch=master)](https://travis-ci.org/UKHomeOffice/hubot-merge-spam) [![npm version](https://badge.fury.io/js/hubot-merge-spam.svg)](https://badge.fury.io/js/hubot-merge-spam)\n\nPeriodically announce to the channel what merge requests are available. Also print them on demand. Supports both GitLab's Merge Requests and GitHubs Pull Requests.\n\n## Usage\n\nThis is a plugin to Hubot\n\n```\n5:34:08 PM <•purplebooth> dec4rd: list mr\n5:34:09 PM <•dec4rd> @purplebooth: Listing Merge Requests\n5:34:09 PM <•dec4rd>  \n5:34:09 PM <•dec4rd> ⭐ API-Factory / data-assurance-dataimport#3 Added standard format\n5:34:09 PM <•dec4rd> 🔗 https://gitlab.digital.homeoffice.gov.uk/API-Factory/data-assurance-dataimport/merge_requests/3 \n5:34:09 PM <•dec4rd> 👤 purplebooth\n5:34:09 PM <•dec4rd>  \n5:34:09 PM <•dec4rd> ⭐ API-Factory / data-assurance-api#9 This should cause a test to fail\n5:34:09 PM <•dec4rd> 🔗 https://gitlab.digital.homeoffice.gov.uk/API-Factory/data-assurance-api/merge_requests/9 \n5:34:09 PM <•dec4rd> 👤 mikeyhu\n5:34:09 PM <•dec4rd>  \n5:34:09 PM <•dec4rd> ⭐ API-Factory / data-assurance-api#7 Standardise on coding style\n5:34:09 PM <•dec4rd> 🔗 https://gitlab.digital.homeoffice.gov.uk/API-Factory/data-assurance-api/merge_requests/7 \n5:34:09 PM <•dec4rd> 👤 purplebooth\n5:34:09 PM <•dec4rd>  \n```\n\n```\n9:23:33 AM <•purplebooth> dec4rd: list pr\n9:23:35 AM <•dec4rd> @purplebooth: Listing Pull Requests\n9:23:35 AM <•dec4rd>  \n9:23:35 AM <•dec4rd> ⭐ UKHomeOffice/passports-form-wizard#31 Support for multiple translators\n9:23:35 AM <•dec4rd> 🔗 https://github.com/UKHomeOffice/passports-form-wizard/pull/31 \n9:23:35 AM <•dec4rd> 👤 easternbloc 🔍 gavboulton\n9:23:35 AM <•dec4rd>  \n9:23:35 AM <•dec4rd> ⭐ UKHomeOffice/vaultconf#13 Added support for configuring secrets in vault\n9:23:35 AM <•dec4rd> 🔗 https://github.com/UKHomeOffice/vaultconf/pull/13 \n9:23:35 AM <•dec4rd> 👤 timgent\n9:23:35 AM <•dec4rd>  \n9:23:35 AM <•dec4rd> ⭐ UKHomeOffice/RTM#4 Add a local dev environment based on docker-compose\n9:23:35 AM <•dec4rd> 🔗 https://github.com/UKHomeOffice/RTM/pull/4 \n9:23:35 AM <•dec4rd> 👤 daniel-ac-martin\n9:23:35 AM <•dec4rd>  \n9:23:35 AM <•dec4rd> ⭐ UKHomeOffice/removals_dashboard#11 BM-264 unit tests\n9:23:35 AM <•dec4rd> 🔗 https://github.com/UKHomeOffice/removals_dashboard/pull/11 \n9:23:35 AM <•dec4rd> 👤 fulljames 🔍 chrisns\n9:23:35 AM <•dec4rd>  \n```\n\n## Installing\n\nTo add this plugin to hubot run \n\n```\nnpm i --save hubot-merge-spam\n```\n\nAnd add `hubot-merge-spam` to `external-scripts.json` in your hubot\n\n## Environment Variables\n\n* `HUBOT_MERGE_SPAM_ANNOUNCE_ROOMS` Rooms to periodically announce the state of the PRs and MRs into. Make this empty to not announce\n* `HUBOT_MERGE_SPAM_CRON` [Standard CRON](http://linuxconfig.org/linux-cron-guide) for when it should announce. Defaults to every 3 hours.\n* `HUBOT_MERGE_SPAM_GITHUB_ORGANISATION` GitHub Organisation to get the Pull Requests from. If this is blank it'll disable the GitHub functionality.\n* `HUBOT_MERGE_SPAM_GITHUB_AUTH_USERNAME` GitHub Username. If this or the auth token are missing it'll try to do the requests without authentication, but it'll probably hit rate limiting.\n* `HUBOT_MERGE_SPAM_GITHUB_AUTH_PASSWORD` GitHub password (generate one). \n* `HUBOT_MERGE_SPAM_GITLAB_HOST` GitLab URL. If token or this are missing it'll disable the GitLab aspects. \n* `HUBOT_MERGE_SPAM_GITLAB_API_TOKEN` GitLab API Token\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/UKHomeOffice/hubot-merge-spam/tags). \n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/hubot-merge-spam/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hubot-decard","private":false,"url":"https://github.com/UKHomeOffice/hubot-decard","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Decard\n\n[![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Fhubot-decard.svg)](https://badge.fury.io/gh/ukhomeoffice%2Fhubot-decard) [![Build Status](https://travis-ci.org/UKHomeOffice/hubot-decard.svg?branch=master)](https://travis-ci.org/UKHomeOffice/hubot-decard) [![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/hubot-decard/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/hubot-decard)\n\nDecard is a chat bot built on the [Hubot][hubot] framework. It was\ninitially generated by [generator-hubot][generator-hubot], and configured to be\ndeployed on [Heroku][heroku] to get you up and running as quick as possible.\n\nThis particular Hubot comes with the default scripts, and the [hubot-merge-spam](https://github.com/UKHomeOffice/hubot-merge-spam) script. This periodically announce to the channel what merge requests are available. It also prints them on demand.\n\n[heroku]: http://www.heroku.com\n[hubot]: http://hubot.github.com\n[generator-hubot]: https://github.com/github/generator-hubot\n\n### Running decard Locally\n\nYou can test your hubot by running the following, however some plugins will not\nbehave as expected unless the [environment variables](#configuration) they rely\nupon have been set.\n\nYou can start decard locally by running:\n\n    % bin/hubot\n\nYou'll see some start up output and a prompt:\n\n    [Sat Feb 28 2015 12:38:27 GMT+0000 (GMT)] INFO Using default redis on localhost:6379\n    decard>\n\nThen you can interact with decard by typing `decard help`.\n\n    decard> decard help\n    decard animate me <query> - The same thing as `image me`, except adds [snip]\n    decard help - Displays all of the help commands that decard knows about.\n    ...\n\n### Configuration\n\nA few scripts (including some installed by default) require environment\nvariables to be set as a simple form of configuration.\n\nThe default scripts that come with this bot are\n\n```json\n[\n  \"hubot-diagnostics\",\n  \"hubot-help\",\n  \"hubot-heroku-keepalive\",\n  \"hubot-google-images\",\n  \"hubot-google-translate\",\n  \"hubot-pugme\",\n  \"hubot-maps\",\n  \"hubot-redis-brain\",\n  \"hubot-rules\",\n  \"hubot-shipit\",\n  \"hubot-merge-spam\"\n]\n```\n\nAnd the `slack` adapter.\n\nThese are the environment variables for this bot\n\n* `REDISTOGO_URL` or `REDISCLOUD_URL` or `BOXEN_REDIS_URL` or `REDIS_URL` URL format: redis://<host>:<port>[/<brain_prefix>]\n* `HUBOT_SLACK_TOKEN` Your slack token\n* `HUBOT_MERGE_SPAM_ANNOUNCE_ROOMS` Rooms to periodically announce the state of the PRs and MRs into. Make this empty to not announce\n* `HUBOT_MERGE_SPAM_CRON` [Standard CRON](http://linuxconfig.org/linux-cron-guide) for when it should announce. Defaults to every 3 hours.\n* `HUBOT_MERGE_SPAM_GITHUB_ORGANISATION` GitHub Organisation to get the Pull Requests from. If this is blank it'll disable the GitHub functionality.\n* `HUBOT_MERGE_SPAM_GITHUB_AUTH_USERNAME` GitHub Username. If this or the auth token are missing it'll try to do the requests without authentication, but it'll probably hit rate limiting.\n* `HUBOT_MERGE_SPAM_GITHUB_AUTH_PASSWORD` GitHub password (generate one). \n* `HUBOT_MERGE_SPAM_GITLAB_HOST` GitLab URL. If token or this are missing it'll disable the GitLab aspects. \n* `HUBOT_MERGE_SPAM_GITLAB_API_TOKEN` GitLab API Token\n\n## Adapters\n\nAdapters are the interface to the service you want your hubot to run on, such\nas Campfire or IRC. There are a number of third party adapters that the\ncommunity have contributed. Check [Hubot Adapters][hubot-adapters] for the\navailable ones.\n\nIf you would like to run a non-Campfire or shell adapter you will need to add\nthe adapter package as a dependency to the `package.json` file in the\n`dependencies` section.\n\nOnce you've added the dependency with `npm install --save` to install it you\ncan then run hubot with the adapter.\n\n    % bin/hubot -a <adapter>\n\nWhere `<adapter>` is the name of your adapter without the `hubot-` prefix.\n\n[hubot-adapters]: https://github.com/github/hubot/blob/master/docs/adapters.md\n\n## Deploying To Heroku\n\n    % heroku create\n    % git push heroku master\n\nIf your Heroku account has been verified you can run the following to enable\nand add the Redis to Go addon to your app.\n\n    % heroku addons:add redistogo:nano\n\nIf you run into any problems, checkout Heroku's [docs][heroku-node-docs].\n\nYou'll need to edit the `Procfile` to set the name of your hubot.\n\nMore detailed documentation can be found on the [deploying hubot onto\nHeroku][deploy-heroku] wiki page.\n\n## Deploying To Docker & Kubernetes\n\nYou can use the docker container [quay.io/ukhomeofficedigital/hubot-decard](https://quay.io/repository/ukhomeofficedigital/hubot-decard), there are example k8s files in `/k8s`\n\n### Deploying to UNIX or Windows\n\nIf you would like to deploy to either a UNIX operating system or Windows.\nPlease check out the [deploying hubot onto UNIX][deploy-unix] and [deploying\nhubot onto Windows][deploy-windows] wiki pages.\n\n[heroku-node-docs]: http://devcenter.heroku.com/articles/node-js\n[deploy-heroku]: https://github.com/github/hubot/blob/master/docs/deploying/heroku.md\n[deploy-unix]: https://github.com/github/hubot/blob/master/docs/deploying/unix.md\n[deploy-windows]: https://github.com/github/hubot/blob/master/docs/deploying/unix.md\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hof-example-form","private":false,"url":"https://github.com/UKHomeOffice/hof-example-form","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"[![Build Status](https://travis-ci.org/UKHomeOffice/hof-example-form.svg?branch=master)](https://travis-ci.org/UKHomeOffice/hof-example-form)[![Dependencies](https://david-dm.org/UKHomeOffice/hof-example-form.svg)](https://david-dm.org/UKHomeOffice/hof-example-form)\n\n# Home Office Forms Example Form\n\nThis is an example of a service built with [Home Office Forms](https://github.com/UKHomeOffice/hof), A.K.A HOF. It intends to highlight many of the features available from HOF, but is not exhaustive.\n\n## Items of Note\n\nThis is not the only way to configure your HOF service. This service uses a typical Node.JS, Express architecture, with an entry point named `app.js`, which is where the majority of the set up occurs.\n\nThe specifics of a form are configured in `apps/`, this is where views, controllers, translations and the steps and fields are defined for each form journey (spoiler: there is only one at the moment).\n\nFor more info see the [HOF documentation](https://github.com/UKHomeOffice/hof/blob/master/documentation/index.md) or [join the discussion](https://ukgovernmentdigital.slack.com/messages/hof/)\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\n\n### Prerequisities\n\n- [NodeJS](https://nodejs.org/en/) - version 4 and up.\n- npm version 3 (bundled with node 5 and up)\n- [Redis server](http://redis.io/topics/quickstart) running on the default port\n- A basic understanding of Node.JS\n\n### Installing\n\nClone this repository: `git clone git@github.com:UKHomeOffice/hof-example-form`\n\nInstall the dependencies required to run the service and start the server in 'development' mode:\n  ```\n  $ npm install\n  $ npm run dev\n  ```\n\nVisit: [http://localhost:8080/my-awesome-form](http://localhost:8080/my-awesome-form)\n\n__If you are going to use this example form as a starting point for your own service, we encourage you to follow the next fews steps:__\n\n1. Delete the commit history: `rm -rf .git`\n\n2. Reconstruct the Git repo with only the current content:\n\n  ```\n  git init\n  git add .\n  git commit -m \"Initial commit\"\n  ```\n\n4. Set the remote origin:\n\n  ```\n  git remote add origin <github-uri>\n  git push -u --force origin master\n  ```\n\n## Running the tests\n\n### Unit tests\n```bash\n$ npm run test\n```\n\n### Functional tests\n\n```bash\n$ npm run test:acceptance\n```\n\nIt's worth glancing at the `scripts` in `package.json` to see what's happening\n\n## Contributing\n\nWe welcome contributions, especially if you have a new \"app\" to add to `apps/`, but we must insist you first [read the our contribution docs](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hof-controllers","private":false,"url":"https://github.com/UKHomeOffice/hof-controllers","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# hof-controllers [![npm version](https://badge.fury.io/js/hof-controllers.svg)](https://badge.fury.io/js/hof-controllers) [![Build Status](https://travis-ci.org/UKHomeOffice/hof-controllers.svg)](https://travis-ci.org/UKHomeOffice/hof-controllers)\n\nA collection of controllers extended from [passports-form-wizard](https://github.com/UKHomeOffice/passports-form-wizard) Wizard, Form Controller:\n```js\nrequire('hmpo-form-wizard').Controller\n```\n\n## Usage\n\n```js\nvar controllers = require('hof-controllers');\n```\n\n### Base Controller\n\nAccessed as `base` from `hof-controllers`\n\n```js\nvar baseController = require('hof-controllers').base;\n```\n\nExtends from [passports-form-wizard](https://github.com/UKHomeOffice/passports-form-wizard) Wizard, Form Controller.\n\n#### Added functionality for clearing sessions\n\n```js\n{\n  clearSession: true,\n  /* step options */\n}\n```\n#### Handles edit actions.\n\nIn the wizard options\n\n```js\n  hofWizard(steps, fields, {\n    /* wizard options */\n    params: '/:action?'\n  });\n```\n\nIn the view template\n\n```js\na href='page_name/edit'\n```\n\nOr override in step options\n\n```js\n{\n  continueOnEdit: true\n  /* step options */\n}\n```\n\n#### Locals for pluralisation\n\nAdds `single` or `multiple` to the locals to describe the number of errors for pluralisation of error messages.\n\n#### Exposes meta to templates\n\nAdd a locals object to step config to expose configurable key/value pairs in the template. Useful for generating template partials programmatically. These will override any locals provided further up the tree.\n\nSteps config\n```js\n'/step-name': {\n  locals: {\n    pageTitle: 'Page Title'\n    foo: 'bar'\n  }\n}\n```\n\nTemplate\n```html\n<h1>{{pageTitle}}</h1>\n<div class=\"{{foo}}\"></div>\n```\n\n#### Exposes fields to templates\n\nFields given in step config will be exposed to the template along with a mixin if defined in field config. This can be used with the [renderField](#renderField) mixin to programmatically generate templates.\n\nsteps.js\n```js\nsteps: {\n  'step-1': {\n    fields: [\n      'field-1',\n      'field-2'\n    ]\n  }\n}\n```\n\nfields.js\n```js\nfields: {\n  'field-1': {\n    mixin: 'input-text',\n    ...\n  },\n  'field-2': {\n    mixin: 'radio-group',\n    ...\n  }\n}\n```\n\nexposed to templates in format:\n```js\nfields: [{\n  key: 'field-1',\n  mixin: 'input-text'\n}, {\n  key: 'field-2',\n  mixin: 'radio-group'\n}]\n```\n\n#### Handles journey forking\n\nEach step definition accepts a `next` property, the value of which is the next route in the journey. By default, when the form is successfully submitted, the next steps will load. However, there are times when it is necessary to fork from the current journey based on a users response to certain questions in a form. For such circumstances there exists the `forks` property.\n\nIn this example, when the submits the form, if the field called 'example-radio' has the value 'superman', the page at '/fork-page' will load, otherwise '/next-page' will be loaded.\n\n```js\n\n'/my-page': {\n  next: '/next-page',\n  forks: [{\n    target: '/fork-page',\n    condition: {\n      field: 'example-radio',\n      value: 'superman'\n    }\n  }]\n}\n```\n\nThe condition property can also take a function. In the following example, if the field called 'name' is more than 30 characters in length, the page at '/fork-page' will be loaded.\n\n```js\n\n'/my-page': {\n  next: '/next-page',\n  forks: [{\n    target: '/fork-page',\n    condition: function (req, res) {\n      return req.form.values['name'].length > 30;\n    }\n  }]\n}\n```\n\nForks is an array and therefore each fork is interrogated in order from top to bottom. The last fork whose condition is met will assign its target to the next page variable.\n\nIn this example, if the last condition resolves to true - even if the others also resolve to true - then the page at '/fork-page-three' will be loaded. The last condition to be met is always the fork used to determine the next step.\n\n```js\n\n'/my-page': {\n  next: '/next-page',\n  forks: [{\n    target: '/fork-page-one',\n    condition: function (req, res) {\n      return req.form.values['name'].length > 30;\n    }\n  }, {\n    target: '/fork-page-two',\n    condition: {\n      field: 'example-radio',\n      value: 'superman'\n    }\n  }, {\n    target: '/fork-page-three',\n    condition: function (req, res) {\n      return typeof req.form.values['email'] === 'undefined';\n    }\n  }]\n}\n```\n\n--------------------------------\n\n### Date Controller\n\nAccessed as `\n` from `hof-controllers`\n\n```js\nvar dateController = require('hof-controllers').date;\n```\n\nExtends from `require('hof-controllers').base;`\n\n#### Date validation\n\n- Validates the dates as a single item.\n\n- Date validators default to: `required`, `numeric`, `format` (`DD-MM-YYYY`), and `future`.\n\n- What the validators the date validates against can be overridden with the `validate` property on the date key field.\n\nIn this example, the `'my-date'` fields will only validate if they contain non-numeric characters.\n\n```js\n{\n  'my-date': {\n    validate: ['numeric']\n  }\n}\n```\n\nNote: In the preceding example the field is not required and will not error on empty values.\n\n\n#### Extend and override `validateField`\n\nIf you want a shared date field to be required, but on a particular page wish it to be optional, `validateField` will accept a third parameter called `isRequired`.\nThis will allow the date field to be optional unless the user enters a value, in which case an appropriate message will be shown.\n\n```js\nMyController.prototype.validateField = function validateField(keyToValidate, req) {\n  return DateController.prototype.validateField.call(this, keyToValidate, req, false);\n};\n```\n\n#### Formats date\n\n- Adds a 'pretty' formatted (`D MMMM YYYY`) date to the form values.\n\n------------------------------\n\n### Error Controller\n\nA simple wrapper around `require('hmpo-form-wizard').Error;` to make it easier to extend and customise error behaviour on error.\n\n### Extending\n\nTo extend the functionality of a controller call the parent constructor and use node `util` to inherit the prototype;\n\n`this.dateKey` is the value of the date field that the controller will process. The value of the `this.dateKey` must match the name of the date field.\n[Read more about date fields](https://github.com/UKHomeOffice/hof/blob/master/documentation/fields.md#date-fields)\n\n```js\nvar DateController = function DateController() {\n  this.dateKey = 'my-date';\n  Controller.apply(this, arguments);\n};\n\nutil.inherits(DateController, Controller);\n```\n------------------------------\n\n### Confirm Controller\n\nExtends the base controller's locals method to provide data in a format suitable for generating a summary table.\n\nAccessed as `confirm` from `hof-controllers`.\n\n```js\nvar confirmController = require('hof-controllers').confirm;\n```\n\nExtends from `require('hof-controllers').base`\n\n#### Usage\n\nIn step options\n\n```js\n'/confirm': {\n  controller: require('hof-controllers').confirm,\n  config: {\n    tableSections: [{\n      name: 'section-one',\n      fields: [\n        'field-one',\n        'field-two',\n        'field-three'\n      ]\n    }],\n    modifiers: { // value of current field and req object provided\n      'field-two': function(value, req) {\n        return req.translate(`path.to.translations[${value}]`)\n      }\n    }\n  }\n}\n```\n\nIn config page template\n\n```html\n{{#tableSections}}\n  {{> partials-summary-table}} <!-- {{name}}, {{value}}, {{origValue}} and {{step}} are available in this scope -->\n{{/tableSections}}\n```\n\n------------------------------\n\n------------------------------\n\n## Mixins\n\n### renderField\n\nThe renderField mixin can be called in your template with the field to render as the scope. This will lookup the field.mixin in res.locals and call it passing the field key.\n\n```html\n{{#fields}}\n  {{#renderField}}{{/renderField}}\n{{/fields}}\n```\n\n#### conditionally rendering fields\n\n`renderField` supports conditionally omitting fields if `useWhen` is passed in field config.  `useWhen` accepts another field key `String` and checks the value is `true`, or an `Object` with the keys `field` and `value`.  The field to check cannot appear on the same step - consider using the `toggle` property to show/hide a field on the same step.\n\n```js\n'field-1': {\n  useWhen: 'field-2'\n}\n```\n`field-1` will only be included if `field-2` value is `true`\n\n```js\n'field-3': {\n  useWhen: {\n    field: 'field-4',\n    value: 'a-value'\n  }\n}\n```\n`field-3` will only be included if `field-4` value is `a-value`\n\n##### Use case\n\nWhen a field on a multiple-step form is only to be included depending on the outcome of a previous answer. In the below example `dependant-field` is only included on step-2 if `dependent-radio` on step-1 is `'yes'`;\n\nsteps.js\n```js\n{\n  '/step-1': {\n    fields: [\n      'dependent-radio'\n    ]\n  },\n  '/step-2': {\n    fields: [\n      'dependant-field',\n      'regular-field'\n    ]\n  }\n}\n```\n\nfields.js\n```js\n{\n  'dependent-radio': {\n    options: ['yes', 'no']\n  },\n  'dependant-field': {\n    useWhen: {\n      field: 'dependant-field',\n      value: 'yes'\n    }\n  },\n  'regular-field': {}\n}\n```\n\n## Test\n\n```bash\n$ npm test\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-mongo-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-mongo-lib","license":null,"readme":"RTP Mongo Library - Scala library to work with Mongodb drivers\n==============================================================\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Casbah\n\n- Salat\n\nIntroduction\n------------\nA library to easily \"configure\" your application to interact with Mongodb, currently via the Casbah driver.\n\nConfiguration, as well as using the standard reference/application.conf, is done via mixins to your application and test code.\n\nTo interact with Mongodb, choose to either utilise a Casbah or Salat Repository.\n\nA Casbah Repository represents a Mongodb collection to save and get back JSON.\n\nA Salat Repository represents a Mongodb collection to save a \"domain\" object (a case class) and get back said object.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```bash\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```bash\nbrew install typesafe-activator\n```\n\nTo compile:\n```bash\nsbt compile\n```\n\nor\n```bash\nactivator compile\n```\n\nTo run the specs:\n```bash\nsbt test\n```\n\nThe following packages up this library - Note that \"assembly\" will first compile and test:\n```bash\nsbt assembly\n```\n\nCasbah Repository Example\n-------------------------\n```scala\nimport uk.gov.homeoffice.mongo.casbah.Repository\n\ntrait ThingsRepository extends Repository {\n  val collectionName = \"things\"\n}\n\nval thingsRepository = new ThingsRepository with MyMongo\nthingsRepository.collection.save(<my JSON>)\n\n// OR if you \"apply\" the instance of the repository being created (a la JavaScript), then you don't need to call \"collection\" before calling an API method such as \"save\", \"find\" etc.\n\nval thingsRepository = (new ThingsRepository with MyMongo)()\nthingsRepository.save(<my JSON>)\n```\n\nOf course, where did that \"MyMongo\" come from? Each repository, whether Casbah or Salat, needs a \"Mongo\" mixed in, where the Mongo trait wraps the actual connection to Mongodb and so needs to be configured with the Mongodb details e.g. host, port, credentials.\n\nMyMongo could be coded as:\n```scala\nimport com.typesafe.config.ConfigFactory\nimport com.mongodb.casbah.MongoClientURI\n\ntrait MyMongo extends Mongo {\n  lazy val db = MyMongo.mydb\n}\n\nobject MyMongo {\n  lazy val mydb = Mongo db MongoClientURI(ConfigFactory.load getString \"mydb\")\n}\n```\n\nHey! That seems like a lot of extra set up code?\n\nWell, the trait (MyMongo) is a must, as we need this to mixin to all your repositories for a particular Mongodb.\n\nThen the object reads the actual configuration - but why here, why not in the trait? For example, why not just do the following?\n```scala\ntrait MyMongo extends Mongo {\n  lazy val db = Mongo db MongoClientURI(ConfigFactory.load getString \"mydb\")\n}\n```\n\nBig mistake! Everytime the trait is now mixed in, not only is a new Mongo connection created, an actual Mongo pool of connections are created - you'll soon have many connection pools and your application will quickly slow down.\n\nSalat Repository Example\n------------------------\n```scala\nimport uk.gov.homeoffice.mongo.salat.Repository\n\ntrait ThingsRepository extends Repository[Thing] {\n  val collectionName = \"things\"\n}\n\nval thingsRepository = new ThingsRepository with MyMongo\nthingsRepository save Thing()\n```\n\nwhere Thing would be one of your case classes.\n\nTesting\n-------\nThere are two available specifications for tests that interact with Mongo.\nMongoSpecification, which requires Mongo to be running locally, and EmbeddedMongoSpecification which has an embedded Mongo per specification.\n\nVia EmbeddedMongoSpecification, each example, within a specification, is run sequentially, as a test database is created and dropped.\n\nAnd via MongoSpecification, a unique test database is generated per example of a specification, allowing each to run (by default) in parallel.\n\nEmbeddedMongoSpecification Example\n----------------------------------\nThis trait must be mixed into a Specs2 specification and will give you a TestMongo to mix into your repository.\n```scala\nclass RepositoryEmbeddedMongoSpec extends Specification with EmbeddedMongoSpecification {\n  trait Context extends Scope {\n    val repository = new Repository[Thing] with TestMongo {\n      val collectionName = \"tests\"\n    }\n  }\n\n  \"Repository\" should {\n    \"find nothing\" in new Context {\n      repository.findAll().toList must beEmpty\n    }\n  }\n}\n```\n\nExample App\n-----------\nTo run ExampleApp:\n```bash\nsbt test:run\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/aws-dsp-toolset","private":false,"url":"https://github.com/UKHomeOffice/aws-dsp-toolset","license":null,"readme":"[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/aws-dsp-toolset/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/aws-dsp-toolset)\n\n# AWS Digital Services Platform Toolset Container\n\n### Overview\nThis container is responsible for holding the necessary tools for working with AWS to build infrastructure:\n* STACKS\n* AWS CLI\n* CFSSL\n* COREOS CLOUDINIT\n* KB8OR\n* VAULTCTL\n* DOCKER\n* S3SECRETS\n* KUBECTL\n* FLEETCTL\n\nThis is so we have versioned tools that we can test and validate against CI.\n\n### Additions\n\nAlong side the core tools are additional scripts that enable functionality in a central place.\n\n* peer_vpc\n* encrypt_secrets\n* decrypt_secrets\n* instances-list\n\n#### Peer VPC\n\nThis is used to peer VPC's together, (VPC Peering)\n\n#### Encrypt Secrets\n\nThis is used to encrypt secrets in a specific path and based on environment. If there are any files:\n```\nstacks/config.d/secrets_${stacks_env}.yaml\n```\n\nIt will use the kms key to encrypt those files leaving them as base64 encoded files e.g.\n\n```\nstacks/config.d/secrets_dev.yaml.enc\n```\n\n#### Decrypt Secrets\n\nThis is used to decrypt secrets based on the above leaving the yaml data as native data to be used by stacks\nallowing you to use potentially more sensitive information inside your templates without compromising the security\n\n```\ncat stacks/config.d/secrets_dev.yaml\ndev:\n  some_secret: 'some_data'\n\n{{some_secret}} now becomes a variable inside your templates for the development environment\n```\nThis is done when run.sh is initiated, decrypt_secrets will be executed before it runs stacks\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-ckan","private":false,"url":"https://github.com/UKHomeOffice/docker-ckan","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# CKAN Docker Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-ckan.svg)](https://travis-ci.org/UKHomeOffice/docker-ckan) [![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Fdocker-ckan.svg)](https://badge.fury.io/gh/ukhomeoffice%2Fdocker-ckan) [![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/ckan/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/ckan)\n\nThis is the home office packaging of [CKAN](http://ckan.org/)\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container\n\n### Prerequisites\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Get started quick\n\nThis will get CKAN running\n\n```\ndocker run -d --privileged=true --name solr milafrerichs/ckan_solr\ndocker run -d --privileged=true --name db ckan/postgresql\ndocker run -p 5000:5000 \\\n           --link db:db \\\n           --link solr:solr \\\n           quay.io/ukhomeofficedigital/ckan:$CONTAINER_VERSION\n```\n\nThen Point your browser at `https://<your-docker-host>:5000` and you'll see ckan.\n\n#### TLS Parameters\n\nTLS is enabled by default in this container, and we dynamically create a self signed certificate if no certificate is created.\nIf you'd like to implement your own certs then simply mount then into `/etc/httpd/ssl`\n\n```\ndocker run -p 5000:5000 \\\n           --link db:db \\\n           --link solr:solr \\\n           -v /path/to/certs:/etc/httpd/ssl\n           quay.io/ukhomeofficedigital/ckan:$CONTAINER_VERSION\n```\n\nWe also allow you to define the domain for your self-signed tls certs, just use the `DOMAIN` env variable.\n\n#### Container Parameters\n\nIf you run the container without parameters, just run it\n\n```shell\ndocker run quay.io/ukhomeofficedigital/ckan:$CONTAINER_VERSION\n```\n\nIf you pass a parameter to the container we'll try to run it, so\n\n```shell\ndocker run quay.io/ukhomeofficedigital/ckan:$CONTAINER_VERSION bash\n```\n\n#### Environment Variables\n\n* `DATABASE_URL` - URL for the primary database, in the format expected by sqlalchemy (required\n                   unless linked to a container called 'db')\n* `SOLR_URL` - URL for solr (required unless linked to a container called 'solr')\n\n* `DOMAIN` - Domain for ckan to run under, defaults to `localhost`\n\n* `DB_CREDS` - Path to file where username and password are stored, this will in turn populate `DATABASE_USER` and `DATABASE_PASSWORD` (useful for vault_sidekick)\n\n* `DATABASE_USER` - String containing the username for DB\n\n* `DATABASE_PASSWORD` - String containing password for DB\n\n#### Volumes\n\n* `/var/lib/ckan` - CKAN Data Directory\n\n#### Useful File Locations\n\n* `/userscripts` - All executable files in this directory will be executed before starting ckan\n* `/app/ckan/plugins` - All plugins placed in here will be added to ckan by running `python setup.py develop` on them\n\n## Built With\n\n* CKAN 2.4.1\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-ckan)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/ckan)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the\n[tags on this repository](https://github.com/UKHomeOffice/docker-ckan/tags).\n\n## Authors\n\nSee the list of [contributors](https://github.com/UKHomeOffice/docker-ckan/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/Feedback","private":false,"url":"https://github.com/UKHomeOffice/Feedback","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# BRP Application project for nodejs\n\n[![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/brpapp/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/brpapp)\n\n## Quick start\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\nInitiate the server in development mode (Express is used to serve the static resources in development).\n```bash\n$ npm run dev\n```\n\nThen select one of the following journeys to see the applcation in action\n\n- [Collection](http://localhost:8080/collection)\n- [Someone else](http://localhost:8080/someone-else)\n- [Not arrived](http://localhost:8080/not-arrived)\n- [Correct mistakes](http://localhost:8080/correct-mistakes)\n- [Lost, damaged or stolen](http://localhost:8080/lost-damaged-stolen)\n\nSee the [development documentation](./documentation/DEVELOPMENT.MD) for a complete description of the application and how to maintain and support BRP.\n\n\n## NPM scripts\n\nStart the application in default mode (production).\nWe use Nginx to serve our static resources in production and ci.\n```bash\n$ npm start\n```\n\nStart the application with [Nodemon](https://www.npmjs.com/package/nodemon) in development mode.\nDebug is switched on and the server restarts when the JS or Sass are recompiled.\n```bash\n$ npm run dev\n```\n\nRun the unit tests\n```bash\n$ npm run test\n```\n\nRun the EcmaScript (ES) linter.  Rules are defined in [.eslintrc](./.eslintrc)\n```bash\n$ npm run lint\n```\n\nRun the jscs style checker. Rules are defined in [.jscsrc.json](./.jscsrc.json)\n```bash\n$ npm run style\n```\n\nAnalyse the quality of the codebase (for results - open [./reports/plato/index.html](./reports/plato/index.html))\n```bash\n$ npm run quality\n```\n\nCompile the Sass to CSS\n```bash\n$ npm run sass\n```\n\n_____________________________________________________________\n\n- For details on [Acceptance tests](https://github.com/UKHomeOffice/brp_app/tree/master/acceptance_tests)\n\n- See the [package.json](./package.json) for a full list of scripts.\n\n- Full list of [environment variables](./documentation/ENVIRONMENT_VARIABLES.md)\n\n","travis":false,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/passport-enquiries-form","private":false,"url":"https://github.com/UKHomeOffice/passport-enquiries-form","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Passport Enquiries Form project for nodejs\n\n\n## Quick start\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\nInitiate the server in development mode (Express is used to serve the static resources in development).\n```bash\n$ npm run dev\n```\n\n\n## NPM scripts\n\nStart the application in default mode (production).\nWe use Nginx to serve our static resources in production and ci.\n```bash\n$ npm start\n```\n\nStart the application with [Nodemon](https://www.npmjs.com/package/nodemon) in development mode.\nDebug is switched on and the server restarts when the JS or Sass are recompiled.\n```bash\n$ npm run dev\n```\n\nRun the unit tests\n```bash\n$ npm run test\n```\n\nRun the EcmaScript (ES) linter.  Rules are defined in [.eslintrc](./.eslintrc)\n```bash\n$ npm run lint\n```\n\nRun the jscs style checker. Rules are defined in [.jscsrc.json](./.jscsrc.json)\n```bash\n$ npm run style\n```\n\nAnalyse the quality of the codebase (for results - open [./reports/plato/index.html](./reports/plato/index.html))\n```bash\n$ npm run quality\n```\n\nCompile the Sass to CSS\n```bash\n$ npm run sass\n```\n\n_____________________________________________________________\n\n- For details on [Acceptance tests](https://github.com/UKHomeOffice/passport-enquiries-form/tree/master/acceptance_tests)\n\n- See the [package.json](./package.json) for a full list of scripts.\n\n- Full list of [environment variables](./documentation/ENVIRONMENT_VARIABLES.md)\n\n","travis":false,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/docker-solr","private":false,"url":"https://github.com/UKHomeOffice/docker-solr","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Solr Docker Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-solr.svg)](https://travis-ci.org/UKHomeOffice/docker-solr) [![GitHub version](https://badge.fury.io/gh/ukhomeoffice%2Fdocker-solr.svg)](https://badge.fury.io/gh/ukhomeoffice%2Fdocker-solr) [![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/solr/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/solr)\n\nThis is a docker container for [Solr](http://lucene.apache.org/solr/).\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisites\n\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### Usage\n\n#### Container Parameters\n\nTo run a single Solr server:\n\n```shell\ndocker run --name my_solr -d -p 8983:8983 -t quay.io/ukhomeofficedigital/solr:$CONTAINER_VERSION\n```\n\nThen with a web browser go to `http://localhost:8983/` to see the Admin Console (adjust the hostname for your docker host).\n\nTo use Solr, you need to create a \"core\", an index for your data. For example:\n\n```shell\ndocker exec -it --user=solr my_solr bin/solr create_core -c gettingstarted\n```\n\nIn the web UI if you click on \"Core Admin\" you should now see the \"gettingstarted\" core.\n\nIf you want to load some example data:\n\n```shell\ndocker exec -it --user=solr my_solr bin/post -c gettingstarted example/exampledocs/manufacturers.xml\n```\n\nIn the UI, find the \"Core selector\" popup menu and select the \"gettingstarted\" core, then select the \"Query\" menu item. This gives you a default search for \":\" which returns all docs. Hit the \"Execute Query\" button, and you should see a few docs with data. Congratulations!\n\nTo learn more about Solr, see the [Apache Solr Reference Guide](https://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide).\n\nDistributed Solr\nYou can also run a distributed Solr configuration, with Solr nodes in separate containers, sharing a single ZooKeeper server:\n\nRun ZooKeeper, and define a name so we can link to it:\n\n```shell\ndocker run --name zookeeper -d -p 2181:2181 -p 2888:2888 -p 3888:3888 jplock/zookeeper\n```\n\nRun two Solr nodes, linked to the zookeeper container:\n\n```shell\ndocker run --name solr1 --link zookeeper:ZK -d -p 8983:8983 \\\n      quay.io/ukhomeofficedigital/solr:$CONTAINER_VERSION \\\n      bash -c '/opt/solr/bin/solr start -f -z $ZK_PORT_2181_TCP_ADDR:$ZK_PORT_2181_TCP_PORT'\ndocker run --name solr2 --link zookeeper:ZK -d -p 8984:8983 \\\n      quay.io/ukhomeofficedigital/solr:$CONTAINER_VERSION \\\n      bash -c '/opt/solr/bin/solr start -f -z $ZK_PORT_2181_TCP_ADDR:$ZK_PORT_2181_TCP_PORT'\n```\n\nCreate a collection:\n\n```shell\ndocker exec -i -t solr1 /opt/solr/bin/solr create_collection \\\n        -c collection1 -shards 2 -p 8983\n```\nThen go to `http://localhost:8983/solr/#/~cloud` (adjust the hostname for your docker host) to see the two shards and Solr nodes.\n\n## Environment Variables\n\n* `ZK_HOST` (Optional) The ZooKeeper connection string your current SolrCloud nodes use to connect \n  to ZooKeeper; this value will be the same for all nodes in the cluster.\n* `SOLR_HOST` (Optional) The hostname each Solr node used to register with ZooKeeper when joining \n  the SolrCloud cluster; this value will be used to set the host Java system property when starting \n  the new Solr 5 process.\n* `SOLR_PORT` (Optional) The port each Solr node is listening on, such as 8983.\n* `OVERRIDE_SOLR_PORT` (Optional) Sets `SOLR_PORT` on runtime.\n* `SOLR_HOME` (Optional) The absolute path to the Solr home directory for each Solr node; this\n  directory must contain a solr.xml file\n\n## Built With\n\n* Solr 5.3.1\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-solr)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/solr)\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-solr/tags). \n\n## License\n\nThis is based off the official Solr container, and we have included much of the text and code they \nprovide.\n\nThe primary changes made to this repository is to allow us to base this image of our parent image, \nrather than one provided.\n\nWe have sublicensed this variant under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for\n details. You can find the Apache v2.0 license they distribute that code with at \n[ORIGINAL-LICENSE.md](ORIGINAL-LICENSE.md).\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/drone-test-build","private":false,"url":"https://github.com/UKHomeOffice/drone-test-build","license":null,"readme":"# drone-test-build\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/openvpn-authd","private":false,"url":"https://github.com/UKHomeOffice/openvpn-authd","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/deep-ui","private":false,"url":"https://github.com/UKHomeOffice/deep-ui","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# deep-ui\nWeb interface for CI/CD private and public dashboards\n\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-ckan-solr","private":false,"url":"https://github.com/UKHomeOffice/docker-ckan-solr","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Docker Container with Ckan Configuration of Solr\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/ckan-solr/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/ckan-solr) [![Build Status](https://travis-ci.org/UKHomeOffice/docker-ckan-solr.svg)](https://travis-ci.org/UKHomeOffice/docker-ckan-solr) [![GitHub version](https://badge.fury.io/gh/UKHomeOffice%2Fdocker-ckan-solr.svg)](https://badge.fury.io/gh/UKHomeOffice%2Fdocker-ckan-solr) \n\nThis docker container CKAN configuration of Solr.\n\n## Running\n\nSee the [docker-solr](https://github.com/UKHomeOffice/docker-solr) repo for full details.\n\nTo run a single Solr server:\n\n```bash\ndocker run --name ckan-solr -d -p 8983:8983 -t quay.io/ukhomeofficedigital/ckan-solr:$CONTAINER_VERSION\n```\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for details\n\n## License\n\nThis repository is licensed under the GPL v2 License. See [LICENSE.md](LICENSE.md) for full details.\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/deep-api","private":false,"url":"https://github.com/UKHomeOffice/deep-api","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# deep-api\nRest API  for deep\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/data-catalogue","private":false,"url":"https://github.com/UKHomeOffice/data-catalogue","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# Data Catalogue\n\n[![Codacy Badge](https://api.codacy.com/project/badge/grade/617b2a093c8246179ca234fcd7b765fd)](https://www.codacy.com/app/purplebooth/data-catalogue) [![Build Status](https://travis-ci.org/UKHomeOffice/data-catalogue.svg)](https://travis-ci.org/UKHomeOffice/data-catalogue) [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/data-catalogue/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/data-catalogue) [![GitHub version](https://badge.fury.io/gh/UKHomeOffice%2Fdata-catalogue.svg)](https://badge.fury.io/gh/UKHomeOffice%2Fdata-catalogue)\n\nA quick spike to get CKAN running in docker with our own config\n\n## Starting\n```\ndocker-compose up db solr\ndocker-compose up ckan\n```\n\n## Deploying\n\nKubernetes files can be found at [k8s/](k8s/)\n\n## Loading data\n\nRequires *Python* and *pip*\n\n```\ncd loader\npip install -r requirements.txt\npython baseloader.py http://your-docker-instance your-api-key\n```\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-scala-play","private":false,"url":"https://github.com/UKHomeOffice/docker-scala-play","license":{"key":"lgpl-2.1","name":"GNU Lesser General Public License v2.1","spdxId":"LGPL-2.1","url":"https://api.github.com/licenses/lgpl-2.1","featured":false},"readme":"# Deprecated in favour of [this image](https://github.com/UKHomeOffice/docker-scala-sbt)\n\n# docker-scala-play\nEnables build of Scala apps using the play framework\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-web","private":false,"url":"https://github.com/UKHomeOffice/lev-web","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# LEV Front End\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/lev-web.svg?branch=master)](https://travis-ci.org/UKHomeOffice/lev-web)\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisities\n\nWhat things you need to install the software and how to install them\n- NodeJS\n\n### Installing\n\n`npm install`\n\n## Running the tests\n\n### Locally\n```bash\nnpm test\n```\n\n### Acceptance tests against a server\n```bash\nENV=dev TEST_URL=http://lev-web-dev.dsp.notprod.homeoffice.gov.uk USERNAME=xxxx PASSWORD=xxxx npm run chimp\n```\nOR\n```\ndocker build -f ./E2E_test_Dockerfile -t lev-web-e2e-tests .\ndocker run --rm -e ENV=dev -e TEST_URL=http://lev-web-dev.dsp.notprod.homeoffice.gov.uk -e USERNAME=xxxx -e PASSWORD=xxxx lev-web-e2e-tests\n```\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details\n\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-client","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-client","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Mysql client\n\nDocker container for provisioning mysql databases.\n\n## Getting Started\n\nThese instructions will cover how to start a container both in Docker and within a [Kubernetes](http://kubernetes.io/) cluster.\n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nOptionally:\n\n* A [Kubernetes](http://kubernetes.io/) cluster to enable Kubernetes api discovery of other nodes.\n\n### Usage\n\nThe example below will run a mysql client container and create the database test with the user test_user:\n\n```\ndocker run -i --rm=true \\\n       -e MYSQL_HOST=localhost \\\n       -e APP_DB_NAME=mydb \\\n       -e ROOT_PASS=secretpass \\\n       -e APP_DB_USER=myapp_user \\\n       -e APP_DB_PASS=myapppass \\\n       quay.io/ukhomeofficedigital/mysql-client:v0.1.2\n```\n\nTo use with [Kubernetes](http://kubernetes.io/) see the [kubernetes examples](examples/kubernetes.md).\n\n\n#### Environment Variables\n\nThe variables and the defaults are shown below.\nBy default, the container does not depend on [Kubernetes](http://kubernetes.io/). \n\n* `MYSQL_HOST=hostname` The host to connect to.\n* `MYSQL_PORT=3306` The port to connect to.\n* `ENABLE_SSL=FALSE` When set to TRUE, will ensure all users must connect using SSL using the Amazon RDS CA.\n* `DEFAULT_PW=changeme` Supports changing a database provisioned root password from this value.\n* `ROOT_PASS=`\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mysql-client/tags).\n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mysql-client/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/Employers-Checking-Service-Form","private":false,"url":"https://github.com/UKHomeOffice/Employers-Checking-Service-Form","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Employers-Checking-Service-Form\nEmployers-Checking-Service-Form\n","travis":false,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.","masterBranchProtection":false},{"name":"UKHomeOffice/gro","private":false,"url":"https://github.com/UKHomeOffice/gro","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# GRO (General Registrars Office) [![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/gro/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/gro)\n\n## Getting Started\n\n### Prerequisities\n\n- [Node.js](https://nodejs.org/en/) - Tested against LTS\n- NPM (installed with Node.js) - Works with versions 2 and 3.\n- [Redis server](http://redis.io/download) running on the default port\n\n### Up & Running\n\n```bash\n$ cd gro\n$ npm install\n$ npm run dev\n```\n\nThen visit: [http://localhost:8080/](http://localhost:8080/)\n\n## Testing\n\n### Acceptance Tests\nWith the server running in development mode (`npm run dev`), start the acceptance tests:\n\n```bash\n$ npm run test:acceptance\n```\nPhantomjs is required to run the acceptance tests (`npm install phantomjs`), or alternatively, export `IN_BROWSER=true` to run the tests in Firefox.\n\n### Unit Tests\n```bash\n$ npm t\n```\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-artifactory","private":false,"url":"https://github.com/UKHomeOffice/docker-artifactory","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Docker Artifactory Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-artifactory.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-artifactory)\n\nDocker container that runs artifactory and supports both PRO and Community edition building.\n\n## Getting Started\n\nThese instructions will cover usage information and for the docker container \n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\n### BUILD ARG Variables\n\n* `ARTIFACTORY_VERSION` - The version of artifactory you want to pull down the RPM, this defaults to artifactory-pro-rpms as oppose artifactory-rpms\n\n### Environment Variables\n\n* `ARTIFACTORY_HOME` - The artifactory home path\n* `TOMCAT_HOME` - The tomcat home path\n* `ARTIFACTORY_INIT` - The artifactory shell script\n* `ARTIFACTORY_USER` - The artifactory user\n* `ARTIFACTORY_VERSION` - The artifactory version, defaults to the build arg\n* `MAVEN_MYSQL` - The maven MYSQL path for the JDBC driver\n* `DEBUG` - This will set the startup script to bash debug mode when you run it to troubleshoot issues\n* `PROXY` - Whether you intend to have a Proxy infront of the service or not, defaults to false\n* `STORAGE_PROPERTIES` - Path to the storage properties file\n* `LICENSE` - The license string for the PRO version to pass in as text\n* `MYSQL` - Whether you are using MYSQL or not defaults to false\n* `MYSQL_CONNECTOR_VERSION` - The MYSQL connector version for the JDBC version defaults to 5.1.37\n* `MYSQL_CONNECTOR_MD5SUM` - The MYSQL connector MD5SUM to validate the right thing is pulled down\n* `MYSQL_OUTPUT_FILE` - The output file location of where to place the JDBC driver connector\n* `MYSQL_USER` - The MYSQL Username\n* `MYSQL_DB` - The MYSQL Database name\n* `MYSQL_PASS` - The MYSQL Password\n* `MYSQL_HOST` - The MYSQL HOSTNAME\n* `MYSQL_PORT` - The MYSQL Port\n* `S3` - Whether you are using S3 to store binaries instead of the filesystem, defaults to false\n* `S3_AWS_ACCESS_KEY` - The S3 Access Key\n* `S3_AWS_SECRET_ACCESS_KEY` - The S3 Secret\n* `S3_AWS_ENDPOINT` - The S3 Endpoint, defaults to eu-west-1\n\n\n### Ports\n\n* `8081`- This container exposes port 8081\n\n\n## Volumes\n* `${ARTIFACTORY-HOME}/logs` - The logs should be going to stdout / stderr but is a volume\n* `${ARTIFACTORY_HOME/data` - The data directory for where the data lives, this is for the filesystem binaries but negated if using s3\n* `${ARTIFACTORY_HOME/backup` - Used for backups, we can then sync up these to S3 as a scheduled job\n\n### Usage\n\nTo do a standard build for the pro version\n```docker build -t artifactory:latest .```\n\nTo do a standard build but for the basic version\n```docker build --build-arg ARTIFACTORY_VERSION=artifactory-rpms -t artifactory:latest .```\n\nTo run artifactory with support for varying requirements, specify them as runtime environment variables\n```docker run -e MYSQL=true -e MYSQL_DB=artifactory -e MYSQL_USER=artifactory -e MYSQL_PASS=artifactory -e MYSQL_HOST=1.2.3.4```\n\n# Use this repo\nFROM quay.io/ukhomeofficedigital/artifactory:v0.4.0\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-artifactory/tags). \n\n## Authors\n\n* **Jon Shanks** - *Initial work* - [Jon Shanks](https://github.com/jon-shanks)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-artifactory/contributors) who \nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n* [JFrog Artifactory](https://www.jfrog.com/artifactory/)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/blueprint","private":false,"url":"https://github.com/UKHomeOffice/blueprint","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# blueprint\nBlueprinting system for DSP\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mailcatcher","private":false,"url":"https://github.com/UKHomeOffice/docker-mailcatcher","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Mail Catcher\n\nDocker container for [Mail Catcher](http://mailcatcher.me/)\n\n## Getting Started\n\nThese instructions will cover how to start a container both in Docker and within a [Kubernetes](http://kubernetes.io/) cluster.\n\n### Prerequisites\n\nIn order to run this container you'll need docker installed.\n\n* [Windows](https://docs.docker.com/windows/started)\n* [OS X](https://docs.docker.com/mac/started/)\n* [Linux](https://docs.docker.com/linux/started/)\n\nOptionally:\n\n* A [Kubernetes](http://kubernetes.io/) cluster to enable Kubernetes api discovery of other nodes.\n\n### Usage\n\nThe example below will run a mailcatcher container listening on port 1025 (SMTP) and 1080 (API and UI):\n\n```\ndocker run -i --rm=true \\\n       -p 1025:1025 \\\n       -p 1080:1080 \\\n       quay.io/ukhomeofficedigital/mailcatcher:v0.1.0\n```\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](code_of_conduct.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the \n[tags on this repository](https://github.com/UKHomeOffice/docker-mailcatcher/tags).\n\n## Authors\n\n* **Lewis Marshall** - *Initial work* - [Lewis Marshall](https://github.com/LewisMarshall)\n\nSee also the list of [contributors](https://github.com/UKHomeOffice/docker-mailcatcher/contributors) who\nparticipated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n## Acknowledgments\n\n[Mail Catcher](http://mailcatcher.me/)","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-java7-mvn","private":false,"url":"https://github.com/UKHomeOffice/docker-java7-mvn","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# docker-java7-mvn\nbase docker image with java7 and maven\n\n## Usage\n\nThis docker container is intended for use in Java projects.\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-java7-mvn/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n## Build With\n\n* java-1.7.0-openjdk-devel\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/java-1.7.0-openjdk-deve/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/java-1.7.0-openjdk-deve/blob/master/LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/dspctl","private":false,"url":"https://github.com/UKHomeOffice/dspctl","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/dronescheduler","private":false,"url":"https://github.com/UKHomeOffice/dronescheduler","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Drone scheduler\n\n[![Build Status](https://drone.notprod.homeoffice.gov.uk/api/badges/UKHomeOffice/dronescheduler/status.svg)](https://drone.notprod.homeoffice.gov.uk/UKHomeOffice/dronescheduler) [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/dronescheduler/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/dronescheduler)\n\nCurrently drone doesn't support scheduled builds. Since we need to build some projects on a regular base, we have created a small container that will run a cron job and will trigger drone builds.\n\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n\n","masterBranchProtection":false},{"name":"UKHomeOffice/pingdom_tools","private":false,"url":"https://github.com/UKHomeOffice/pingdom_tools","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# pingdom_tools\nA place to put a Pingdom management tool\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/AppealRightsExhausted","private":false,"url":"https://github.com/UKHomeOffice/AppealRightsExhausted","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# AppealRightsExhausted\nA calculator to determine Appeal Rights Exhausted\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/dockerfile-validator","private":false,"url":"https://github.com/UKHomeOffice/dockerfile-validator","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# dockerfile-validator\nLittle util to check if your Dockerfile is valid according to your defined rules\n\nIt works by defining your rules in a file, `rules.yaml` for example, and running the tool against the `Dockerfile` you want to test. This tool is useful\nas a previous step to do your `docker build` to guarantee that you only build docker images that match your rules.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/HttpsClient","private":false,"url":"https://github.com/UKHomeOffice/HttpsClient","license":null,"readme":"# HttpsClient\n\nThis repository contains software to test client certificates against a web server with a configured certificate authority.\nThe assumption is that you have created an RSA private key (client.key) file and you have had a certificate signing request signed by a certificate authority making an x509 certificate (client.crt) file.\n\n## Build\n\nThis program can be built using the makefile provided.  There are commands for building OSX, Linux and Windows versions of the software.  Binaries are generated in the bin directory.  This software is built with Go 1.5.  \nAlternatively you can download the binaries you need from the bin directory.\n\n    // OSX\n    make osx\n    \n    // Linux\n    make linux\n    \n    // Windows 32 bit\n    make win32\n    \n    // Windows 64 bit\n    make win64\n\n## Usage\n\nThe httpsClient program requires three arguments:\n\n    - key  The key file created by the client.\n    - cert The certificate generated by the certificate authority.\n    - url  The url of the web server to test the client certificate against. \n \n## Example\n\n    ./httpsClient_linux -key client.key -cert client.crt -url https://www.someserver.com\n    \n    // Sample output\n    httpsClient v1.0 - UK Home Office\n    \n    STATUS\n    HTTP/1.1 200 OK\n    \n    HEADERS\n    Server: nginx\n    Date: Wed, 13 Jan 2016 10:02:52 GMT\n    Content-Type: text/plain;charset=ISO-8859-1\n    Content-Length: 7\n    Connection: keep-alive\n    X-Application-Context: application\n    \n    BODY\n    SUCCESS\n\n    \n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/keycloakjs-redirect","private":false,"url":"https://github.com/UKHomeOffice/keycloakjs-redirect","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# keycloakjs-redirect\n\n[![Build](https://travis-ci.org/UKHomeOffice/keycloakjs-redirect.png)](https://travis-ci.org/UKHomeOffice/keycloakjs-redirect)\n\n## Use case\n\nA Frontend Javascript service that integrates with the [Keycloak authentication service](http://keycloak.jboss.org/), guiding users to a login portal when a 401 Unauthorised response is received from an API.\n\n## Install\n\n```bash\n$ npm i keycloak-redirect\n```\n\n## Configuration\n\nImport the package, then use the object exposed to return the function `authenticate`, passing in all mandatory arguments: a config object, a XMLHttpRequest object, and window.\n\n```js\n    \n   import keycloakRedirect from 'keycloak-redirect';\n   \n   var config = {\n       backend: \"http://yourBackendUrl.com\",\n       clientId: \"yourClientId\",\n       keycloakUrl: \"http://yourKeycloakUrl.com\"\n   };\n   \n   keycloakRedirect.authenticate(config, new XMLHttpRequest(), $window);\n```\n\n## Run Tests\n\n```bash\n$ npm test\n```\n\n## Compile the code with babel\n```bash\n$ npm run compile\n```","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vitess","private":false,"url":"https://github.com/UKHomeOffice/vitess","license":null,"readme":"# vitess","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-sticky","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-sticky","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Nginx-sticky\n \nHack for nginx sticky sessions used for the removals project.  This is hopefully a temp thing until kubernetes supports sticky sessions based on something that isn't ClientIp\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/gds-payments","private":false,"url":"https://github.com/UKHomeOffice/gds-payments","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"This is your new Play application\n=================================\n\nThis file will be packaged with your application, when using `activator dist`.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/custom-fields-middleware","private":false,"url":"https://github.com/UKHomeOffice/custom-fields-middleware","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Custom Fields Middleware [![Build Status](https://travis-ci.org/UKHomeOffice/custom-fields-middleware.svg?branch=master)](https://travis-ci.org/UKHomeOffice/custom-fields-middleware)\n\nAdds and transforms custom fields on the response\n\n## Usage\n\nIn Express, pass the middleware to `app.use` before the router\n```js\napp.use(require('custom-fields-middleware'));\n```\n\nAssign a model to `customfields` from anywhere in your app\n```js\n\nres.customfields = {\n  id: 'foo',\n  value: 'bar'\n};\n```\n\nAssign a collection\n```js\nres.customfields = [{id: 'foo', value: 'bar'}, {id: 'bar', value: 'bar'}];\n```\n\nRead the value(s)\n```js\nres.customfields.foo // 'bar'\nres.customfields.bar // 'baz'\n```\n\n\n### Params\n\n- `id`: {String} required. The name of the value.\n- `value`: {*} required. The value to be assigned to the id.\n- `transforms`: {Array|String|Function} options. A function or list of functions to transforms the value.\n\n\n### Transforms\n\nA transform is a function that takes two arguments, the value and the request object.\n\n```js\n\nvar square (value, req) => value * value;\n\nres.customfields = {\n  id: 'foo',\n  value: 'bar',\n  transforms: [square]\n};\n```\n\nBuilt-in transforms include:\n\n- `baseurl`: prepends the value with `req.baseUrl`\n\nUse a built-in transform by passing the name to the `transforms` field.\n```js\nres.customfields = {\n  id: 'foo',\n  value: 'bar',\n  transforms: ['baseurl']\n};\n```\n\n### Install\n\n```bash\n$ npm install custom-fields-middleware --save\n```\n\n### Scripts\n```bash\n$ npm test\n```\n\n```bash\n$ npm lint\n```\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-rtp-testing","private":false,"url":"https://github.com/UKHomeOffice/docker-rtp-testing","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/scala-presentation","private":false,"url":"https://github.com/UKHomeOffice/scala-presentation","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"Scala Presentation\n==================\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Specs2\n\nIntroduction\n------------\nExamples of using Scala as a high level introduction, but also some funky stuff as well.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nAmmonite-REPL in SBT\n--------------------\n> sbt test:console","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-caseworker-mongo-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-caseworker-mongo-lib","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"RTP Caseworker Mongo Library\n============================\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Specs2\n\n- Casbah/Salat\n\nIntroduction\n------------\nTODO\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n> brew install sbt\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n> brew install typesafe-activator\n\nTo compile:\n> sbt compile\n\nor\n> activator compile\n\nTo run the specs:\n> sbt test\n\nAmmonite-REPL in SBT\n--------------------\n> sbt test:console","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-cfn-signal","private":false,"url":"https://github.com/UKHomeOffice/kube-cfn-signal","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Kubernetes CloudFormation Signal\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/kube-cfn-signal.svg?branch=master)](https://travis-ci.org/UKHomeOffice/kube-cfn-signal)\n\nThis little utility can health check kubernetes endpoints until they become\nready and send a signal to CloudFormation API.\n\nCloudFormation allows you to set\n[CreationPolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html)\nand\n[UpdatePolicy](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html)\nattributes on stack resources, the one we're interested in is the Autoscaling group\nresource which looks after the Kubernetes nodes.\n\nThe most useful place to use this is when you're doing AutoScaling group\nrolling updates.\n\n### Requirements\n#### IAM Instance Policy\nNormally you would want to run `kube-cfn-signal` from within an instance which\nis being created/updated. So to make things simpler, it is advisable to allow\nyour kubernetes nodes to query tags and send a signal to CloudFormation API.\n\n```json\n{\n    \"Statement\": [\n        {\n            \"Resource\": \"arn:aws:ec2:*:*:instance/*\",\n            \"Action\": [\n                \"ec2:DescribeTags\",\n            ],\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Resource\": \"arn:aws:cloudformation:*:*:stack/*/*\",\n            \"Action\": [\n                \"cloudformation:SignalResource\"\n            ],\n            \"Effect\": \"Allow\"\n        }\n    ]\n}\n```\n\n### Running\n#### Systemd Unit\n```\n[Unit]\nDescription=Kubernetes cfn signal\nDocumentation=https://github.com/UKHomeOffice/kube-cfn-signal\n\n[Service]\nType=oneshot\nPrivateTmp=true\nProtectSystem=full\nRemainAfterExit=yes\nTimeoutStartSec=10m\nExecStart=/opt/bin/kube-cfn-signal --insecure-skip-tls-verify\n```\n\n## Build\n\nDependencies are located in the vendor directory and managed using\n[govendor](https://github.com/kardianos/govendor) cli tool.\n\n```\ngo test -v -cover\n\nmkdir -p bin\nGOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags \"-X main.Version=dev+git\" -o bin/kube-cfn-signal\n```\n\n\n## Release process\n\nPush / Merge to master will produce a docker\n[image](https://quay.io/repository/ukhomeofficedigital/kube-cfn-signal?tab=tags) with a tag `latest`.\n\nTo create a new release, just create a new tag off master.\n\n\n## Contributing\n\nWe welcome pull requests. Please raise an issue to discuss your changes before\nsubmitting a patch.\n\n\n## Author\n\nVaidas Jablonskis [(vaijab)](https://github.com/vaijab)\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mysql-galera","private":false,"url":"https://github.com/UKHomeOffice/docker-mysql-galera","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/fileproducer_kafka","private":false,"url":"https://github.com/UKHomeOffice/fileproducer_kafka","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# File Producer for Kafka\n\nThis tool is a Kafka producer to be used as a side-ckick container to push files into Kafka.\n\nAfter building the tool, you can run it using the following command:\n\n        FILE=\"file_to_be_sent\" TOPIC=\"TOPIC_USED\" PARTITION=0 BROKERS=\"localhost:9092\" CLIENT_NAME=\"mygotest\" ./file_producer\n\n\nIf you want to use the container, the command is:\n\n        docker run -e FILE=\"myfile.zip\" -e TOPIC=\"TEST_GO\" \\\n            -e PARTITION=0 -e BROKERS=\"localhost:9092\"  \\\n            -e CLIENT_NAME=\"ivantest2\" \\\n            -v $(pwd)/myfile.zip:/myfile.zip \\\n            quay.io/ukhomeofficedigital/docker-file-producer\n\n","travis":false,"contributing":"# How to contribute\n\nThis document outlines some of the conventions on commit message formatting,\ncontact points for developers and other resources to make getting your\ncontribution into DSP easier.\n\n## Contribution flow\n\nThis is a rough outline of what a contributor's workflow looks like:\n\n- Create a topic branch from where you want to base your work. This is usually master.\n- Make commits of logical units.\n- Make sure your commit messages are in the proper format (see below).\n- Push your changes to a topic branch.\n- Submit a pull request to UKHomeOffice/dsp.\n- Your PR must receive a LGTM from two people.\n\nIf unsure about your change, submit an issue to start a discussion.\n\nThanks for your contributions!\n\n### Format of the Commit Message\n\nWe follow a rough convention for commit messages that is designed to answer two\nquestions: what changed and why. The subject line should feature the what and\nthe body of the commit should describe the why.\n\n```\nscripts: add the test-cluster command\n\nthis uses tmux to setup a test cluster that you can easily kill and\nstart for debugging.\n\nFixes #38\n```\n\nThe format can be described more formally as follows:\n\n```\n<subsystem>: <what changed>\n<BLANK LINE>\n<why this change was made>\n<BLANK LINE>\n<footer>\n```\n\nThe first line is the subject and should be no longer than 70 characters, the\nsecond line is always blank, and other lines should be wrapped at 80 characters.\nThis allows the message to be easier to read on GitHub as well as in various\ngit tools.\n","masterBranchProtection":false},{"name":"UKHomeOffice/vaultctl","private":false,"url":"https://github.com/UKHomeOffice/vaultctl","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"### **Vaultctl**\n\n---\nVaultctl is a command line utilty for provisioning a Hashicorp's [Vault](https://www.vaultproject.io) from configuration files. Essentially it was written so we could source control our users, policies, backends and secrets, synchronize the vault against them and rebuild on-demand if required.\n \n##### **Build**\n---\n \n There is a Makefile in the root directory, so a simply ***make*** will build the project. Alternatively you can run the build inside a docker via ***make docker-build***\n \n##### **Usage**\n---\n \n```shell\n[jest@starfury vaultctl]$ bin/vaultctl --help\nNAME:\n   vaultctl - is a utility for provisioning a hashicorp's vault service\n\nUSAGE:\n   vaultctl [global options] command [command options] [arguments...]\n   \nVERSION:\n   v0.0.1\n   \nAUTHOR(S):\n   Rohith <gambol99@gmail.com> \n   \nCOMMANDS:\n   synchronize, sync\tsynchonrize the users, policies, secrets and backends\n   transit, tr, trans\tEncrypts / decrypts files using the Vault transit backend\n   help, h\t\tShows a list of commands or help for one command\n   \nGLOBAL OPTIONS:\n   -A, --vault-addr \"http://127.0.0.1:8200\"\tthe url address of the vault service [$VAULT_ADDR]\n   -u, --vault-username \t\t\tthe vault username to use to authenticate to vault service [$VAULT_USERNAME]\n   -p, --vault-password \t\t\tthe vault password to use to authenticate to vault service [$VAULT_PASSWORD]\n   -c, --credentials \t\t\t\tthe path to a file (json|yaml) containing the username and password for userpass authenticaion [$VAULT_CRENDENTIALS]\n   --verbose\t\t\t\t\tswitch on verbose logging for debug purposed\n   --kube-populate\t\t\t\twhether or not to populate the vault crendentials into the namespaces\n   --help, -h\t\t\t\t\tshow help\n   --version, -v\t\t\t\tprint the version\n``` \n\n##### **Configuration**\n\nThe configuration files for vaultctl can be written in json or yml format *(note, it check the file extension to determine the format)*. You can specify multiple configuration files and or multiple directories containing config files. \n\n###### - **Authentication**\n\nAuthentication backends can be created using the following\n\n```YAML\nauths:\n- path: userpass\n  type: userpass\n- path: some/path/users\n  type: userpass\n- path: github\n  type: github\n  attributes:\n  - uri: config\n    organization: SomeOrganization\n```\n\n###### - **Users**\n\nUsers are place in a users: [] collection, the vault authentication type *(at present only userpass is supported, though it would be trivial to add more)* followed by the policies associated to the user\n\n```YAML\nusers:\n- userpass:\n    username: rohithj\n    password: password1\n  policies:\n    - common\n    - platform_tls\n```\n\n###### - **Backends**\n\nThe backends are defined under the 'backends[]' collection, each backend must have a path *(i.e. a mount point)*, a type which is the Vault backend type, a description *(which is enforced)* and an optional collection of config items. Keeping it simple the config[] is essentially a series of PUT requests. You can grab the configuration options and the uri from the Vault documentation. Note. an extra option *'oneshot'* been added, it simply means the config option will ONLY is run the first time the backend is created, which is useful for some backends like PKI, transit etc.\n\n```YAML\nbackends:\n- type: transit\n  path: platform/encode\n  description: A transit backend used to encrypt configuration files\n  attributes:\n  - uri: keys/default\n    oneshot: true\n- type: generic\n  path: platform/secrets\n  description: platform secrets\n- path: platform/platform_tls\n  description: platform tls\n  type: generic\n- path: platform/pki\n  type: pki\n  description: Platform PKI backend\n  attributes:\n  - uri: root/generate/internal\n    common_name: example.com\n    ttl: 3h\n    oneshot: true\n  - uri: roles/example-dot-com\n    allowed_domains: example.com\n    allow_subdomains: true\n    max_ttl: 1h \n# one of the annoying things about the mysql backend is it attempts to connect to the db when\n# adding the config/connection config??\n- path: platform/db\n  type: mysql\n  description: Platform Database\n  attributes:\n  - uri: config/connection\n    value: root:root@tcp(127.0.0.1:3306)/\n    oneshot: true\n  - uri: roles/readonly\n    sql: CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT SELECT ON *.* TO '{{name}}'@'%'\n```    \n\n###### - **Secrets**\n\n```YAML\nsecrets:\n  - path: platform/secrets/platform_tls\n    values:\n      hello: world\n      rohith: yes\n  - path: platform/secrets/se1\n    values:\n      hello: world\n      rohith: yes\n```      \n\n###### - **Example Output**\n\n```shell\n[jest@starfury vaultctl]$ bin/vaultctl -u admin -p password  sync -p tests/policies -c platform.yml\nINFO[0000] -> synchronizing the vault policies, 3 files \nINFO[0001] [policy: common.hcl] successfully applied the policy, filename: tests/policies/common.hcl \nINFO[0001] [policy: platform.hcl] successfully applied the policy, filename: tests/policies/platform.hcl \nINFO[0001] [policy: platform_tls.hcl] successfully applied the policy, filename: tests/policies/platform_tls.hcl \nINFO[0001] -> synchronizing the vault users, users: 1 \nINFO[0001] [user: rohithj] ensuring user, policies: root \nINFO[0001] -> synchronizing the backends, backend: 2 \nINFO[0001] [backend: platform/encode]: already exist, moving to configuration \nINFO[0001] [backend:platform/encode/keys/default] skipping the config, as it's a oneshot setting \nINFO[0001] [backend: platform/secrets]: already exist, moving to configuration \nINFO[0001] -> synchronizing the secrets with vault, secrets: 0 \nINFO[0001] synchronization complete, time took: 1.733908869s \n```\n\n#### **Transit Encryption**\n---\nThe sub-command 'transit' permits you to encrypt and decrypt the file contents using a [Vault transit](https://www.vaultproject.io/docs/secrets/transit/index.html) backend. The current use case being we hand off management to others to manage their our namespaces, secret, backends etc and behold a generic endpoint for encryption. \n\n##### **TODO**\n---\n\n- Need to finish off the Kubernetes intregetion to place the vault credentials in k8s secrets.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vault-web-client","private":false,"url":"https://github.com/UKHomeOffice/vault-web-client","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Vault webclient\n\n\nThis client is a lightweight web interface to interact with Vault.\n\n\nTo install it you have to run the usual javascript suspects:\n\n```\nnpm install\nbrower install bootstrap\n\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-zookeeper","private":false,"url":"https://github.com/UKHomeOffice/docker-zookeeper","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Zookeeper on Kubernetes\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/zookeeper/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/zookeeper)\n\nBits you need to run Zookeeper cluster on Kubernetes. It is based on Zookeeper\nversion 3.5.x which is currently in alpha, but it's been pretty stable.\n\n\n### Deployment\nBy default, if you don't specify any parameters, zookeeper will start in\nstandalone mode.\n\nDeploying onto a Kubernetes cluster is fairly easy. There are example\nkubernetes controller and service files in [kube/](kube/) directory.\n\nIn the service yaml files, you will notice that we asked for static\n`ClusterIP`, in this example case, we're using `10.200.0.0/16` service IP\nrange. It is very likely that your estate is configured to use different\nservice IP range, so be sure you set the right IPs.\n\nZookeeper itself relies on the following DNS names for find its peers:\n- `zookeeper-1`\n- `zookeeper-2`\n- `zookeeper-3`\n\n\n#### Deploy Services\nThere is no strict ordering how you deploy the resources, let's start with\nservices first:\n\n```bash\n$ kubectl create -f kube/zookeeper-service.yaml\n$ kubectl create -f kube/zookeeper-1-service.yaml\n$ kubectl create -f kube/zookeeper-2-service.yaml\n$ kubectl create -f kube/zookeeper-3-service.yaml\n```\n\nLet's list the services. There are four services, `zookeeper` service is\npointing to all zookeeper instances - for clients to use. The rest are pointing\nto each relevant zookeeper pod.\n\n```bash\n$ kubectl get services\nNAME          CLUSTER_IP       EXTERNAL_IP   PORT(S)                      SELECTOR                          AGE\nzookeeper     10.200.143.219   <none>        2181/TCP                     service=zookeeper                 4h\nzookeeper-1   10.200.10.31     <none>        2181/TCP,2888/TCP,3888/TCP   name=zookeeper-1,zookeeper_id=1   23h\nzookeeper-2   10.200.10.32     <none>        2181/TCP,2888/TCP,3888/TCP   name=zookeeper-2,zookeeper_id=2   23h\nzookeeper-3   10.200.10.33     <none>        2181/TCP,2888/TCP,3888/TCP   name=zookeeper-3,zookeeper_id=3   23h\n```\n\n\n#### Deploy Replication Controllers\n\n```\n$ kubectl create -f kube/zookeeper-1-controller.yaml\n$ kubectl create -f kube/zookeeper-2-controller.yaml\n$ kubectl create -f kube/zookeeper-3-controller.yaml\n```\n\nGet the pods:\n```\n$ kubectl get pods\nNAME                READY     STATUS    RESTARTS   AGE\nzookeeper-1-w3u4g   1/1       Running   0          9m\nzookeeper-2-kpwaj   1/1       Running   0          9m\nzookeeper-3-vcl94   1/1       Running   0          9m\n```\n\n#### Test the Cluster\n\nNow, let's see if our zookeeper cluster is healthy. First, we will set `/foo`\nkey to `bar`, then kill the Pod and try to get `/foo` from another zookeeper\ninstance:\n\n```bash\n$ kubectl exec -ti zookeeper-1-w3u4g bash\n\n[root@zookeeper-1-w3u4g zookeeper]# bin/zkCli.sh\n[zk: localhost:2181(CONNECTED) 1] create /foo bar\nCreated /foo\n[zk: localhost:2181(CONNECTED) 2] get /foo\nbar\n```\n\nDelete the pod we just used to set the `/foo` value:\n```\n$ kubectl delete zookeeper-1-w3u4g\n$ kubectl exec -ti zookeeper-3-vcl94 bash\n\n[root@zookeeper-3-vcl94 zookeeper]# bin/zkCli.sh\n[zk: localhost:2181(CONNECTED) 0] get /foo\nbar\n```\n\nThis just shows that if one node dies, the cluster is still functioning and the\ndeleted pod will be re-created by the replication controller.\n\n### Known Caveats\n\nBy default there is no data persistence. So be aware that if you delete more\nthan one replication controller or more than one pod, you will lose the quorum.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-mongo","private":false,"url":"https://github.com/UKHomeOffice/docker-mongo","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# docker-mongo\nDocker container for Mongo\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rest-experian-qas-internet","private":false,"url":"https://github.com/UKHomeOffice/rest-experian-qas-internet","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"\n# rest-experian-qas-internet\n\nAddress Lookup for the Passport Office Renewals application.\n\nThis project implements the address lookup service for the Passport Office Renewals application - using Java, the DropWizard framework, and Maven for building.\n\nThe Passport Office Renewals application allows people to renew their passports online.\n\nFor address lookup the service uses the QAS Experian 'On Demand' SOAP web service. The service provides a WSDL, and we use the Apache CXF framework to generate and provide Java wrapper classes for the functions exposed in the WSDL.\n\nThis address lookup service provides a RESTful abstraction over the SOAP web service, for use by the passport exemplar frontend application.\n\nYou will need valid credentials to use the web service. Credentials are configured in the service's 'configuration.yml' configuration file.\n\n## Prerequisites\n\n* Git\n* Oracle Oracle Java 8 JDK/OpenJDK 8\n* Maven (version 3.0 or above)\n* Credentials for using the QAS OnDemand web service\n\n## Build and Deploy\n\nUsing Maven:\n\n```\n$ mvn clean package\n```\n\n## Configuration\n\nBefore you can run the service you need to configure it.\n\nYou probably want to create your own configuration file that is a copy of `configuration.yml` and call it `configuration_development.yml`, and then edit that.\n\n## Running the service\n\nExecute the jar file, providing 'server' and the name of the configuration file as arguments.\n\nFrom the command line (example):\n\n```\n$ java -jar target/rest-experian-qas-internet-0.1.jar server configuration_development.yml\n```\n\n## Example responses\n\n### Swagger\n\nThe most fun way to see responses from the api is to visit `http://your-hostname:9190/swagger` in your browser and run \nsome commands through the swagger client.\n\nNote: To prevent csrf, you can only use swagger from the host that drop wizard thinks it's hosted at. This is probably\nthe hostname of your machine, rather than localhost.\n\n### Wget\n\nIf you prefer you can also use wget\n\n#### Search\n\n```\nwget -O- http://localhost:9190/addresses.json?postcode=N19%205BW\n```\n```\n[{\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|xxxxxxxx.vkgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",    \n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Larch Close, Islington, London N19 5BW\"\n}, {\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|xxxxxxxx.yUgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",\n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Marlborough Road, Islington, London N19 5BW\"\n}, {\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|xxxxxxxx.1EgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",\n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Rowan Walk, Islington, London N19 5BW\"\n}, {\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|xxxxxxxx.sUgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",\n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Alder Mews, Islington, London N19 5BW\"\n},\n... \n{\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|0.xxxxxxxx..2QAAAAA.....wAAAAAAAAAAAE4xOSA1QlcA\",\n    uprn: null,\n    lines: null,\n    town: null,\n    postcode: \"N19 5BW\",\n    easting: null,\n    northing: null,\n    country: null,\n    dependentLocality: null,\n    dependentThroughfare: null,\n    administrativeArea: null,\n    localAuthorityUpdateDate: null,\n    royalMailUpdateDate: null,\n    partial: \"Flat C, 43 Bredgar Road, Islington, London N19 5BW\"\n}]\n```\n\n#### Get\n\n```\nwget -O- http://localhost:9190/addresses/APR%xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04%7C0KOAPRCwfeBwAAAAABAwEAAAAD0l.sUgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--.json\n```\n\n```\n{\n    moniker: \"APR|xxxxxxxx-3f1d-4465-a03c-5f8c0ff41a04|0KOAPRCwfeBwAAAAABAwEAAAAD0l.sUgAhGAIAAAAAAAAA..9kAAAAAP....8AAAAAAAAAAABOMTkgNUJXAA--\",\n    uprn: \"10008979790\",\n    lines: [\n        \"Alder Mews\"\n    ],\n    town: \"LONDON\",\n    postcode: \"N19 5BW\",\n    easting: \"529252.00\",\n    northing: \"186643.00\",\n    country: \"United Kingdom\",\n    dependentLocality: \"\",\n    dependentThroughfare: null,\n    administrativeArea: \"Islington\",\n    localAuthorityUpdateDate: \"2013-04-16\",\n    royalMailUpdateDate: \"\",\n    partial: null\n}\n```\n## Testing\n\n### Run Unit Tests\n\n```\nmvn clean install\n```\n\n### Run Integration Tests (and Unit Tests)\n\n**WARNING:  the integration tests make actual API calls to the service.**\n\nIntegration tests are not run by default. Enable them by setting th skipITests parameter to false\n\n```\nWCRS_ADDRESS_USER=usernameHere WCRS_ADDRESS_PASSWORD=passwordHere mvn clean install -DskipITests=false\n```\n\nThe environment variables (WCRS_ADDRESS_USER, and WCRS_ADDRESS_PASSWORD) need to be set to your password on QAS \nProOnDemand, and the ones in configuration will ibe ignored.\n\n## Vagrant\n\nThis project is setup with a vagrant file. The vagrant file has two boxes, `web` and `proxy`. These might be useful for \ndebugging problems you're having with the proxy.\n\nTo start them type:\n\n```\nvagrant up\n```\n\nTo connect to one of them, for example web:\n\n```\nvagrant ssh web\n```\n\nOnce connected, you'll find the directory that this README.md is located in mounted on `/vagrant`\n\n### Web\n\nWeb is the box that you'll want to do your building and running on.\n\nThe IP Address is: `192.xxx.xx.xx`\n\nYou cannot directly connect to the Experian API from this box, as on the live system, you must connect through the proxy box.\n\n### Proxy\n\nProxy just runs squid and you can talk to the Experian API through it.\n\nThe IP Address is: `192.xxxx.xxxx.xxx`\n\nSquid is running on port `xxxx` and accepts connections from `192.xxx.x.x/xx`\n \n## FAQ\n\n### Changing the port from the command line\n\nSet the config variables `dw.server.applicationConnectors[0].port` (for the frontend) and `dw.server.adminConnectors[0].port` for the admin panel to the ports you want them to run on\n\n```\njava -jar -Ddw.server.applicationConnectors[0].port=xxxx -Ddw.server.adminConnectors[0].port=xxxx target/rest-experian-qas-internet-0.1.jar server configuration_development.yml\n```\n \n### Proxy Support\n\nIf for example your proxy does not have a username and password, and is running at 192.168.91.10, on port 3128 you add \nthe following java parameters `-Dhttp.proxyHost=192.xx.xx.x -Dhttp.proxyPort=3128 -Dhttps.proxyHost=192.xx.xx.x -Dhttps.proxyPort=xx` see below for specific examples.\n\n#### Running maven with a proxy\n\n```\nmvn -Dhttp.proxyHost=192.xx.xx.xx -Dhttp.proxyPort=xx -Dhttps.proxyHost=192.xx.xx.xx -Dhttps.proxyPort=xx clean install\n```\n \n#### Running service with a proxy \n \n```\njava -Dhttp.proxyHost=192.xx.xx.xx -Dhttp.proxyPort=xx -Dhttps.proxyHost=192.xx.xx.xx -Dhttps.proxyPort=xx -jar target/rest-experian-qas-internet-0.1.jar server configuration_development.yml\n```\n\n## Common Errors \n\n### Incorrect Username and/or password\n\nIf you get the username or password wrong, you'll see a error similar to this in your stack trace.\n\n```\nERROR [2014-08-21 09:41:14,836] com.yammer.dropwizard.jersey.LoggingExceptionMapper: Error handling a request: xxx\n! javax.xml.ws.soap.SOAPFaultException: Authentication failure (User name: your_username_here). (xxxx-xxxx-xxxx-xxxx-xxxx)\n```\n \n## Related Resources\n\n* The passport office frontend application, which is implemented in Node.JS Express, is the client of the services exposed by this application. \n* DropWizard framework: http://dropwizard.codahale.com\n* Apache Maven: http://maven.apache.org\n\n\n## License\n\nGNU General Public License version 3 (GPL v3)\n\n## Support\n \nUk.support.qas@experian.com\n \nWebsite: http://support.qas.com\n\nTel: 020 7498 7788\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rest-payments","private":false,"url":"https://github.com/UKHomeOffice/rest-payments","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# rest-payments\nJava Dropwizard REST API to interface with ATOS payments with duplicate payment protection\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hodac-style-guide","private":false,"url":"https://github.com/UKHomeOffice/hodac-style-guide","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-kafka","private":false,"url":"https://github.com/UKHomeOffice/docker-kafka","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Kafka on Kubernetes\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/kafka/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/kafka)\n\nBits you need to run Kafka cluster on Kubernetes. It is based on Kafka\nversion 0.9.x.\n\nKafka requires access to a zookeeper cluster. We run zookeeper in Kubernetes\ntoo, take a look here: https://github.com/UKHomeOffice/docker-zookeeper.\n\n\n### Configuration\n* `ZOOKEEPER_CONNECT` - a comma separated list of zookeeper `node:port` pairs.\n  Default: `localhost:2181`.\n* `BROKER_ID` - Kafka broker.id. Default: `unset`. If unset, Kafka will get\n  zookeeper to allocate one.\n* `ADVERTISED_HOSTNAME` - what address to advertise to other brokers and\n  producers/consumers. Default: `unset`. If `unset`, Kafka uses the hostname.\n* `NUM_PARTITIONS` - Number of partitions by default. Default: `1`.\n* `DEFAULT_REPLICATION_FACTOR` - Default replication factor. Default: `unset`.\n\n\n### Deployment\nBy default, if you don't specify any parameters, kafka will start in\na single broker mode.\n\nDeploying onto a Kubernetes cluster is fairly easy. There are example\nkubernetes controller and service files in [kube/](kube/) directory.\n\n\n#### Deploy Services\nThere is no strict ordering how you deploy the resources, let's start with\nservices first:\n\n```bash\n$ kubectl create -f kube/kafka-service.yaml\n$ kubectl create -f kube/kafka-1-service.yaml\n$ kubectl create -f kube/kafka-2-service.yaml\n$ kubectl create -f kube/kafka-3-service.yaml\n```\n\n\n#### Deploy Replication Controllers\n\n```\n$ kubectl create -f kube/kafka-1-controller.yaml\n$ kubectl create -f kube/kafka-2-controller.yaml\n$ kubectl create -f kube/kafka-3-controller.yaml\n```\n\n\n### Known Caveats\n\nBy default there is no data persistence. So be aware that if you delete more\nthan one replication controller or more than one pod, you may end up losing\ndata.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-logger","private":false,"url":"https://github.com/UKHomeOffice/rtp-logger","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# rtp-logger  [![Build Status](https://img.shields.io/travis/UKHomeOffice/rtp-logger.svg)](https://travis-ci.org/UKHomeOffice/rtp-logger)\n\nThin wrapper around [winston](https://www.npmjs.com/package/winston) for use in Registered Traveller Programme node.js applications.\n\n## Usage\n\nTo use the logger simply add **rtp-logger** to your dependencies in the `package.json` and then require it in your main javascript file.\n\nThe default are as follows: -\n- Console transport logging to stdout and stderr\n- Log level = debug\n- Include timestamps on log entries\n\n``` \n  logger.info('message');\n```\n\nTo log objects, simply pass an additional parameter to the logging function. This will be Stringified using the `util.inspect` module\n\n\n``` \n  logger.error('message', {'key': 'value});\n```\n\n### Configuration\n\nTo configure the logger further you can use the `setup()` function, passing an object. Below is an example of the options that can be used: -\n\n``` JavaScript\n{\n    loglevel: 'info',\n    appName: 'MY-APP', // will appear as [MY-APP] in log entries\n    transports: {\n        console: {\n            // any valid winston config options when creating a console transport\n            timestamp: false,\n            debugStdout: false\n        }\n    }\n}\n```\n\n## Run tests\n\nThe unit tests are written in mocha and can be run using npm. \n```\nnpm test\n```\n\nYou can also run the tests using grunt. Before running the unit tests it will perform a run jshint and jscs. From the project root, run the following: -\n\n```\ngrunt dev\n```\n\nIf you would like to watch all javascript files and automatically re-run jshint, jscs and mocha you can use the following: -\n\n```\ngrunt watch\n```\n\n## File transport\n\nFile logging is not currently a requirement as all logs file are created from stdout and stderr and will be for the foreseeable future. However, the code to handle configuration of a file transport was written and is available in the `file-transport` branch. Should this be required at a later date, it could be merged into the master branch and used.\n\nTo configure the logger with a file transport you can use the `setup()` function, passing an object. Below is an example of the options that can be used: -\n\n``` JavaScript\n{\n    logLocation: '/log/test.log'\n    transports: {\n        file: {\n            // any valid winston config options when creating a file transport\n            filename: 'some-log-file.log', // this would override logLocation\n            timestamp: false,\n            maxsize: 128,\n            maxFiles: 1\n        }\n    }\n}\n```\n\nThe existence of `logLocation` or `transports.file` in the config will trigger the addition of a file transport to the logger.\n\nIf only `logLocation` is present then the default config for a file transport will be used, this is as defined here.\n\n``` JavaScript\n{\n    filename: // logLocation or 'app.log'\n    timestamp: true,\n    maxsize: 10240,\n    maxFiles: 3\n}\n```\n\nThe Registered Traveller Programme uses BrowserStack for mobile and desktop testing https://www.browserstack.com/\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/eslint-config-homeoffice","private":false,"url":"https://github.com/UKHomeOffice/eslint-config-homeoffice","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# eslint-config-homeoffice [![Build Status](https://travis-ci.org/UKHomeOffice/eslint-config-homeoffice.svg?branch=master)](https://travis-ci.org/UKHomeOffice/eslint-config-homeoffice)\n\nThis is the `eslint` configuration used on a variety of UKHomeOffice projects, including:\n\n* [brp](https://github.com/UKHomeOffice/brp_app)\n* [hof example form](https://github.com/UKHomeOffice/hof-example-form)\n\nThe version of `eslint` currently supported is `0.23.0`.\n\n# Configurations\nTwo configurations are currently supported:\n\n* **default**\n\t- this is used for all frontend and node code\n* **testing**\n\t- this adds in a few globals required for testing with mocha, and disables a few of the rules to make the tests more readable\n\nThey can be used as following:\n\nDefault:\n\n```yml\nextends:\n- \"homeoffice/config/default\"\n```\n\nTesting:\n\n```yml\nextends:\n- '../.eslintrc'\n- 'homeoffice/config/testing'\n```\n> Note: To inherit from your project settings, you will need to inherit them first *then* override them using the testing configuration, due to the order of overrides\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n","masterBranchProtection":false},{"name":"UKHomeOffice/rtp-hof-spike-form","private":false,"url":"https://github.com/UKHomeOffice/rtp-hof-spike-form","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"[![Build Status](https://travis-ci.org/UKHomeOffice/hof-example-form.svg?branch=master)](https://travis-ci.org/UKHomeOffice/hof-example-form)\n\n# Home Office Forms Example Form\n\nIn order to provide a starting point for people using the [home office forms toolkit](https://github.com/UKHomeOffice/hof) this app aims to give a simple example of how to use the module. We encourage users to clone this repository in order to provide a starting point for their own forms.\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisities\n\nWhat things you need to install the software and how to install them\n- NodeJS\n- npm (version 3 is not yet supported, please use version 2)\n- Redis server running on the default port\n\n### Installing\n\n```bash\n$ cd hof-example-form\n$ npm install\n$ npm run dev\n```\n\nGo to http://localhost:8080/my-awesome-form\n\n## Running the tests\nYou will need the server running to run the cucumber tests against.\n\n```bash\n$ cd acceptance_tests\n$ bundle install\n$ cucumber -r features\n```\n\nYou will need phantomjs installed to run tests. Alternatively you can export IN_BROWSER=true to run the tests in firefox.\n\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags). \n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/rtp-hof-spike-mongo","private":false,"url":"https://github.com/UKHomeOffice/rtp-hof-spike-mongo","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-kibana","private":false,"url":"https://github.com/UKHomeOffice/docker-kibana","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/dropwizard-smart-logging-bundle","private":false,"url":"https://github.com/UKHomeOffice/dropwizard-smart-logging-bundle","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# Dropwizard Smart Logging Bundle\n\n## Why\n\nAPIs are great. Microservices are great. But how do we keep track of a user who uses multiple APIs throughout a session? \nOne approach is to add an additional value to each request i.e. user_id or session_id. This forces every API call to have \nan additional id attached to it (if available) and somewhere in the code we need to assign this to a log message.\n\nWouldn't it be easier to let an API client send identifiable information to the host via a header?\n\nIt would also be nice to be able to configure some extra fields to appear in every log message.\n\n## How\n\nAdd the corresponding configuration to your config file (MyServiceConfiguration in this example) and implement interface\n\n```java\n\n    public class MyServiceConfiguration extends Configuration implements PrependLogConfiguration\n    \n    @JsonProperty\n    private SmartLogging smartLogging;\n```\n\nSpecifiy what header and any extra fields you want to log in your requests by adding this to your configuration:\n\n```YAML\nsmartLogging:\n  useHeader: X_UNIQUE_ID\n  extraFields: {\n    \"environment\": \"TEST\",\n    \"host\": \"localhost\",\n    \"applicationName\" : \"my-cool-service\"\n  }\n```\nAdd your new log format to your chosen appender\n\n```YAML\n    logFormat: \"%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{environment} %X{host} %X{applicationName} %X{X_UNIQUE_ID} %msg %n\"\n```\n\nThis bundle can be added to a dropwizard app using:\n\n```java\n    @Override\n    public void initialize(Bootstrap<MyServiceConfiguration> bootstrap) {\n        bootstrap.addBundle(new PrependLogBundle());\n    }\n```\n\n\n## Security\n\nBe careful of what you log, make sure you validate headers to ensure your logs don't become a potential attack\nvector.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-logger","private":false,"url":"https://github.com/UKHomeOffice/passports-logger","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-logger\nConsistent logging for hmpo apps\n\n## Usage\n\nTop level logging configuration:\n```javascript\nvar hmpoLogger = require('hmpo-logger');\nhmpoLogger.config();\n\nvar app = require('express')();\napp.use(hmpoLogger.middleware());\n```\n\nLogging messages:\n```javascript\nvar logger = require('hmpo-logger').get();\n\nlogger.log('error', 'This is an error');\nlogger.warn('This is a warning');\nlogger.warn('This is an %s warning', 'interpolated');\nlogger.info('This is just info with :meta', {meta: 'metavalue'});\nlogger.info(':method :url took :responseTime ms and was res[content-length] bytes', {req: req, res: res});\n\nlogger.log('info', 'response :responseText', { responseText: logger.trimHtml(htmlBody, 100)});\n```\n\n\n### `get(name)`\n\nGet a named winston logger. The name is prepended to the log entry messages.\n\n```javascript\nrequire('hmpo-logger').get(name);\n```\n\nIf name is ommited it is guessed from the nearest package.json file found in the calling package.\n```javascript\nrequire('hmpo-logger').get();\n```\n\nIf name begins with a colon it is appended to the guessed name.\n```javascript\nrequire('hmpo-logger').get(':subname');\n```\nReturns a `winston` logger.\n\n### `logger.trimHtml(text, maxLength)`\n\nTrim tags out of an HTML string to help with more concise HTML error response logging. Defaults to a `maxLength` of 400.\n\nReturns a string, or passes through `text` if not a string.\n\n```javascript\nrequire('hmpo-logger').get(name);\n```\n\n\n### `config(options)`\n\nInitialise the logger at the top level of the app, specifying the log locations and logging levels of three pre-defined transports: console, app, and error.\n\n```javascript\nvar hmpoLogger = require('hmpo-logger');\nhmpoLogger.config({ // defaults:\n    console: true,\n    connsoleJSON: false,\n    consoleLevel: 'debug',\n    consoleColor: true,\n    app: './app.log',\n    appJSON: true,\n    appLevel: 'info',\n    error: './error.log',\n    errorJSON: true,\n    errorLevel: 'exceptions',\n    meta: {\n        host: 'host',\n        pm: 'env.pm_id',\n        sessionID: 'sessionID',\n        method: 'method',\n        request: 'request'\n    },\n    requestMeta: {\n        clientip: 'clientip',\n        uniqueID: 'req.x-uniq-id',\n        remoteAddress: 'connection.remoteAddress',\n        hostname: 'hostname',\n        port: 'port',\n        response: 'statusCode',\n        responseTime: 'responseTime',\n        httpversion: 'version',\n        bytes: 'res.content-length'\n    },\n    logPublicRequests: false,\n    logHealthcheckRequests: false,\n    format: ':clientip :sessionID :method :request HTTP/:httpVersion :statusCode :res[content-length] - :responseTime ms'\n});\n```\n\nReturns `hmpoLogger`.\n\n\n### `middleware()`\n\nLog incomming requests from an `express` app.\n\n```javascript\nvar hmpoLogger = require('hmpo-logger');\n\nvar app = require('express')();\napp.use(hmpoLogger.middleware());\n```\n\nReturns express compatible middleware\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-email-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-email-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"RTP Email Library - Scala library to work with Emails\n==============================================================\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```bash\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```bash\nbrew install typesafe-activator\n```\n\nTo compile:\n```bash\nsbt compile\n```\n\nor\n```bash\nactivator compile\n```\n\nTo run the specs:\n```bash\nsbt test\n```\n\nThe following packages up this library - Note that \"assembly\" will first compile and test:\n```bash\nsbt assembly\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vault-sidekick-pkcs12","private":false,"url":"https://github.com/UKHomeOffice/vault-sidekick-pkcs12","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Vault sidekick pkcs12\n\nSidekick container to run it in Kubernetes as part of a `Pod`. It receives some parameters that will allow to connect to a Vault instance, pull a certificate,\nformat it as `pkcs12` and add it to a java keystore.\n\n\n## Parameters\n\n* VAULT_TOKEN = token the can be used to access vault\n* VAULT_HOST = the ELB / host of vault\n\n* SERVICE =  the name of the service so the cert will be for SERVICE.DOMAIN\n* DOMAIN = the subdomain this is to be under (if blank try and find it)\n\nto run it:\n\ndocker run -it  \\\n     -e VAULT_TOKEN=$VAULT_TOKEN \\\n     -e VAULT_HOST=$VAULT_HOST \\\n     -e SERVICE=$SERVICE \\\n     -e DOMAIN=$DOMAIN \\\n            quay.io/ukhomeofficedigital/vault-sidekick-pkcs\n\n\nKeystore location is located at `/etc/ssl/certs/java/cacerts`\n\n\n\ndocker run -it  \\\n     -e VAULT_TOKEN=$VAULT_TOKEN \\\n     -e VAULT_HOST=$VAULT_HOST \\\n     -e SERVICE=www \\\n            quay.io/ukhomeofficedigital/vault-sidekick-pkcs\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/vaultjks","private":false,"url":"https://github.com/UKHomeOffice/vaultjks","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Vault JKS\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/vaultjks/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/vaultjks)\n\nA simple script to fetch a CA and request certificates from vault and stick\nthem into JAVA keystore files.\n\n### Requirements\nA working vault server and PKI backend mounted with long enough TTLs.\n\n### Configuration\n- `VAULT_ADDR` - Vault address. Required.\n- `VAULT_AUTH_FILE` - If specified, this file will be sourced. This file can\n  contain VAULT_TOKEN or VAULT_USER and VAULT_PASSWORD.\n- `VAULT_TOKEN` - If specified, the token will be used for auth.\n- `VAULT_USER` - If `VAULT_TOKEN` is unset, then this needs to be set.\n- `VAULT_PASSWORD` - Required if `VAULT_TOKEN` is not being used.\n- `VAULT_PKI_PATH` - Vault pki backend mount path. Default: `shared/pki`.\n- `VAULT_ROLE_NAME` - Vault pki backend role for requesting a new cert. Default: `cert-request`.\n- `CERT_COMMON_NAME` - Certificate request CN. Default: `localhost`.\n- `IP_SAN` - IP address to add to ip_sans. Default: `$(hostname -i)`.\n- `ALT_NAMES` - Requested Subject Alternative Names, in a comma-delimited list.\n  These can be host names or email addresses; they will be parsed into their\n  respective fields.\n- `IMPORT_SYSTEM_TRUSTSTORE`: If `true`, import `/etc/pki/java/cacerts` into a `TRUSTSTORE_FILE`. Default: `true`.\n- `TRUSTSTORE_FILE` - Where to write truststore file. Default: `truststore.jks`.\n- `KEYSTORE_FILE` - Where to write keystore file. Default: `keystore.jks`.\n- `SLEEP_FOREVER` - If set to `true`, `run.sh` will sleep forever after it\n  successfully created keystores. This can be useful if vaultjks is run as part\n  of a kubernetes pod.\n\n\n### Running\n```bash\n$ docker run -ti \\\n  -e VAULT_ADDR=https://vault:8200 \\\n  -e VAULT_TOKEN=44eecf54-5b01-4bd5-a8c4-f4032b9e7e10 \\\n  -v /keystore:/data \\\n  quay.io/ukhomeofficedigital/vaultjks:v0.0.4\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-amazon-sqs-lib","private":false,"url":"https://github.com/UKHomeOffice/rtp-amazon-sqs-lib","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"RTP Amazon SQS and ElasticMQ Library\n====================================\nScala library to interact with Amazon SQS and where ElasticMQ can be used for embedding testing of the SQS messaging system.\n\nApplication built with the following (main) technologies:\n\n- Scala\n\n- SBT\n\n- Akka\n\n- Amazon SQS / ElasticMQ\n\nApplication\n-----------\nThe application is configured as per a typical Scala application, where the default configuration file is \"application.conf\" (or reference.conf).\nThis default file can be overridden with other \"conf\" files and then given to the application upon boot with the following example Java option:\n```bash\n-Dconfig.file=test-classes/application.test.conf\n```\n\nIndividual configuration properties can be overridden again by Java options e.g. to override which Mongodb to connect:\n```bash\n-Dmongo.db=some-other-mongo\n```\n\nwhere this overrides the default in application.conf.\n\nBuild and Deploy\n----------------\nThe project is built with SBT. On a Mac (sorry everyone else) do:\n```bash\nbrew install sbt\n```\n\nIt is also a good idea to install Typesafe Activator (which sits on top of SBT) for when you need to create new projects - it also has some SBT extras, so running an application with Activator instead of SBT can be useful. On Mac do:\n```bash\nbrew install typesafe-activator\n```\n\nTo compile:\n```bash\nsbt compile\n```\n\nor\n```bash\nactivator compile\n```\n\nTo run the specs:\n```bash\nsbt test\n```\n\nTo actually run the application, you can simply:\n```bash\nsbt run\n```\n\nor first \"assemble\" it:\n```bash\nsbt assembly\n```\n\nThis packages up an executable JAR - Note that \"assembly\" will first compile and test.\n\nThen just run as any executable JAR, with any extra Java options for overriding configurations.\n\nFor example, to use a config file (other than the default application.conf) which is located on the file system (in this case in the boot directory)\n```bash\njava -Dconfig.file=test-classes/my-application.conf -jar <jar name>.jar\n```\n\nNote that the log configuration file could also be included e.g.\n```bash\n-Dlogback.configurationFile=path/to/my-logback.xml\n```\n\nSo a more indepth startup with sbt itself could be:\n```bash\nsbt test:run -Dconfig.file=target/scala-2.11/test-classes/application.test.conf -Dlogback.configurationFile=target/scala-2.11/test-classes/logback.test.xml\n```\n\nNote the use of test:run. Usually we would only use \"run\", but as this is a library, there is no default \"main\" class, but we do have an example test \"main\" class.\n\nAnd another example:\n\nrunning from directory of the executable JAR using a config that is within said JAR:\n```bash\njava -Dconfig.resource=application.uat.conf -jar <jar name>.jar\n```\n\nSBT - Revolver\n--------------\nsbt-revolver is a plugin for SBT enabling a super-fast development turnaround for your Scala applications:\n\nSee https://github.com/spray/sbt-revolver\n\nFor development, you can use ~re-start to go into \"triggered restart\" mode.\nYour application starts up and SBT watches for changes in your source (or resource) files.\nIf a change is detected SBT recompiles the required classes and sbt-revolver automatically restarts your application. \nWhen you press &lt;ENTER&gt; SBT leaves \"triggered restart\" and returns to the normal prompt keeping your application running.\n\nGatling - Performance (Integration) Testing\n-------------------------------------------\nPerformance tests are under src/it, and test reports are written to the \"target\" directory.\n\nTo execute Gatling performance integration tests from withing SBT:\n```bash\ngatling-it:test\n```\n\nExample Usage\n-------------\nExample of booting an application to publish/subscribe to an Amazon SQS instance.\n\n1) Start up an instance of ElasticMQ (to run an instance of Amazon SQS locally) - From the root of this project:\n```bash\njava -jar elasticmq-server-0.10.0.jar\n```\nwhich starts up a working server that binds to localhost:9324\n\nor with a custom configuration that could create queues:\n```bash\njava -Dconfig.file=src/test/resources/application.test.conf -jar elasticmq-server-0.9.3.jar\n```\n   \n2) Boot this application:\n```bash\nsbt test:run\n```\n   \nwhere the example application can be found under the \"test\" directory and is also show here:\n```scala\nobject ExampleBoot extends App {\n  val system = ActorSystem(\"amazon-sqs-actor-system\")\n\n  implicit val sqsClient = new SQSClient(new URL(\"http://localhost:9324\"), new BasicAWSCredentials(\"x\", \"x\"))\n\n  val queue = new Queue(\"test-queue\")\n\n  system actorOf Props {\n    new SubscriberActor(new Subscriber(queue)) with ExampleSubscription\n  }\n\n  new Publisher(queue) publish compact(render(\"input\" -> \"blah\"))\n}\n\ntrait ExampleSubscription extends JsonSubscription with Exit {\n  this: SubscriberActor =>\n\n  def receive: Receive = {\n    case m: Message => exitAfter {\n      val result = s\"Well Done! Processed given message $m\"\n      println(result)\n      result\n    }\n  }\n}\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-java8-mvn","private":false,"url":"https://github.com/UKHomeOffice/docker-java8-mvn","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# docker-java7-mvn\nbase docker image with java7 and maven\n\n## Usage\n\nThis docker container is intended for use in Java projects.\n\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-java7-mvn/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n## Build With\n\n* java-1.7.0-openjdk-devel\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/java-1.7.0-openjdk-deve/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/java-1.7.0-openjdk-deve/blob/master/LICENSE.md) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hof-middleware","private":false,"url":"https://github.com/UKHomeOffice/hof-middleware","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# hof-middleware\nA collection of commonly used HOF middleware, exports `cookies`, `notFound`, and `errors` on `middleware`\n\n## Arranging the middleware in your app\n\nCookies middleware should be placed before any other routes, this guarantees that any data gathered in the form will be saved to the session.\nThe Not Found middleware should be placed after all routes and before the Error handler middleware. This arrangement ensures that if an error is thrown it will be caught.\n\n## Cookies\n\n### Usage\n```js\napp.use(require('hof-middleware').cookies({\n  'cookie-name': 'my-application-cookie',\n  'param-name': 'my-query-param'\n}));\n```\n\nThis middleware must be declared before your other routes.\n\n### Options\nThe `cookie-name` can be the same as your session cookie. (The\nmiddleware will not overwrite it.) Defaults to `hof-cookie-check`.\n\nThe `param-name` should be chosen so that it does not clash with names\nyou are using elsewhere. In almost all cases the default value of\n`hof-cookie-check` will suffice.\n\nThe error raised when cookies are not supported by the client can then\nbe handled in you error handler by identifying it using its `code`\nproperty which will be set to `NO_COOKIES`.\n\n## Not found (404)\n\nExpects there to be a view called 404 in your configured `/views` directory\n\n### Usage\n```js\napp.use(require('hof-middleware').notFound({\n  logger: require('/logger'),\n  translate: require('hof').i18n({path: path_to_translations/__lng__/__ns__.json}).translate\n}));\n```\n\nThis middleware should be declared *after* your other routes but *before* your errorhandler.\n\n### Options\n`logger` can be any object with a warn method.\n\n`translate` can be the HOF i18n translate function\n\n## Errors\n\n### Usage\n```js\napp.use(require('hof-middleware').errors({\n  logger: require('/logger'),\n  translate: require('hof').i18n({path: path_to_translations/__lng__/__ns__.json}).translate,\n  debug: true\n}));\n```\n\nThis middleware must be declared *after* your other routes.\n\n### Options\n`logger` can be any object with an error method.\n\n`translate` can be the HOF i18n translate function\n\n`debug` set to true will present the stack trace in the form and return the err as the content of the template.\n\n__Note__ If `debug === true` translations will not be served, but the error handler default messages\n=======\n## Deep translate\n\ndeepTranslate middleware supports nested conditional translations in order to show different content in different scenarios. The middleware adds a `translate` function to `req` which is used in various points throughout the architecture.  This middleware must be applied before any other middleware which rely on the `req.translate` function. Also when initializing the form wizard, or template mixins, if a `translate` function is provided, this will be used rather than the deepTranslate middleware.\n\n### Usage\n\n```js\nconst i18nFuture = require('hof').i18n;\nconst i18n = i18nFuture({\n  path: path.resolve(__dirname, './path/to/translations')\n})\napp.use(require('hof-middleware').deepTranslate({\n  translate: i18n.translate.bind(i18n)\n}));\n```\n\nlocales\n```json\n\"fields\": {\n    \"field-name\": {\n        \"label\": {\n            \"dependent-field\": {\n                \"value-1\": {\n                    \"dependent-field-2\": {\n                        \"value-1\": \"Label 1\",\n                        \"value-2\": \"Label 2\"\n                    }\n                },\n                \"value-2\": \"Label 3\"\n            },\n            \"default\": \"Fallback label\"\n        }\n    }\n}\n```\n\nUsing the translation key `fields.field-name.label` will return different values in different situations depending on the values of named fields. In the above example the following are true:\n\n* If both `dependent-field` and `dependent-field-2` have the value `\"value-1\"`, the label returned will be `\"Label 1\"`.\n* If the value of `dependent-field` is `\"value-1\"` and the value of `dependent-field-2` is `\"value-2\"`, the label returned will be `\"Label 2\"`.\n* If the value of `dependent-field` is `\"value-2\"` the label returned will be `\"Label 3\"` regardless of the value of `dependent-field-2`\n* The default label `\"Fallback label\"` will be used if value of `dependent-field` is neither of the given options, or it is `undefined`. It will also be used if the value of `dependent-field` is `\"value-1\"` and the value of `dependent-field-2` is neither of the given options or it is undefined.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-elasticsearch-curator","private":false,"url":"https://github.com/UKHomeOffice/docker-elasticsearch-curator","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# ElasticSearch Curator docker image\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-postgres","private":false,"url":"https://github.com/UKHomeOffice/docker-postgres","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# docker-postgres\nbase docker image with postgres\n\n## Usage\n\nThis docker container is intended to be built upon in projects requiring Postgres.\n\n### Configuration\nIn your Dockerfile you can overwrite the default configuration by copying a file to /conf/postgres.conf\n\nFor example:\nCOPY postgresql.conf /conf/postgresql.con\n\nThe entrypoint will automatically copy this to the postgres configuration directory after the db has been initialized\n\n### Useful File Locations\n\n* `/docker-entrypoint-initdb.d/*.sql[.gz]` - Any SQL file in that\n  location will be loaded into the database on container init.\n* `/healthcheck.sh` - You can execute this file to check the health of\n  the postgres installation. It performs `SELECT 1+1` on the database.\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](LICENSE) file for details\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/docker-nodejs-base","private":false,"url":"https://github.com/UKHomeOffice/docker-nodejs-base","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# nodejs-base\nBase image for nodejs.  This only takes care of installing the LTS version of node.  It's recommended you should instead build from the downstream nodejs image here:\n\nhttps://quay.io/repository/ukhomeofficedigital/nodejs\nhttps://github.com/UKHomeOffice/docker-nodejs \n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/git-workflow","private":false,"url":"https://github.com/UKHomeOffice/git-workflow","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# Git Workflow\n\nA set of guidelines and principles to help define your Git workflow\n\n\n## The quick example\n\n```\n$ git clone git@github.com:UKHomeOffice/<repo_name>.git\n\n$ cd <repo_name>\n\n$ git checkout -b <branch_type>/<branch_name> (E.g. feature/add-feature1 or feature/ABC-1)\n```\n\n#### ...Develop the feature/fix the bug...\n\nAdd your changes to be committed. The `-p` (`--patch`) gives you the opportunity to accept (`y`) or decline (`n`).\n```\n$ git add -p\n```\n\nCommit staged changes. The `-v` (`--verbose`) will open an editor showing an overview of your changes, so you can be super-descriptive when writing your [commit message](https://github.com/alphagov/styleguides/blob/master/git.md).\n```\n$ git commit -v\n```\n\nFetch and rebase against the remote master branch. `-p` (`--prune`) removes remote-tracking references that no longer exist on the remote.\n```\n$ git fetch -p\n\n$ git rebase origin/master\n```\n\nPush your committed changes to a remote branch\n```\n$ git push origin <branch_type>/<branch_name>\n```\n\n- Visit your Github repo and select \"New pull request\", selecting which two branches you intend to merge. This will usually be your feature branch and master. Master will be preselected as the branch to merge into.\n\n- [Follow these guidelines](https://github.com/alphagov/styleguides/blob/master/git.md) to help describe the nature of your pull request, particularly the use case and the objectives it attempts to achieve.\n\n- Assign the pull request to a *qualified* member of your development team for a technical review.\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/GRO-Extranet-prototype","private":false,"url":"https://github.com/UKHomeOffice/GRO-Extranet-prototype","license":null,"readme":"# GRO-Extranet-prototype\nA simple prototype for GRO-extranet's CMS.\n\n## Run prototype\n* You need node (atleast 0.12.2) installed on your machine\n* Mongodb installed\n* Run the command `npm install`\n* Then run the command `node keystone.js`\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/request-oauth2","private":false,"url":"https://github.com/UKHomeOffice/request-oauth2","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/removals_e2etests","private":false,"url":"https://github.com/UKHomeOffice/removals_e2etests","license":null,"readme":"# End to End Feature & Performance Tests\n\n[![Build](https://travis-ci.org/UKHomeOffice/removals_e2etests.png)](https://travis-ci.org/UKHomeOffice/removals_e2etests)\n\nThere are two ways to run the tests, if you want to just get started quickly then use docker, if you want to integrate this into your IDE for example you might prefer to run the code on your machine.\n\n## Running the code on your machine:\n```shell\n# Install nvm\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\nsource ~/.nvm/nvm.sh\n\n# Install & Use Node 4\nnvm install 4\nnvm use 4\ncd removals_e2etests/nightwatch\nnpm install\n```\n\n## Run tests against an environment\n```shell\n# Start the [FE Application] (https://github.com/UKHomeOffice/removals_wallboard)\ncd removals_wallboard\ngulp dev\n\n# Start the [API Application] (https://github.com/UKHomeOffice/removals_integration)\ncd removals_integration\nPORT=8080 npm start\n\n# Run the e2e tests locally\ncd removals_e2etests/nightwatch\n./test.sh\n\n# Setup the keycloak credentials file & Run the e2e tests against a remote environment\ncd removals_e2etests\necho \"KEYCLOAK_USER=myusername\nKEYCLOAK_PASS=mypassword\" > mycredentials\n\ncd removals_e2etests/nightwatch\n./test.sh [docker|dev|int|uat]\n```\n\n##Run e2e tests against a local environment with docker-compose\n```shell\n# Build the [API Application] (https://github.com/UKHomeOffice/removals_integration)\ncd removals_integration\ndocker build -t removals_integration .\n\n# Build the [FE Application] (https://github.com/UKHomeOffice/removals_wallboard)\ncd removals_wallboard\ndocker build -t removals_wallboard .\n\n# Run tests\n./runtests.sh --env docker\n```\n\n## Run e2e tests against a remote environment with docker-compose\n```shell\n# Setup the keycloak credentials file\ncd removals_e2etests\necho \"KEYCLOAK_USER=myusername\nKEYCLOAK_PASS=mypassword\" > mycredentials\n\n# Run the e2e tests\n./runtests.sh --env [dev|int|uat]\n```\n\n## Run e2e performance tests against a remote environment with docker-compose\n```shell\n# Setup the keycloak credentials file\ncd removals_e2etests\necho \"KEYCLOAK_USER=myusername\nKEYCLOAK_PASS=mypassword\" > mycredentials\n\n# Run performance tests\n./runtests.sh --env [docker|dev|int|uat] --tag performance\n```\n\n## Run e2e tests against an environment with IntelliJ\n### Add a new Node.js Configuration setting for e2e testing\n![Run e2e tests against an environment with IntelliJ](images/intellij_settings_to_run_e2etests.png)\n### Add a new Node.js Configuration setting for performance testing\n![Run e2e performance tests against an environment with IntelliJ](./images/intellij_settings_to_run_e2e_performance_tests.png)\n\n## IBM Environments\n| env | backend | frontend |\n| --- | ------- | -------- |\n| default | http://localhost:8080 | http://localhost:8000 |\n| docker | http://backend | http://frontend |\n| dev | https://api-ircbd-dev.notprod.homeoffice.gov.uk | https://wallboard-ircbd-dev.notprod.homeoffice.gov.uk |\n| int | https://api-ircbd-int.notprod.homeoffice.gov.uk | https://wallboard-ircbd-int.notprod.homeoffice.gov.uk |\n| uat | https://api-ircbd-uat.notprod.homeoffice.gov.uk | https://wallboard-ircbd-uat.notprod.homeoffice.gov.uk |\n\n# CI branch testing\nTravis will try and fetch an image matching the same branch name of the `removals_integration` and `removals_wallboard` and test against that\n\n# [Architecture](http://static.codingthearchitecture.com/c4.pdf)\n### System context diagram\n![](https://www.lucidchart.com/publicSegments/view/45d8442c-ddf5-4a3c-861c-75d533ce4062/image.png)\n### Container/Component diagram\n![](https://www.lucidchart.com/publicSegments/view/f2fc4afe-a8cd-4f7e-8408-e583f5d5a235/image.png)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-api-docs","private":false,"url":"https://github.com/UKHomeOffice/lev-api-docs","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"Life Event Verification (LEV) API Guide\n=======================================\n:toc:\n:numbered:\n\n[role=hideable]\nNOTE: This documentation is limited by GitHub's version of ASCII Docs, the full\nversion may be viewed in the docs repo: https://ukhomeoffice.github.io/lev-api-docs\n\n[IMPORTANT,role=unhideable]\n====\nThe contents of this repo are automatically generated; to make changes\nfollow these steps:\n\n. `git clone https://gitlab.digital.homeoffice.gov.uk/lev/lev-api-scala`\n. edit the `lev-api-scala/docs/README.adoc` file\n. `commit` and `push` your changes (to a new branch)\n. create a *merge request* detailing the changes\n. upon successful approval of the merge request the changes will be automatically added\nto the `lev-api-docs` repo\n====\n\n== Mock API\nIt is possible to run a mock version of the API as follows:\n\n=== Running a mock API with docker\n[role=hideable]\nNOTE: The paths in this section refer to the root of the docs project:\nhttps://github.com/UKHomeOffice/lev-api-docs\n\nThe easiest way to run the mock API is with Docker\n```\n./mock/run_mock_api_docker.sh\n```\n\n=== Running a mock API without docker\nIt is also possible to run it without docker if you have the *wiremock* jar file:\n```\ncd mock\njava -jar wiremock.jar --port=8080\n```\n\n== Authenticating with the API\nTo use the API you will need to provide 2 forms of authentication:\n\n. A client certificate\n. An auth token, which must be obtained by hitting the `/oauth/login` endpoint\n\n[IMPORTANT]\n====\n*The client certificate must be included in every request to the API, but is NOT shown\nin this documentation for simplicity.*\n\nAdding a client certificate to a `curl` request can easily be achieved by adding the\nfollowing arguments:\n\n[source,bash]\n----\ncurl --cert-type pem --key client.key --cert client.crt ...\n----\n====\n\nNOTE: The client certificate is not needed when sending requests to the _mock API_.\n\nThe rest of this section contains examples which have been provided to help\ntroubleshoot issues with authentication.\n\n=== A successful request with valid credentials\n+++ <details><summary> +++\n*Example `curl` request* with dummy credentials\n+++ </summary><div> +++\ninclude::snippets/auth/valid-auth/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with dummy credentials\n+++ </summary><div> +++\ninclude::snippets/auth/valid-auth/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* containing the *access token*\n+++ </summary><div> +++\ninclude::snippets/auth/valid-auth/http-response.adoc[]\n+++ </div></details> +++\n\n=== Authentication problems\nGenerally authentication problems are reported as `401 Unauthorized` errors.\n\n==== A request with invalid credentials\n+++ <details><summary> +++\n*Example `curl` request* with invalid credentials\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-credentials/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with invalid credentials\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-credentials/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-credentials/http-response.adoc[]\n+++ </div></details> +++\n\n==== An unauthorised request\n+++ <details><summary> +++\n*Example `curl` request* without the required `Authorization` header\n+++ </summary><div> +++\ninclude::snippets/auth/unauthorized/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the required `Authorization` header\n+++ </summary><div> +++\ninclude::snippets/auth/unauthorized/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/auth/unauthorized/http-response.adoc[]\n+++ </div></details> +++\n\n==== A request with missing credentials\n+++ <details><summary> +++\n*Example `curl` request* without the required `password` parameter\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-post/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the required `password` parameter\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-post/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/auth/invalid-post/http-response.adoc[]\n+++ </div></details> +++\n\n==== A request with no client certificate\nWhilst none of the examples here contain the required client certificate, this example\nhas been explicitly included to show how the resulting `403 Forbidden` error would\nlook.\n+++ <details><summary> +++\n*Example `curl` request* without the required client certificate\n+++ </summary><div> +++\ninclude::snippets/auth/no-client-cert/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the required client certificate\n+++ </summary><div> +++\ninclude::snippets/auth/no-client-cert/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/auth/no-client-cert/http-response.adoc[]\n+++ </div></details> +++\n\n== Requesting birth record data\nAll successful requests to the API will result in a `200 OK` HTTP status code and are\ndescribed in this section.\n\n=== Requesting a specific birth record using a System Number\nThe best way to get birth data is by providing the relevant System Number, a nine\ndigit unique identifier for the birth record.\n\n+++ <details><summary> +++\n*Example `curl` request* specifying a *System Number*\n+++ </summary><div> +++\ninclude::snippets/system-number/matching-record-999999901/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* specifying a *System Number*\n+++ </summary><div> +++\ninclude::snippets/system-number/matching-record-999999901/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* is a *JSON object* containing the birth record data\n+++ </summary><div> +++\ninclude::snippets/system-number/matching-record-999999901/http-response.adoc[]\n+++ </div></details> +++\n\n=== Searching for a birth record\nWhen the System Number of the birth record is not known, a search of the records can\nbe made by supplying the following three parameters in the URL query string:\n\n- `forenames` : the first name is mandatory, and can be accompanied by any middle\nnames (all separated by spaces)\n- `lastname` : the last name is mandatory\n- `dateofbirth` : the date of birth is also mandatory\n\n+++ <details><summary> +++\n*Example `curl` request* with search parameters\n+++ </summary><div> +++\ninclude::snippets/search/multiple-matching-record/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with search parameters\n+++ </summary><div> +++\ninclude::snippets/search/multiple-matching-record/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* is a *JSON array* containing three matching birth records\n+++ </summary><div> +++\ninclude::snippets/search/multiple-matching-record/http-response.adoc[]\n+++ </div></details> +++\n\nTIP: The API will only return at most *25* matching records. In the unlikely case\nwhere there might be more than 25 people with the same first name, last name, and\ndate of birth; you will have to add middle names to the query to make the search more\nexacting.\n\n=== When no matching records are found\nIf no records matching the search terms can be found, the API will return an empty\narray.\n\n+++ <details><summary> +++\n*Example `curl` request*\n+++ </summary><div> +++\ninclude::snippets/search/no-matches/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request*\n+++ </summary><div> +++\ninclude::snippets/search/no-matches/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* is an *empty JSON array*\n+++ </summary><div> +++\ninclude::snippets/search/no-matches/http-response.adoc[]\n+++ </div></details> +++\n\n== Common errors and responses\n\n=== Non-existent route\nMaking a request to an invalid end point will result in the standard `404 Not Found`\nerror.\n\n==== Requesting an endpoint that doesn't exist\n+++ <details><summary> +++\n*Example `curl` request* to an invalid endpoint\n+++ </summary><div> +++\ninclude::snippets/invalid-endpoint/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* to an invalid endpoint\n+++ </summary><div> +++\ninclude::snippets/invalid-endpoint/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/invalid-endpoint/http-response.adoc[]\n+++ </div></details> +++\n\n==== Specifying a System Number that doesn't exist\n+++ <details><summary> +++\n*Example `curl` request* with a non-existing System Number\n+++ </summary><div> +++\ninclude::snippets/system-number/no-record/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with a non-existing System Number\n+++ </summary><div> +++\ninclude::snippets/system-number/no-record/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/system-number/no-record/http-response.adoc[]\n+++ </div></details> +++\n\n=== Missing search parameters\nMissing search parameters will result in a standard `400 Bad Request` error.\n\n==== Missing forenames parameter\n+++ <details><summary> +++\n*Example `curl` request* without the `forenames` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-forenames/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the `forenames` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-forenames/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/no-forenames/http-response.adoc[]\n+++ </div></details> +++\n\n==== Missing last name parameter\n+++ <details><summary> +++\n*Example `curl` request* without the `lastname` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-lastname/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the `lastname` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-lastname/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/no-lastname/http-response.adoc[]\n+++ </div></details> +++\n\n==== Missing date of birth parameter\n+++ <details><summary> +++\n*Example `curl` request* without the required `dateofbirth` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-dob/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* without the required `dateofbirth` parameter\n+++ </summary><div> +++\ninclude::snippets/search/no-dob/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/no-dob/http-response.adoc[]\n+++ </div></details> +++\n\n=== Other request errors\n\n==== Invalid date of birth provided\n+++ <details><summary> +++\n*Example `curl` request* with an incorrect `dateofbirth` parameter\n+++ </summary><div> +++\ninclude::snippets/search/invalid-dob/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with an incorrect `dateofbirth` parameter\n+++ </summary><div> +++\ninclude::snippets/search/invalid-dob/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/invalid-dob/http-response.adoc[]\n+++ </div></details> +++\n\nNOTE: Currently the response status is `500 Internal Server Error`; this is not the\nintention and will be fixed in a future release to show the proper `400 Bad Request`\ninstead.\n\n==== Incorrectly providing forenames\nThe easiest way to provide forenames is using the `forenames` parameter, however\nforenames may alternatively be provided using the numbered version: `forename1`,\n`forename2`, `forename3`, and `forenames4`. Providing a mix of the forename parameters\nwill result in a standard `400 Bad Request` error.\n+++ <details><summary> +++\n*Example `curl` request* with both `forenames` and `forename1` parameters\n+++ </summary><div> +++\ninclude::snippets/search/forenames-and-forename1/curl-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example `HTTP` request* with both `forenames` and `forename1` parameters\n+++ </summary><div> +++\ninclude::snippets/search/forenames-and-forename1/http-request.adoc[]\n+++ </div></details> +++\n\n+++ <details><summary> +++\n*Example response* detailing the error\n+++ </summary><div> +++\ninclude::snippets/search/forenames-and-forename1/http-response.adoc[]\n+++ </div></details> +++\n\nNOTE: The use of `forename1`, `forename2`, `forename3`, and `forename4` is strongly\ndiscouraged and should be considered deprecated in favour of the `forenames` parameter.\n\n++++\n<script>\n    if ((location.host||location.hostname) === 'ukhomeoffice.github.io') {\n        Array.prototype.forEach.call(\n            document.querySelectorAll('.hideable'),\n            l => l.style.display='none'\n        );\n    } else {\n        Array.prototype.forEach.call(\n            document.querySelectorAll('.unhideable'),\n            l => l.style.display='none'\n        );\n    }\n</script>\n<style>\n    summary:after {\n        content: \"[+]\";\n        right: 0px;\n    }\n    details[open] summary:after {\n        content: \"[-]\";\n    }\n</style>\n++++\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n\n","masterBranchProtection":false},{"name":"UKHomeOffice/smilodon","private":false,"url":"https://github.com/UKHomeOffice/smilodon","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"## smilodon\nSmilodon manages attachment of EBS and ENI pairs in AWS EC2 auto scaling groups.\n\nThink about zookeeper, etcd or similar datastores, where a data volume and IP\naddress have to always go together. Achieving that can be tricky, especially\nif you want to take advantage of EC2 auto scaling groups.\n\n\n### Getting Started\n* First you need to create a number of EBS and ENI resources and tag them with\n  `NodeID`. `NodeID` tag value can be anything as long as you have a matching\n  EBS and ENI pair with the same `NodeID` tag value.\n\n* Secondly, create an autoscaling group with a number of instances with\n  smilodon provisioned. You can have more instances in auto scaling group than\n  you have EBS+ENI pairs.\n\nWhen smilodon starts it will try to find a matching EBS+ENI pair and attach\nthem. EBS gets attached first and ENI second. You can tell smilodon to create a\nfile system and mount it for convenience.\n\nSmilodon does not know how to start a service, but that work is in progress\nright now.\n\nIf your distro uses systemd, then you can easily tell your service unit to\nwatch for when a specific mount point is ready and start the service unit.\n\n\n### Required AWS Permissions\nYou have two options here.\n- Create an IAM user and provide smilodon with AWS API credentials via\n  environment variables.\n\n- Define an IAM instance role and reference that in the LaunchConfiguration.\n\nI recommend the latter, but regardless which option you pick, you need to allow\nthe following IAM permissions (below could be a lot more granular and specific):\n\n```yaml\nResource: \"*\"\nAction:\n  - ec2:DescribeInstances\n  - ec2:DescribeTags\n  - ec2:DescribeNetworkInterfaces\n  - ec2:DescribeVolumes\n  - ec2:AttachVolume\n  - ec2:AttachNetworkInterface\n  - ec2:DetachNetworkInterface\n  - ec2:ModifyNetworkInterfaceAttribute\n```\n\n\n### Configuration\nConfiguration is done using command line flags - `smilodon --help`.\n\n\n### Filtering AWS Resources\nIt is very likely that you have many EBS volumes and ENI devices in your AWS\naccount.\n\nWhen you create your EBS+ENI resources, it makes sense to tag them with a\nservice name or something sensible, so that smilodon attaches correct resources.\n\nOnly `NodeID` tag is required and the rest can be arbitrary. For example, you\ncould tag your resources with the following tags:\n\n```\nNodeID=[0-5]\nEnv=development\nService=etcd\nProject=<any value>\n```\n\nTo tell smilodon to only look for resources with the above tags, do this:\n```\nsmilodon --filters='tag:Env=development,tag:Service=etcd,tag-key=Project'\n```\n\nAs you can see above, last filter matches on any value of tag `Project`. You\ncan also filter on a bunch of other AWS specific filters.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-formatted-id","private":false,"url":"https://github.com/UKHomeOffice/rtp-formatted-id","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# RTP formatted ID\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/rtp-formatted-id.svg?branch=master)](https://travis-ci.org/UKHomeOffice/rtp-formatted-id)\n[![npm version](https://badge.fury.io/js/rtp-formatted-id.svg)](https://www.npmjs.com/package/rtp-formatted-id)\n\nThis module creates non-sequential ids to use in your applications. The aim is to avoid duplicates: the longest the id\nyou creates, the most unlikely the creation of duplicates is.\n\n## Usage\n\nTo use straight off with the default format, you can simply do.\n\n``` JavaScript\nvar FormattedId = require('rtp-formatted-id');\nvar formattedId = new FormattedId();\nformattedId.generate();  // outputs something like EF-435670-LU\n```\n\n##### Advanced\n\nIf you set the format to something that uses the `mapYear` and / or `mapProduct` initialisers (Y or P respectively) then\nyou must supply the options to the `generate` function. An example is below: -\n \n``` javascript\nvar FormattedId = require('rtp-formatted-id');\nvar formattedId = new FormattedId({\n  format: 'Y-P-NN-LL',\n  products: {\n      productName: {\n          applicationTypeName: 'A',\n          otherApplicationTypeName: 'B'\n      },\n      otherProductName: {\n          applicationTypeName: 'C'\n      }\n  }\n});\nformattedId.generate({\n    // pass 2016 as argument to the method identified by the letter Y, in this case mapYear\n    Y : 2016,\n    // pass object as argument to the method identified by the letter P, in this case mapProduct \n    P : {\n        product: 'productName', // matches a product set in the FormattedId config \n        applicationType: 'applicationTypeName' // matches an applicationType set in the FormattedId config\n    }\n});  // outputs something like A-A-72-DH \n```\n\nNote, config can be passed to the constructor on initialisation or you can call the `setConfig` method.\n\nSome more examples of possible formats are as follows: -\n\n```\nformat: 'LLLNNNLLL  // outputs something like PLW682LMV\n```\n\nThis will create an id composed by 3 letters, 3 numbers, 3 letters.\nYou can use separators in the format, that will be conserved.\n\n```\nformat: 'LLL-NNN-LLL  // outputs something like PLW-682-LMV\n```\n\n## How it works\n\nIn the folder `initialisers` you'll find pre-made modules that can be added to your config. Each module needs to exports\ntwo things: `method` and `identifier`.\n\n``` javascript\nmodule.exports = {\n    method: mapYear,\n    identifier: 'Y'\n};\n```\n\nThe method is what outputs your result; the identifier is the letter that gets used in the config to identify strings made\nout of that component. So, in the example above, `mapYear` maps the years to alphabet letters, and therefore adding Y's to\nthe config will create sequences of the mapped letter. For example: -\n\n```\nformat: 'LLLNNNLLL-Y  // outputs something like PLW682LMV-A\n```\n\nConversely, you can pass arguments indexed by letters to the `generate` method -- they will be distributed to the correct\ncomponent.\n\n``` javascript\nvar FormattedId = require('rtp-formatted-id');\nvar formattedId = new FormattedId();\n//  pass 2016 as argument to the method identified by the letter Y, in this case mapYear\nformattedId.generate({\n   Y : 2016\n});\n```\n\nAll the components in the `initialisers` folder are loaded automatically. You can add your own as long as they have the\nsame interface and map to a letter unambiguosly.\n\n \n## Using the demo\n\nTo provide you with a quick evaluation tool, you can use the script `demo.js`. Run it as a bash script after doing a \n`chmod +x` to make it executable, or do `npm install -g` and run `demo` in your terminal.\n\nYou must specify how many codes you want to generate and the format to use. For example: -\n\n```\n./demo.js 100 LL-NNN-YY  // 100 codes in format letter-letter-number-number-number-mapYear-mapYear\n```\n    \nYou can also use the options -a (pass a json string as arguments to `generate`, see above) and -o (show the output).\n\n```\n./demo.js 100 LL-NNN-YY -a '{ \"Y\": 2016 }' -o true   // pass 2016 to mapYear, show the codes\n```\n\nPlease note that the generation may take a long time if you specify a very high number of codes, especially with `-o true` enabled.\n\n## Caveats\n \nThis software doesn't guarantee the ids will be unique. A short config like `LL-NN` is likely to generate conflicts after \na few hundred runs. Conversely, a longer config like `LLLLL-NNNNN` is unlikely to have one conflict after one million runs. \nYou can use the various initialisers to protect yourself even further, by adding deterministic parts to the generated id, \nuntil you reach a degree of risk that is either negligible or acceptable.\n\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n","masterBranchProtection":false},{"name":"UKHomeOffice/hof-logger","private":false,"url":"https://github.com/UKHomeOffice/hof-logger","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# hof-logger\nCommon logger pattern\n\n## Installation\n\n```bash\n$ npm install hof-logger --save\n```\n\n## Usage\nhof-logger exports a function which you can call to access a winston logger instance.\n\n```js\nvar logger = require('hof-logger')();\n\nlogger.info('A message');\n```\n\n## Options\nOptions can be passed to override defaults:\n\n```js\nvar createLogger = require('hof-logger');\nvar logger = createLogger({\n  levels: {\n    info: 0,\n    email: 1,\n    warn: 2,\n    error: 3\n  },\n  colours: {\n    info: 'green',\n    email: 'magenta',\n    warn: 'yellow',\n    error: 'red'\n  },\n  transportOptions: {\n    json: true,\n    timestamp: true,\n    colorize: true,\n    stringify: JSON.stringify\n  }\n});\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hof-dotfiles","private":false,"url":"https://github.com/UKHomeOffice/hof-dotfiles","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# HOF Dotfiles [![npm version](https://badge.fury.io/js/hof-dotfiles.svg)](https://badge.fury.io/js/hof) [![Build Status](https://travis-ci.org/UKHomeOffice/hof-dotfiles.svg?branch=master)](https://travis-ci.org/UKHomeOffice/hof-dotfiles)\n## Common dotfiles used by HOF in a typical build\n\nAdds the following preconfigured dotfiles to the root of your project on `postinstall`.\n\n- `.dockerignore`\n- `.eslintignore`\n- `.editorconfig`\n- `.eslintrc`\n- `.gitignore`\n- `.jscsrc`\n- `.travis.yml`\n\nIt won't overwrite any current dotfiles of the same name so you can safely install without destroying your own config.\n\nIf you want to contribute, please follow [the guidelines](./contributing.md)\n","travis":true,"contributing":"# Contribution guidelines\n\nWe welcome patches!\n\n## Commit hygiene\n\nWe like to follow the recommendations set out in the GDS [git style guide][gitstyle]\nwhich describes how we prefer git history and commit messages to read.\n\n[gitstyle]: https://github.com/alphagov/styleguides/blob/master/git.md\n\n## JavaScript\n\nWe have a JavaScript style checker `npm run style`\n\nAll our styles are defined in our [JavaScript style config][jsstyle]\n\nWe follow the [Google JavaScript style guide](https://google.github.io/styleguide/javascriptguide.xml)\n\nWe also lint our code `npm run lint`.\n\n[jsstyle]: https://github.com/UKHomeOffice/brp_app/blob/master/.jscsrc.json\n\nA pre commit hook is run as part of the project which runs the above checks and our tests (`npm run test`).\n\n## Visual changes\n\nFor visual changes, it can be helpful to provide images in your pull-request\nshowing before and after to highlight the differences.\n","masterBranchProtection":false},{"name":"UKHomeOffice/passports-date-controller","private":false,"url":"https://github.com/UKHomeOffice/passports-date-controller","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"hmpo-date-controller\n====================\n\n[![npm version](https://badge.fury.io/js/hmpo-date-controller.svg)](https://badge.fury.io/js/hmpo-date-controller)\n[![Build Status](https://travis-ci.org/UKHomeOffice/passports-date-controller.svg)](https://travis-ci.org/UKHomeOffice/passports-date-controller)\n\nA controller for the [hmpo-form-wizard] that provides out-of-the-box\nsupport for [hmpo-template-mixins]' 'input-date' mixin. It is a drop-in\nreplacement for the standard controller and, if need be, can be\ninherited from in your custom controllers.\n\nThe functionality in this module could, at some point, be merged into\n[hmpo-form-controller] as that already has knowledge of the date\ncomponent fields provided by input-date.\n\nMain Benefits\n-------------\n\n* No more silly custom controllers just so that date fields can be\n  handled.\n* The date validators from [hmpo-form-controller] can finally be\n  leaveraged, giving us easy validation on date fields. (e.g. Date must\n  not be in the future, person must be over 18 etc.)\n* No more date components in the steps definition. (Surely a source of\n  confusion for new developers?)\n* The date components are also validated individually allowing a missing\n  month, let's say, to be highlighted directly. The validators are\n  automatically applied and come from [hmpo-form-controller]. i.e.\n  'date-year', 'date-month' and 'date-day'. This gives the developer a\n  lot of date validation for free helping to avoid bugs in their forms.\n\nQuality Assurance\n-----------------\n\nThe controller's functionality is fully documented in the unit test.\n\nWhilst this is the first version of this module the code coverage is\n100% as measured by [Istanbul]. This is tested for in CI to ensure new\nchanges do not introduce untested code.\n\nLinting is also checked in CI using the `.eslintrc` from\n[hmpo-form-controller].\n\nMigrating from HOF's date-controller\n------------------------------------\n\nIf you were using HOF's date-controller then you would have had a custom\ncontroller which declared a single field as being the only date field.\nYou will also have added the date components to your steps definition.\nNone of this is required in hmpo-date-controller so your migration is\nmore about deleting this redundant code.\n\ne.g. Consider the following steps definition:\n\n```js\n[...]\n'/step-one': {\n  controller: require('dob-controller'),\n  fields: [\n    'fullname',\n    'date-of-birth',\n    'date-of-birth-day',\n    'date-of-birth-month',\n    'date-of-birth-year',\n    'nationality'\n  ],\n  next:\n  '/step-two'\n},\n[...]\n```\n\nThis can now become simply:\n\n```js\n[...]\n'/step-one': {\n  fields: [\n    'fullname',\n    'date-of-birth',\n    'nationality'\n  ],\n  next:\n  '/step-two'\n},\n[...]\n```\n\nThis of course means that you are now free to have more than one date\nfield per step.\n\nIf you were doing any validation on the date you might need to add it to\nthe definition for the field.\n\nThe only thing left to do is to ensure the default controller is, or\ninherits from, hmpo-date-controller.\n\n[hmpo-form-controller]: https://github.com/UKHomeOffice/passports-form-controller\n[hmpo-form-wizard]: https://github.com/UKHomeOffice/passports-form-wizard\n[hmpo-template-mixins]: https://github.com/UKHomeOffice/passports-template-mixins\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hof-bootstrap","private":false,"url":"https://github.com/UKHomeOffice/hof-bootstrap","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# Home Office Forms Bootstrap [![Build Status](https://travis-ci.org/UKHomeOffice/hof-bootstrap.svg?branch=master)](https://travis-ci.org/UKHomeOffice/hof-bootstrap) [![npm version](https://badge.fury.io/js/hof-bootstrap.svg)](https://badge.fury.io/js/hof-bootstrap)\n\nHome Office Forms (HOF) Bootstrap is a highly configurable mechanism for creating and optionally, launching your service.\n\n## Bootstrap is a function\n\nYou can call the `bootstrap` function with a list of [routes](#routes) and your [custom settings](#options) to invoke your personally configured service.\n\n```\nconst bootstrap = require('hof-bootstrap');\n\nbootstrap({\n  views: 'optional_path_to_your_views',\n  ...,\n  routes: [{ ... }, { ... }]\n});\n```\n\n\n## Interface\n`bootstrap` returns the bootstrap interface object, which includes `start`, `use`, `stop`, and `server`.\n\n### `start` Function(options)\n\n * Creates and starts the server listening for connections.\n * `@param {Object}` options (`port, host, protocol`)\n * `@return {Promise.<bootstrap|Error>}` a promise that returns bootstrap interface object if resolved, Error if rejected.\n\nConvenient if starting was deferred during the initial invocation of `hof-bootstrap` with the option and value `start: false` or the server has been stopped. Returns a promise which resolves to the `bootstrap` interface object.\n\n### `stop` Function(callback)\n\n * Closes the server, stops listening for connections\n * `@param {Function}` callback. Useful for testing\n * `@return {Promise.<bootstrap|Error>}` a promise that returns bootstrap interface object if resolved, Error if rejected.\n\n### `use` Function(middleware)\n\n * Alias for Express's `app.use`.`\n * `@param {Function}` middleware.\n * `@return {Object} bootstrap` interface object.\n\nThe use function can only be used if bootstrap is called with `{ start: false }` passed in config, `bootstrap.start()` will need to be called afterwards to start the app. This is due to the significance of the order in which middleware are applied. Alternatively an array of middleware functions can be passed in config.\n\n### `server`\n\n * Instance of an `http`/`https` server bound to the `app`\n * `@type {Object}\n\n## Structure\n`bootstrap` does not dictate how to structure your service, however, it does provide a number of default settings so you don't need to pass in anything other than a `route` and `steps`.\n\nWhen the service consists of a single form journey\n```\n<service_name>\n  |__ views/\n  |__ fields/\n  |__ translations/\n  |__ public/\n```\n\nIf the service consists of multiple form journeys\n```\n<service_name>\n  |__ views/\n  |__ fields/\n  |__ translations/\n  |__ public/\n  |__ apps/\n       |__ <name>\n       |    |__ views/\n       |    |__ fields/\n       |    |__ translations/\n       |__ <name>\n            |__ views/\n            |__ fields/\n            |__ translations/\n```\n\n## Options\n\n- `views`: Location of the base views relative to the root of your project. Defaults to 'views'.\n- `middleware`: An optional array of middleware functions to add to the application middleware pipeline.\n- `fields`: Location of the common fields relative to the root of your project. Defaults to 'fields'.\n- `translations`: Location of the common translations relative to the root of your project. Defaults to 'translations'.\n- `viewEngine`: Name of the express viewEngine. Defaults to 'html'.\n- `start`: Start the server listening when the bootstrap function is called. Defaults to `true`.\n- `getCookies`: Load 'cookies' view at `GET /cookies`.\n- `getTerms`: Load 'terms' view at `GET /terms-and-conditions`.\n- `sessionStore`: Provide a sessionStore to be used in place of redis. Suggest using [express-session.MemoryStore](https://github.com/expressjs/session/blob/master/session/memory.js) for development and acceptance testing.\n- `port`: Defaults to 8080.\n- `host`: Defaults to '0.0.0.0'.\n- `protocol`: Defaults to 'http'.\n- `env`: Can be used to switch contexts. Defaults to 'development'.\n- `gaTagId`: Google analytics tag.\n- `redis.host`: Defaults tp '6379'.\n- `redis.port`: Defaults '127.0.0.1'.\n- `session.ttl`: The session timeout in milliseconds. Defaults to `1800` (ms).\n- `session.secret`: The session secret. Set this to something unique.\n- `session.name`: The session name. Set this to something unique.\n\n## Environent variables\n\n- `PORT`\n- `HOST`\n- `PROTOCOL`\n- `ENV`\n- `GA_TAG`\n- `REDIS_HOST`\n- `REDIS_PORT`\n- `SESSION_TTL`\n- `SESSION_SECRET`\n- `SESSION_NAME`\n\n## Routes\n\nThe most important element of your service are the routes. These are what you will use to define the path your user will take when completing your forms.\n\n### Settings\nNot all route settings are mandatory, you can create and launch a service with just a set of steps.\n\n#### Required\n- `steps`: An object that defines the url, fields and optionally more for each form within your service.\n\nFor example, the following step will validate two fields. When submitted, if both fields are successfully validated, the next step to be loaded will be '/two'.\n```\nsteps: {\n  '/one': {\n    fields: [\n      'name_of_field_one',\n      'name_of_field_two'\n    ],\n    next: '/two',\n    forks: [{\n      target: '/three',\n      field: 'option1',\n      value: 'yes'\n    }]\n  }\n}\n```\n[Read more about steps and fields](https://github.com/UKHomeOffice/hof/blob/master/documentation/index.md)\n\n#### Options\n- `name`: If provided, is used to locate views, fields and translations for a form journey.\n- `baseUrl`: Base url from which all steps are relative. Defaults to `/`. If provided will be used to locate views, fields and translations for a form journey.\n- `fields`: Location of the routes' fields, relative to the root of your project. Defaults `fields`.\n- `views`: Location of the routes' views relative to the root of your project. Defaults `views`.\n\n**NOTE**: `fields` defined in a `route` determine the name of the directory or path, relative to the root, where the `fields` module is located. `fields` defined in a step, are a list of the name of each field you want to use in the step.\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/postgresql","private":false,"url":"https://github.com/UKHomeOffice/postgresql","license":null,"readme":"PostgreSQL Docker image\n=======================\n\n## Acknowledgments\n\n* This repo is taken from https://github.com/openshift/postgresql/tree/master/9.4 \n\nIt has been modified to provide a secure base image and allow for files for secrets and configuration.\n\nEnvironment variables and volumes\n----------------------------------\n\nThe image recognizes the following environment variables that you can set during\ninitialization by passing `-e VAR=VALUE` to the Docker run command.\n\n|    Variable name             |    Description                                 |\n| :--------------------------- | ---------------------------------------------- |\n|  `POSTGRESQL_USER`           | User name for PostgreSQL account to be created |\n|  `POSTGRESQL_PASSWORD`       | Password for the user account                  |\n|  `POSTGRESQL_DATABASE`       | Database name                                  |\n|  `POSTGRESQL_ADMIN_PASSWORD` | Password for the `postgres` admin account (optional)     |\n\nThe following environment variables influence the PostgreSQL configuration file. They are all optional.\n\n|    Variable name              |    Description                                                          |    Default\n| :---------------------------- | ----------------------------------------------------------------------- | -------------------------------\n|  `POSTGRESQL_MAX_CONNECTIONS` | The maximum number of client connections allowed. This also sets the maximum number of prepared transactions. |  100\n|  `POSTGRESQL_SHARED_BUFFERS`  | Sets how much memory is dedicated to PostgreSQL to use for caching data |  32M\n|  `POSTGRESQL_EFFECTIVE_CACHE_SIZE`  | Set to an estimate of how much memory is available for disk caching by the operating system and within the database itself |  128M\n\nYou can also set the following mount points by passing the `-v /host:/container` flag to Docker.\n\n|  Volume mount point      | Description                           |\n| :----------------------- | ------------------------------------- |\n|  `/var/lib/pgsql/data`   | PostgreSQL database cluster directory |\n\nUsage\n----------------------\n\nFor this, we will assume that you are using the `centos/postgresql-94-centos7` image.\nIf you want to set only the mandatory environment variables and not store the database\nin a host directory, execute the following command:\n\n```\n$ docker run -d --name postgresql_database -e POSTGRESQL_USER=user -e POSTGRESQL_PASSWORD=pass -e POSTGRESQL_DATABASE=db -p 5432:5432 centos/postgresql-94-centos7\n```\n\nThis will create a container named `postgresql_database` running PostgreSQL with\ndatabase `db` and user with credentials `user:pass`. Port 5432 will be exposed\nand mapped to the host. If you want your database to be persistent across container\nexecutions, also add a `-v /host/db/path:/var/lib/pgsql/data` argument. This will be\nthe PostgreSQL database cluster directory.\n\nIf the database cluster directory is not initialized, the entrypoint script will\nfirst run [`initdb`](http://www.postgresql.org/docs/9.4/static/app-initdb.html)\nand setup necessary database users and passwords. After the database is initialized,\nor if it was already present, [`postgres`](http://www.postgresql.org/docs/9.4/static/app-postgres.html)\nis executed and will run as PID 1. You can stop the detached container by running\n`docker stop postgresql_database`.\n\nPostgreSQL auto-tuning\n--------------------\n\nWhen the PostgreSQL image is run with the `--memory` parameter set and if there\nare no values provided for `POSTGRESQL_SHARED_BUFFERS` and\n`POSTGRESQL_EFFECTIVE_CACHE_SIZE` those values are automatically calculated\nbased on the value provided in the `--memory` parameter.\n\nThe values are calculated based on the\n[upstream](https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server)\nformulas. For the `shared_buffers` we use 1/4 of given memory and for the\n`effective_cache_size` we set the value to 1/2 of the given memory.\n\nPostgreSQL admin account\n------------------------\nThe admin account `postgres` has no password set by default, only allowing local\nconnections.  You can set it by setting the `POSTGRESQL_ADMIN_PASSWORD` environment\nvariable when initializing your container. This will allow you to login to the\n`postgres` account remotely. Local connections will still not require a password.\n\n\nChanging passwords\n------------------\n\nSince passwords are part of the image configuration, the only supported method\nto change passwords for the database user (`POSTGRESQL_USER`) and `postgres`\nadmin user is by changing the environment variables `POSTGRESQL_PASSWORD` and\n`POSTGRESQL_ADMIN_PASSWORD`, respectively.\n\nChanging database passwords through SQL statements or any way other than through\nthe environment variables aforementioned will cause a mismatch between the\nvalues stored in the variables and the actual passwords. Whenever a database\ncontainer starts it will reset the passwords to the values stored in the\nenvironment variables.\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-ruby","private":false,"url":"https://github.com/UKHomeOffice/docker-ruby","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Ruby Base Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-ruby.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-ruby)\n\nThis is a base container for projects that require ruby.\n\n## Usage  \n\nPut `FROM quay.io/ukhomeofficedigital/ruby` in the top of your Dockerfile\n\n### Useful Directories\n\n* `/app` - Where you app will be copied to on build\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-ruby/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n\n## Authors\n\n* **Jay Keshur** - *Initial work* - [jaykeshur](https://github.com/jaykeshur)\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/docker-ruby/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/docker-ruby/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* [RVM](https://rvm.io/)\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/scala-sbt","private":false,"url":"https://github.com/UKHomeOffice/scala-sbt","license":null,"readme":"# scala-sbt\n\nSimple Scala project with `sbt` and support for both `ScalaTest` and `specs2`.","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-ruby-firefox-chrome","private":false,"url":"https://github.com/UKHomeOffice/docker-ruby-firefox-chrome","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# Ruby Base Container\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-ruby-firefox-chrome.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-ruby-firefox-chrome)\n\nThis is a container that includes Ruby, Firefox and Chrome, intended to be used for running cucumber tests.\n\n## Usage  \n\nPut `FROM quay.io/ukhomeofficedigital/ruby-firefox-chrome` in the top of your Dockerfile\n\n### Useful Directories\n\n* `/app` - Where you app will be copied to on build\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to\ndiscuss it in an issue first.\n\nPlease note that this project is released with a\n[Contributor Code of Conduct](https://github.com/UKHomeOffice/docker-ruby-firefox-chrome/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository.\n\n\n## Authors\n\n* **Jay Keshur** - *Initial work* - [jaykeshur](https://github.com/jaykeshur)\n\nSee also the list of\n[contributors](https://github.com/UKHomeOffice/docker-ruby-firefox-chrome/graphs/contributors) who participated\nin this project.\n\n## License\n\nThis project is licensed under the GPL v2 License - see the\n[LICENSE.md](https://github.com/UKHomeOffice/docker-ruby-firefox-chrome/blob/master/LICENSE.md) file for details\n\n## Acknowledgments\n\n* [Firefox](https://www.mozilla.org/firefox)\n* [Chrome](https://www.google.com/chrome/)\n","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/firearms","private":false,"url":"https://github.com/UKHomeOffice/firearms","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"Firearms Licensing Application\n------------------------------\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/saru","private":false,"url":"https://github.com/UKHomeOffice/saru","license":null,"readme":"# saru\nSubject Access Request Unit\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-postgres-patroni-not-tracking","private":false,"url":"https://github.com/UKHomeOffice/docker-postgres-patroni-not-tracking","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/sheff-gradle","private":false,"url":"https://github.com/UKHomeOffice/sheff-gradle","license":null,"readme":"# sheff-gradle","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/UKVI-Complaints","private":false,"url":"https://github.com/UKHomeOffice/UKVI-Complaints","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# UKVI-Complaints [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/ukvi-complaints/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/ukvi-complaints) [![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/UKVI-Complaints/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/UKVI-Complaints)\n\nThis project is built with [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap) and uses [Docker](https://www.docker.com/).\n\n## Getting started\n\nGet the project from Github\n```bash\n$ git clone git@github.com:UKHomeOffice/UKVI-Complaints.git && cd UKVI-Complaints\n```\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\n[Install Docker Compose](https://docs.docker.com/compose/install/)\n\nRun the services locally with Docker Compose\n```bash\n$ docker-compose up\n```\n\nGetting your hands dirty (You'll need [Redis](http://redis.io/) for this)\n```bash\n$ npm run dev\n```\n\nFor anything else UKVI Complaints-related, look in [package.json](./package.json) for a full list of scripts etc, or refer to [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap).\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-self-serve","private":false,"url":"https://github.com/UKHomeOffice/evw-self-serve","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"[![Build Status](https://travis-ci.org/UKHomeOffice/evw-self-serve.svg?branch=master)](https://travis-ci.org/UKHomeOffice/evw-self-serve)\n[![Dependency Status](https://david-dm.org/UKHomeOffice/evw-self-serve.svg)](https://david-dm.org/UKHomeOffice/evw-self-serve)\n[![devDependency Status](https://david-dm.org/UKHomeOffice/evw-self-serve/dev-status.svg)](https://david-dm.org/UKHomeOffice/evw-self-serve#info=devDependencies)\n\n# EVW Self serve\n\nA tiny, HOF-based form to allow Electronic Visa Waiver users to update their travel details.\n\n### Prerequisities\n\nWhat things you need to install the software and how to install them\n- [NodeJS](https://nodejs.org/en/)\n- npm (bundled with node)\n- [Redis server](http://redis.io/topics/quickstart) running on the default port\n\n### Installing\n\n```bash\n$ redis-server &\n$ npm install\n$ npm run dev\n```\n\nGo to http://localhost:8080/update-journey-details\n\n## Running the tests\nYou will need the server running to run the cucumber tests against.\n\n```bash\n$ node_modules/.bin/nightwatch\n$ # or run in chrome and firefox in parallel 🤘🏽😝🤘🏽\n$ node_modules/.bin/nightwatch  -e chrome,firefox\n$ # or via npm scripts\n$ npm run test:acceptance\n```","travis":true,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/passports-templates","private":false,"url":"https://github.com/UKHomeOffice/passports-templates","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hmpo-templates\n\nCommon page layouts and partials. Inherits from [hmpo-govuk-template](https://github.com/UKHomeOffice/govuk-template-compiler).\n\n## Installation\n\n```\nnpm install [--save] hmpo-templates\n```\n\n## Setup\n\nInstall [hogan-express-strict](https://github.com/lennym/hogan-express) and [express-partial-templates](https://github.com/UKHomeOffice/express-partial-templates) as part of your project.\n```\nvar app = require('express')();\n\napp.set('view engine', 'html');\napp.use(require('hmpo-templates'));\napp.engine('html', require('hogan-express-strict'));\napp.use(require('express-partial-templates')(app));\n```\n\n## Basic usage\n\nmy-page.html\n```\n{{< hmpo-layout}}\n    {{$pageTitle}}...page title...{{/pageTitle}}\n\n    {{$header}}\n        <h1>...heading...</h1>\n    {{/header}}\n\n    {{$content}}\n        <p>...intro content...</p>\n        {{< hmpo-partials-form}}\n            {{$form}}\n                ...form inputs...\n                ...form submit button...\n            {{/form}}\n        {{/ hmpo-partials-form}}\n    {{/content}}\n{{/ hmpo-layout}}\n```\n\n## Templates\n\nThe templates are added to `res.locals` with `hmpo` as a prefix to the template names.\n\nLayout:\n+ maincontent (sets maincontent-left as the default and provides a block to override)\n+ maincontent-left\n+ maincontent-right\n+ maincontent-full\n+ flash-card\n\nPartials:\n+ analytics\n+ back-link\n+ back\n+ betatag\n+ body-end\n+ cookies\n+ form\n+ head\n+ new-window\n+ sidebar\n+ validation-summary\n\n### Changing a page layout\n\nCreate layout.html in your views directory.\n```\n{{< hmpo-layout}}\n    {{$pageTitle}}...page title...{{/pageTitle}}\n\n    {{$main-content}}\n        {{< hmpo-partials-maincontent-right}}\n            {{$header}}...heading...{{/header}}\n            {{$content}}...content...{{/content}}\n        {{/ hmpo-partials-maincontent-right}}\n    {{/main-content}}\n{{/ hmpo-layout}}\n```\nThis changes the main page layout to maincontent-right. In your custom pages you can now inherit from layout.html.\n\n## Compatibility\n\nUse with [hmpo-template-mixins](https://github.com/UKHomeOffice/passports-template-mixins) for form inputs and view formatters. When used with [hmpo-form-wizard](https://github.com/UKHomeOffice/passports-form-wizard) you'll get a validation summary appearing at the top of your page when a form error occurs.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-api","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-api","license":null,"readme":"# pttg-financial-status-service-api\n\nSee also\nGitHub - pttg-fs-integration\nGitLab - https://gitlab.digital.homeoffice.gov.uk/atodd/pttg-fs-barclays\n       (or ssh://git@gitlab.digital.homeoffice.gov.uk:2222/atodd/pttg-fs-barclays.git )\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/ukvicomplaints-prototype","private":false,"url":"https://github.com/UKHomeOffice/ukvicomplaints-prototype","license":null,"readme":"# Unofficial Static Government Digital Prototype kit\nSimple prototyping kit for GOV.UK service designers. This kit does not contain all of the functionality of the express kit, however, you will not need node.js or git experience, and you will not need to run anything in command line.\n\nCreated internally at Home Office Digital - not supported, not created by GDS, supplied as-is\n\nThis is not finished! It's Alpha Alpha!\n\n## Getting Started\n\n#### You will need:\n- A mac (sorry, this isn't tested on PCs yet)\n\n#### Nice to have:\n- _Some_ HTML knowledge\n\nFirst, either:\n\n- Download a zip of this repository from https://github.com/tjharrop/simple_prototype_kit/archive/master.zip and unzip it to your computer\n\n*- OR -*\n\n- If you're comfortable with git, either clone the repo in the git desktop client or via command line (`git clone https://github.com/tjharrop/simple_prototype_kit.git`)\n\nOnce you have the folder on your computer, you will see the index.html and example files. The example files contain demonstrations of various pieces of functionality. index.html has buttons to guide you through each page. Full instructions on each demo to follow.\n\n## Running the thing\n\nThere are 2 options here. You can either open index.html in Safari or Firefox directly or you can run a small script which will allow you to use chrome.\n\n#### Using Safari or Firefox\n1. Cmd + click index.html in Finder\n2. Open With\n3. Select Safari or Firefox\n\n#### Using Chrome (recommended)\n\n_You may see an unauthorised developer warning message. If you do, cmd + click and click \"open\" instead (thanks Joe)_\n\n1. Double click run.command (see above if you get a warning)\n2. In chrome, go to http://localhost:1987/index.html\n\n## Working on it\n\nA good place to start in index.html.\n\n1. Open this in your chosen HTML editor (if you don't have one, see https://atom.io/).\n2. Hack away! Change some content, add some buttons or form fields according to your design\n3. Press refresh in your browser.\n\n#### Changing the service name\n\nThere is a file called service-name.txt which looks like this:\n\n```Digital Service Name```\n\n1. Open it\n2. Change it to your service name\n3. Save it\n\n#TODO\n\n1. Full instructions on the examples pages\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/research-resources","private":false,"url":"https://github.com/UKHomeOffice/research-resources","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/posters","private":false,"url":"https://github.com/UKHomeOffice/posters","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# Access Needs Posters\nHome Office Digital repository of posters covering different topics - research, access needs, accessibility, design.\n\n**Background**\n\nIf you'd like to learn more about these posters, and why they were made, read [this blogpost by their creator Karwai Pun](https://accessibility.blog.gov.uk/2016/09/02/dos-and-donts-on-designing-for-accessibility/).\n\n\n**Contributions**\n\nIf you've got a poster you've created, and would like to commit it here, please do!\n\n\n**Translations**\n\nYou are welcome to translate the posters. We want them to be available in as many languages as possible. We only ask you to make available publicly.\n\nA suggested approach might be:\n\n1. [clone the repository](https://github.com/UKHomeOffice/posters)\n2. translate them\n3. Add 2 or 3 letter language code to the end of each poster - e.g. \"screenreader_fr.pdf.\"\n4. send a pull request so we can merge them, or tell us where they are so we can advertise them here.\n\n\n**Licensing**\n\nThe posters are available under Creative Commons BY-NC-SA license - this means you can reuse, adapt them for non-commercial uses as long as you attribute the original project.\n\nRead more in LICENSE.md.\n\n\n**Access needs**\n\nThese posters cover the following access needs:\n* Autism (https://github.com/UKHomeOffice/posters/blob/master/accessibility/autistic-spectrum.pdf)\n* Dyslexia (https://github.com/UKHomeOffice/posters/blob/master/accessibility/dyslexia.pdf)\n* Visually impaired - low vision users (https://github.com/UKHomeOffice/posters/blob/master/accessibility/low-vision.pdf)\n* Visually impaired - screenreader users (https://github.com/UKHomeOffice/posters/blob/master/accessibility/screenreader.pdf)\n\n\n**User research and design**\n\n* User research is a team sport (https://github.com/UKHomeOffice/posters/blob/master/gds/research-teamsport.pdf)\n* 2 hours of user research every six weeks (https://github.com/UKHomeOffice/posters/blob/master/gds/two-hours-every-six-weeks.pdf)\n* GDS design principles (https://github.com/UKHomeOffice/posters/blob/master/gds/design-principles-poster.pdf)\n* GDS \"It's OK to..\" (https://github.com/UKHomeOffice/posters/blob/master/gds/its-ok-to.pdf)\n\n\n**Contact**\n\nBest is to open a message in Issues, and we'll get in touch. Otherwise you can contact Karwai Pun, @krwpn, or Bernard Tyers, @bernardtyers, on Twitter.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-gradle-common","private":false,"url":"https://github.com/UKHomeOffice/pttg-gradle-common","license":null,"readme":"## Gradle plugin that applies PTTG team standards and conventions.\n\n### Use this plugin in your gradle build by:\n\n1. Adding a buildscript dependency\n\n```\nbuildscript {\n       repositories{\n            maven { url \"https://github.com/UKHomeOffice/pttg-gradle-repo/raw/master/releases\" }\n            maven { url \"https://plugins.gradle.org/m2/\" }\n       }\n       dependencies {\n           classpath 'pttg-gradle-common:pttgCommonGradle:1.2.RELEASE'\n       }\n}\n```\n\n2. Applying the plugin\n\n```\napply plugin: 'pttgCommonGradle'\n```\n\n3. User guide\nSee the following documentation. In your project you can also execute the 'pttgCommonGradlePluginUsage' task to\nsee usage instructions and version information etc.\n\n\n### What this plugin gives your build automatically\n\n1. Applies our commonly used plugins \n - java\n - groovy\n - application\n - checkstyle\n - git properties\n\n2. Applies the standard repositories that we use\n\n3. Sets our standard gradle / gradle wrapper version\n\n4. Sets our standard Java version\n\n5. Applies our convention for test reporting: All tasks with a type of 'Test' will generate report HTML into \nbuild/reporting/task-name, eg build/reporting/acceptanceTest or build/reporting/test or build/reporting/myCustomTest\n\n6. Includes commonly used dependencies at our standard versions, eg\n - junit\n - mockito\n - groovy\n - json\n \n7. Applies property expansion to application.properties so that you can use eg ${version} to receive the version\nproperty from build.gradle\n \n8. If the project uses the 'com.moowork.gulp' plugin, then the build is changed to depned on the gulp_test task, and \nthe gulp_test task is added to the verification group\n \n9. Adds checkstyleTest task to the verification group, and adds Checkstyle to the 'check' task, \nconfigured to report on the following errors (but not fail the build):\n - Unused imports\n  \n  NB You can choose to have Checkstyle violations fail the build by adding this configuration:\n  \n  ```\n  checkstyle {\n    ignoreFailures = true\n  }\n  ```\n  NB You can use your own Checkstyle rules using the following configuration to point to your checkstyle.xml\n  \n  ```\n  checkstyle {\n    configFile = <path-to-checkstyle.xml>\n  }\n  ```\n \n### What this plugin allows you to use in your build\n\n1. The plugin creates libraries of dependency groupings at our standard versions\n\neg the plugin defines a standard dependency grouping for Cucumber BDD support, including the following dependencies\n```\n\"info.cukes:cucumber-java:$cucumberVersion\",\n\"info.cukes:cucumber-junit:$cucumberVersion\",\n\"info.cukes:gherkin:2.12.2\",\n\"net.serenity-bdd:serenity-core:$serenityVersion\",\n\"net.serenity-bdd:serenity-cucumber:$serenityCucumberVersion\",\n\"net.serenity-bdd:serenity-junit:$serenityVersion\"\n```\nYou can use this library in your build as follows:\n\n```\ndependencies{\n    testCompile libraries.cucumber\n}\n```\n\nThe following libraries are defined:\n\n- groovy\n- json\n- testUtils\n- logging\n- jackson\n- jacksonJsonProviders\n- mongo    \n- springboot \n- springbootActuator\n- springrestdocs\n- restassured \n- spock    \n- cucumber\n\nYou can override versions of common dependency libraries using the commonLibraries extension block, specifying\nnew version number for the library you wish to override.\n\nThis example shows the current version properties and values that can be overridden:\n\n```\ncommonLibraries{\n    cucumberVersion = '1.2.4'\n    groovyVersion = '2.4.3'\n    jsonVersion = '20160212'\n    jacksonVersion = '2.7.4'\n    logbackVersion = '1.1.3'\n    mongoVersion = '3.0.4'\n    restAssuredVersion = '2.9.0'\n    serenityCucumberVersion = '1.1.6'\n    serenityVersion = '1.1.31'\n    spockVersion = '1.0-groovy-2.4'\n    springBootVersion = '1.3.3.RELEASE'\n    springRestDocsVersion = '1.1.0.RC1'\n    springVersion = '4.2.5.RELEASE'\n}\n```\n\n### Deploying this plugin to the GitHub gradle repository\n\n1. Set the version number in build.gradle (and update this readme)\n2. Execute the tasks clean, build, publishToGitHub\n3. IntelliJ will ask you for your github login the first time\n\nThis relies on the [gradle-git-repo-plugin](https://github.com/layerhq/gradle-git-repo-plugin)\n\n\n\n### Development\n\n1. Increment the minor version number (still needs to be RELEASE because I can't figure out how to make the git-repo plugin support snapshots)\n2. Make your changes\n3. You can use publishMavenJavaPublicationToMavenLocal to deploy the change to your local maven repo\n   1. Note however that this won't work if your changes add new transitive third-party dependencies\n4. Test consumption of the plugin from another project by\n   1. Adding mavenLocal() to your buildscript repositories to consume form local repo\n   2. using the new version number for the plugin in your buildscript dependencies\n   3. You may well need to execute ``` ./gradlew --refresh-dependencies``` to pick up changes, then refresh your IDE\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-gradle-springboot","private":false,"url":"https://github.com/UKHomeOffice/pttg-gradle-springboot","license":null,"readme":"## Gradle plugin that adds Spring Boot and supporting utilitiy tasks to your build.\n\n### Use this plugin in your gradle build by:\n\n1. Adding a buildscript dependency\n\n```\nbuildscript {\n       repositories{\n            maven { url \"https://github.com/UKHomeOffice/pttg-gradle-repo/raw/master/releases\" }\n       }\n       dependencies {\n           classpath 'pttg-gradle-common:pttgSpringBootGradle:1.1.RELEASE'\n       }\n}\n```\n\n2. Applying the plugin\n\n```\napply plugin: 'pttgSpringBootGradle'\n```\n\n! NOTE - This plugin expects the java plugin to be applied first.\nIf you are using the pttgCommonGradlePlugin, ensure it is applied above this one.\n\n3. User guide\nSee the following documentation. In your project you can also execute the 'pttgSpringBootGradlePluginUsage' task to\nsee usage instructions and version information etc.\n\n3. Configuring the plugin\n\nCustomise configuration using the 'springboot' extension block and override any properties.\nThe available properties and their defaults are shown in this sample:\n\n```\nspringboot{\n    port = 8081 // the port where your spring boot app is running. Required by the bootStop task\n}\n```\n\n### What this plugin gives your build automatically\n\n1. Applies the spring boot plugin\n\n2. Adds the spring boot dependencies\n\n3. Adds a bootStop task alongside the standard bootRun task (defaults to use port 8081)\n\n4. Adds the spring boot actuator support running with the bootRun task\nsee [spring-boot-actuator endpoints](http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#production-ready-endpoints)\n\n5. Adds startSever and stopServer tasks which use a separate process so that other gradle tasks such as acceptanceTest\ncan start and stop the server automatically \n\n### Springboot Actuator support\ntodo tune config for production\n\nActuator support exposes (amongst other things) the following useful endpoints\n\n  * /mappings\n  * /health\n  * /metrics\n  * /info\n  * /trace \n\nTry them and see.\n\n### Development\n\n1. Increment the minor version number (still needs to be RELEASE because I can't figure out how to make the git-repo plugin support snapshots)\n2. Make your changes\n3. You can use publishMavenJavaPublicationToMavenLocal to deploy the change to your local maven repo\n   1. Note however that this won't work if your changes add new transitive third-party dependencies\n4. Test consumption of the plugin from another project by\n   1. Adding mavenLocal() to your buildscript repositories to consume form local repo\n   2. using the new version number for the plugin in your buildscript dependencies\n   3. You may well need to execute ``` ./gradlew --refresh-dependencies``` to pick up changes, then refresh your IDE\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-stub","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-stub","license":null,"readme":"Financial Status Service Stub\n=============================\n\n**Overview**\n\n\nA stub to represent a banking interface for the Finanical Status Service. Also provides a central repository for acceptance \ntest data. \n\n-\n\n**Demo Data**\n\nAdd any data files to be automatically inserted,  to the src/test/resources folder with the prefix **demoData**\n\n-\n\n**Technical Notes**\n\nThe API is implemented using Spring Boot, Spring data (MongoDB)\n\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-gradle-apidocs","private":false,"url":"https://github.com/UKHomeOffice/pttg-gradle-apidocs","license":null,"readme":"## Gradle plugin that adds Spring Rest API documentation support\n\n### Use this plugin in your gradle build by:\n\n1. Adding a buildscript dependency\n\n```\nbuildscript {\n       repositories{\n            maven { url \"https://github.com/UKHomeOffice/pttg-gradle-repo/raw/master/releases\" }\n            jcenter()\n       }\n       dependencies {\n           classpath 'pttg-gradle-common:pttgApiDocsGradle:1.1.RELEASE'\n       }\n}\n```\n\n2. Applying the plugin\n\n```\napply plugin: 'pttgApiDocsGradle'\n```\n! NOTE - This plugin expects the java plugin to be applied first.\nIf you are using the pttgCommonGradlePlugin, ensure it is applied above this one.\n\n3. User guide\nSee the following documentation. In your project you can also execute the 'pttgApiDocsGradlePluginUsage' task to\nsee usage instructions and version information etc.\n\n4. Configuring the plugin\n\nCustomise configuration using the 'apidocs' extension block and override any properties you wish to change.\nThe available properties and their defaults are shown in this sample:\n\n```\napidocs{\n    testSrcPattern = 'apidocs/**'\n    sourceDocsDir = 'src/doc'\n    jarDocsDir = 'static/docs'\n    snippetsDir = 'build/generated-snippets'\n    jarAppendix = 'docs'\n}\n```\n\nwhere\n * testSrcPattern = pattern for the api test classes eg this is for tests under src/test/java/apidocs\n * sourceDocsDir = location of your 'asciidoc' and 'resources' folders containing asciidoc files (eg your index.adoc) and template overrides\n * jarDocsDir = location to put the generated documentation (HTML and PDF) in the project jar\n * snippetsDir = working directory where spring-rest-docs will generate adoc fragments from your test cases\n * jarAppendix = appendix to append to the jar name\n \n5. Using the plugin in conjunction with SpringBoot\n\nThe buildWithApiDocs task generates a jar containing the project outputs and the generated api docs.\nTo produce a Spring Boot executable jar, you must then execute the bootRepackage task.\nThese steps can be combined with a custom task such as the following:\n\n```\ntask buildSpringBootWithApiDocs(type: BootRepackage, dependsOn: buildWithApiDocs) {\n    group 'build'\n    description 'Builds the jar as a Spring Boot executable jar containing the api docs'\n}\n```\n\n6. Modifying the jar manifest\n\nThe buildWithApiDocs task generates a default jar manifest. If you have customised the project's jar manifest then those\ncustomisations should be passed to the buildWithApiDocs task by extracting a shared manifest such as:\n\n```\nversion = blah\n\next.sharedManifest = manifest {\n    attributes(\n        'Implementation-Title': \"${jar.baseName}\",\n        'Implementation-Version': version\n    )\n}\n```\n\nwhich can then be re-used in your jar task or the buildWithApiDocs task as follows:\n\n```\nbuildWithApiDocs{\n    manifest = project.manifest {\n        from sharedManifest\n    }\n}\n```\n \n\n### What this plugin gives your build automatically\n\n1. Applies the spring-rest-doc and asciidoctor plugins\n\n2. Applies the spring-rest-docs dependencies and repositories\n\n3. Creates a new source set, 'doc', to hold your asciidoc files\n\n4. Excludes api doc tests from the regular unit test task\n\n5. Creates the following new tasks for working with spring rest docs\n   1. verification / apiDocTest : run the api doc test cases\n   2. documentation / generateApiDocs : run the api doc test cases and generate the final HTML and PDF documentation\n   3. build / buildWithApiDocs : perform a full build including the api doc tests, adding the generated documentation to a copy of the final jar \n\n\n### Development\n\n1. Increment the minor version number (still needs to be RELEASE because I can't figure out how to make the git-repo plugin support snapshots)\n2. Make your changes\n3. You can use publishMavenJavaPublicationToMavenLocal to deploy the change to your local maven repo\n   1. Note however that this won't work if your changes add new transitive third-party dependencies\n4. Test consumption of the plugin from another project by\n   1. Adding mavenLocal() to your buildscript repositories to consume form local repo\n   2. using the new version number for the plugin in your buildscript dependencies\n   3. You may well need to execute ``` ./gradlew --refresh-dependencies``` to pick up changes, then refresh your IDE\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-gradle-repo","private":false,"url":"https://github.com/UKHomeOffice/pttg-gradle-repo","license":null,"readme":"Maven repository for gradle artifacts.\n\nConsume artifacts from this repository into your gradle build using the following repository configuration:\n\n```\nmaven { url \"https://github.com/UKHomeOffice/pttg-gradle-repo/raw/master/releases\" }\n```\n\nPublish artifacts to this repository using the following configuration, and use the publishToGitHub task:\n\n```\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.layer:gradle-git-repo-plugin:2.0.2'\n    }\n}\n\napply plugin: 'git-repo'\n\ngitPublishConfig {\n    org = \"UKHomeOffice\"\n    repo = \"pttg-gradle-repo\"\n    gitUrl = \"https://github.com/UKHomeOffice/pttg-gradle-repo.git\"\n}\n\npublishing {\n    repositories {\n        maven {\n            url \"file://${gitPublishConfig.home}/${gitPublishConfig.org}/${gitPublishConfig.repo}/releases\"\n        }\n    }\n    publications {\n        mavenJava(MavenPublication) {\n            from components.java\n        }\n    }\n}\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-ui","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-ui","license":null,"readme":"Financial Status Service UI\n=\n\nOverview\n-\n\nThis is an overview of the financial status service UI.\nThe financial status service UI is a UI for the financial status service.\nThat was an overview of the financial status service UI.\n\n\nSuggestions\n-\n\nAdded a demo of the Spring Boot actuator support and healthchecks\n\nsee eg (or use JConsole to view via JMX)\n\nhttp://localhost:8001/info\n\n> Gives application version and git version details.\n> Perhaps useful when we have a deployment pipeline\n  \n  \nhttp://localhost:8001/health\n\n> Reports healthcheck results\n> Hit refresh a few times to see different results\n\n\nhttp://localhost:8001/mappings\n\n> Shows all known path mappings \n\nhttp://localhost:8001/metrics\n\n> Metrics including hit counts and response times\n> Also including custom metrics eg use the UI a few times to do some queries, then look at the metrics for\n> counter.greetings.accountNumber\n\nhttp://localhost:8001/trace\n\n> Request log traces\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/rtp-sqs-producer","private":false,"url":"https://github.com/UKHomeOffice/rtp-sqs-producer","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"rtp-sqs-producer [![npm version](https://badge.fury.io/js/rtp-sqs-producer.svg)](https://badge.fury.io/js/rtp-sqs-producer) [![Build Status](https://travis-ci.org/UKHomeOffice/rtp-sqs-producer.svg)](https://travis-ci.org/UKHomeOffice/rtp-sqs-producer)\n-----------------\n\nVery thin wrapper around amazon sqs. Provides little more than a friendly interface to publish messages to the sqs queue, and\nretry in case of failure.\nCurrently doesn't support receiving, but only publishing.\n\nUse\n---\n\n    var producer = new (require('rtp-sqs-connector'))(config)\n    \nThe module assumes that you have injected your amazon sqs credentials into `process.env`.\n\nAnyone (internal or external) can report concerns with published code by emailing evw-contactus@homeoffice.gsi.gov.uk.\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-ip-api","private":false,"url":"https://github.com/UKHomeOffice/pttg-ip-api","license":null,"readme":"Income Proving API\n=\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/pttg-income-proving-api/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/pttg-income-proving-api)\n\nOverview\n-\n\nThis is the Income Proving API.\n\nTechnical Notes\n-\n\nThe API is implemented using Spring Boot.  It is intended to allow the team to compare and contrast with\nthe API previously built using Spark Java.\n\n\n\n### Infrastructure\n\nBuilds are triggered by Jenkins.\n\nApps are packaged as Docker images and stored on quay.io.\n\nApps are run on AWS managed by kubernetes.\n\n### Philosophy\n\nEverything runs in a Docker container.\n\nBuilds are portable, it should be possible to check the code out, build and run the tests without any constraints.\n\nNo dependence on Jenkins for plugins, etc.\n\n## Building\n\n### Everything in Docker\n\nThere is a requirement to not use any non-vanilla feature in Jenkins nor to use any plugins.  This is\nseen as polluting Jenkins.  This will allow Jenkins to be replaced at any time without difficulty.\n\nJenkins runs in a Docker container on AWS.\n\nFollowing this approach Jobs execute a shell script that carries out the build within a Docker Container.  This\nis implemented by the build.sh script which does the following:\n\n\t1. Create Docker image to execute build in\n\t2. Run docker image\n\t3. Build docker image to run jar from artifacts\n\t4. Push image to quay.io\n\n#### Pros of this approach\n\n* There will be no port conflicts as the only thing running in the container is the app.  During the\nspike we found that Jenkins was running on port 8080 which is the port used by the app which meant the\n app had to be run a different port for testing.  This is different to how it will run in production.\n* Jenkins can be easily replaced with another tool.  [Not sure why this would be neccessary given that\nit is only used to poll git and then execute a shell script - essentially doing the job chron does but\nusing git changes instead to time event.]\n\n#### Cons of this approach:\n\n* Running the build inside a container adds overhead in terms of both build duration and scripting.\n* Build scripts are more complex, have to cater for situation such as running a docker container\nwith a docker container.\n* Running the build inside a container is slower than building directly on the Jenkins server as\nall the dependent jar files have to be downloaded for each build as does Gradle.\n* Cannot use Jenkins plugins to publish the Serenity BDD reports they would have to be extracted and\npublished. [The docker cp command does not support wildcards or recursive folder copying so it cannot\nbe used.]\n* Jenkins cannot be used to view unit test coverage reports. They would need to be extracted and published.\n\n### Build on Jenkins server using Gradle\n\nThe usual approach is to define a Job that executes the build steps on the Jenkins\nserver in a local workspace.  For this example a simple build step that executes various Gradle tasks\nhas been implemented.  The Gradle script uses a plugin that builds the docker image and a custom task\nto push the image to quay.io.\n\n#### Pros of this approach\n\n* No need to create a short lived container to execute the build in.  This reduces the amount of\nshell scripting.\n* Gradle can be used for all build steps, same as for development as same as anyone who wanted to take\nadvantage of the project as open source.\n* Builds are faster as Jenkins maintains a local cache for jar dependencies.\n* Gradle only downloaded once, not for every build.\n* The example Job that builds the project does not make use of any non-vanilla Jenkins features or\nplugins so Jenkins could be swapped out.\n\n#### Cons of this approach\n\n* Port conflicts\n\n### Other points\n\nThe 'Build on Jenkins server using Gradle' approach would allow some Jenkins plugins to be used to, for example, publish\nthe test reports.  Proving things uses BDD approach and the Serenity BDD tool to report the state of\nthe executable specification (cucumber feature files).  Publishing these reports would be more complex\nusing the 'Everything in Docker' approach.\n\nEach image pushed to quay.io must have a unique tag.  This is achieved by appending the Jenkins build\nnumber to the version number:\n\n\tquay.io/ukhomeofficedigital/uk.gov.digital.ho.proving.income.api:1.0.29\n\nIt is unlikely that every build on Jenkins should be pushed to quay.io.\n\nNeither approach offers a method for easily automating a software release.  Solving this issue in\nGradle will most likely be easier.\n\n## Deploy\n\n### Overview\n\nContainers are deployed and managed by Kubernetes running on AWS.\nImages are pulled from quay.io.\nLogging is via stdout.\n\n### Kubernetes on AWS\n\nKubernetes is used for deploying, running and managing the Docker containers.  Simply put\nKuberentes is configured declaratively, you tell it what you want deploying (i.e. docker image), and\nwhat you want running (i.e. number of docker containers).  Kubernetes then takes the appropriate\nsteps to achieve this.\n\nA framework, kb8or (https://github.com/UKHomeOffice/kb8or), has been built to assist in this process.\n\nThe services folder contains all the files neccessary to carry out the deployment.  Following the\npreviously stated philosophy the deployment is executed from inside a Dcoker container.\n\nThe characteristics of the app are defined in the ReplicationController\n\n\tservices/k8resoruces/pt-income-rc.yaml\n\nThis file declares the required number of running instances; how much cpu and memory each instance\ngets; which port is exposed to the proxy; and any runtime configuration items that are to be passed\ninto the container as environment variables.\n\n### Summary\n\nIn addition to run capacity and performance he only items that need to be considered from an\napplication delivery team perspective are:\n\n* Provisioning the token used to authenticate to k8s\n* Providing the correct version of the image to be deployed\n\nAll the other configuration should be boiler plate that only needs to be set up when a new application\ndevelopment is started.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-test-ip-mongodb","private":false,"url":"https://github.com/UKHomeOffice/pttg-test-ip-mongodb","license":null,"readme":"# Overview\n\nThis project creates some test data in a MongoDB instance\n\nStart mongo as per usual:\n\n mongod --dpath <path to your data directoy>\n \n optional - override Mongodb host and port with environment variables  - MONGO_HOST and MONGO_PORT","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-ip-gt-ui","private":false,"url":"https://github.com/UKHomeOffice/pttg-ip-gt-ui","license":null,"readme":"Generic UI\n=\n\nOverview\n-\n\nTODO\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-ip-fm-ui","private":false,"url":"https://github.com/UKHomeOffice/pttg-ip-fm-ui","license":null,"readme":"Income Proving API\n=\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/pttg-ip-fm-ui/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/pttg-ip-fm-ui)\n\nOverview\n-\n\nThis is the Income Proving API.\n\nTechnical Notes\n-\n\nThe API is implemented using Spring Boot.  It is intended to allow the team to compare and contrast with\nthe API previously built using Spark Java.\n\nAPI Notes\n-\n* The API will only return enough information to support the current UI tools needs\n* The API will NOT return the search parameters used by the client\n* The API will use resources and restful ideas as much as possible\n* The API will only support accepting and returning JSON data\n\nExamples will follow once the API redesign is done.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-centos-tomcat","private":false,"url":"https://github.com/UKHomeOffice/docker-centos-tomcat","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# tomcat\n\n## Description\nApache Tomcat Container\n\n## Usage\n\nTo build this container you need to run:\n\n```\nmake build\n```\n\nIf you want TLS configured then you need to put your ca.crt, crt.pem and key.pem into the ssl directory for these to be mounted into the image (with those specific names). If you would like to enable Basic Auth as well then you need to rename and edit ssl/tomcat-users.xml.template to ssl/tomcat-user.xml adding any users as required. The SSL directory should then be mounted into the container to /opt/tomcat/ssl. To run the Tomcat container run which will dynamically start with SSL/Basic Auth if it finds the correct files:\n\n```\nmake run\n```\n\nThis will startup a Tomcat container running Catalina\n\n\n## Tests\n\nAs part of the build process the docker file will run the OpenSSL and Tomcat test exiting and failing the build if these fail.\n\n\n### Credits\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n[Cookiecutter](https://github.com/audreyr/cookiecutter)\n[audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-income-mongodb","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-income-mongodb","license":null,"readme":"# Proving things - mongodb database - test data\n\n### Kubernetes Deployment\n\nThis is the kubernetes deployment files for Proving Things mongo db (non production test data)\n\nrun deployment\n\n\t./scripts/deploy_kd\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-ip-gt-ui","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-ip-gt-ui","license":null,"readme":"# pttg-income-ui\nProving Things - Income UI\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-ip-api","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-ip-api","license":null,"readme":"## Proving Things - Income API -  Kubernetes Resources\n\n### Kubernetes Deployment\n\nThis is the kubernetes deployment files for Proving Things Income API\n\nAs it stands this is using [KB8OR for deployments](https://github.com/UKHomeOffice/kb8or)\n\nrun deployment\n\n\t./scripts/deploy -e dev ./pttg-ip-api.yaml\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-vault","private":false,"url":"https://github.com/UKHomeOffice/docker-vault","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Vault in Kubernetes\n\n[![Build Status](https://drone.digital.homeoffice.gov.uk/api/badges/UKHomeOffice/docker-vault/status.svg)](https://drone.digital.homeoffice.gov.uk/UKHomeOffice/docker-vault)\n\nVault in a docker image with all the necessary scripts to run vault in\nkubernetes cluster.\n\nThere are two main components in this setup:\n- Vault container - main vault process which listens in a tcp socket\n- overlord container - bash script which takes care of unsealing vault,\n  creating admin user and persisting vault unseal key if `KUBERNETES_NAMESPACE` is set.\n\n\n## Getting Started\n\nFirst of all, you need to make sure that your kubernetes cluster supports\nservice accounts and that either the default or vault specific service account\nhas access to create kubernetes secrets in the namespace. However this is only\nneeded if you're bootstrapping vault.\n\nWe are going assume that vault is being deployed into a namespace called vault.\n\nIn the below example we will use AWS DynamoDB as a backend. So for that, you\nneed to create a DynamoDB table and an IAM user with required permissions. Then\nchange environment variables accordingly in [vault deployment file](kube/vault-deployment.yaml).\n\n\n### Configuration\n\n* `VAULT_BACKEND` - defaults to `inmem`.\n* `TLS_DISABLE` - defaults to 1.\n* `VAULT_ADMIN_PASSWORD` - admin password that overlord sets when creating an\n  admin user. If unset, overlord will generate a random one, which will be\n  logged, so changing it is advisable.\n* `KUBERNETES_NAMESPACE` - if service account is present, then the namespace\n  name will be taken from there and vault unseal key will be persisted as\n  kubernetes secret.\n\nAny other environment variables, which are supported by vault, can be set.\n\n\n### Deployment\n\n* Deploy an empty vault-unseal secret (will be updated by overlord script)\n```\nkubectl --namespace=vault create -f kube/vault-secrets.yaml\n```\n\n* Deploy vault pod (vault itself and overlord container)\n```\nkubectl --namespace=vault create -f kube/vault-deployment.yaml\n```\n\n* Deploy a kubernetes service endpoint for vault\n```\nkubectl --namespace=vault create -f kube/vault-svc.yaml\n```\n\n\n### Other\n\n#### TLS\n\nIf you want to provide TLS certs, you can place them in `/vault/certs/cert.pem`\nand `/vault/certs/key.pem`.\n\n\n## Contributing\n\nContributions are most certainly welcome. If you want to introduce a breaking\nchange or any other major change, please raise an issue first to discuss.\n\n## License\n\n[MIT](LICENSE)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/workshops","private":false,"url":"https://github.com/UKHomeOffice/workshops","license":null,"readme":"# workshops\nA Collection of Developer Workshop &amp; Presentation Documents\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-postgresql-patroni","private":false,"url":"https://github.com/UKHomeOffice/docker-postgresql-patroni","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"|Build Status| |Coverage Status|\n\nPatroni: A Template for PostgreSQL HA with ZooKeeper, etcd or Consul\n------------------------------------------------------------\nThere are many ways to run high availability with PostgreSQL; for a list, see the `PostgreSQL Documentation <https://wiki.postgresql.org/wiki/Replication,_Clustering,_and_Connection_Pooling>`__.\n\nPatroni is a template for you to create your own customized, high-availability solution using Python and — for maximum accessibility — a distributed configuration store like `ZooKeeper <https://zookeeper.apache.org/>`__, `etcd <https://github.com/coreos/etcd>`__ or `Consul <https://github.com/hashicorp/consul>`__. Database engineers, DBAs, DevOps engineers, and SREs who are looking to quickly deploy HA PostgreSQL in the datacenter—or anywhere else—will hopefully find it useful.\n\nWe call Patroni a \"template\" because it is far from being a one-size-fits-all or plug-and-play replication system. It will have its own caveats. Use wisely.\n\n.. contents::\n    :local:\n    :depth: 1\n    :backlinks: none\n\n==============\nHow Patroni Works\n==============\n\nPatroni originated as a fork of `Governor <https://github.com/compose/governor>`__, the project from Compose. It includes plenty of new features. \n\nFor an example of a Docker-based deployment with Patroni, see `Spilo <https://github.com/zalando/spilo>`__, currently in use at Zalando.\n\nFor additional background info, see:\n\n* `PostgreSQL HA with Kubernetes and Patroni <https://www.youtube.com/watch?v=iruaCgeG7qs>`__, talk by Josh Berkus at KubeCon 2016 (video)\n* `Feb. 2016 Zalando Tech blog post <https://tech.zalando.de/blog/zalandos-patroni-a-template-for-high-availability-postgresql/>`__\n\n===================\nRunning the service\n===================\nThe docker container has a number of environment variables that are available for use:\nMost can be seen in the Dockerfile, the most common are described below\n- SYNCHRONOUS - set to on to make replication synchronous\n- ADMINUSER - the main admin user for the database\n- ADMINPASS - the password for the admin user\n- ETCD_TTL - the period before a postgres master election occurs after the current master dies\n- ETCD_TIMEOUT - the period before the call to etcd times out, this is described as a string eg. \"2s - 2 seconds, 1m - 1 minute\"\n\nExample usage:\n```\ndocker run -t -i -e ADMINUSER=\"postgres\" -e ADMINPASS=\"password\" patroni-dev --etcd=192.168.99.100\n```\n\n================\nDevelopment Status\n================\n\nPatroni is in active development and accepts contributions. See our `Contributing <https://github.com/zalando/patroni/blob/master/README.rst#contributing>`__ section below for more details. \n\n===========================\nTechnical Requirements/Installation\n===========================\n\n**For Mac**\n\nTo install requirements on a Mac, run the following:\n\n::\n\n    brew install postgresql etcd haproxy libyaml python\n    pip install psycopg2 pyyaml\n\n===================\nRunning and Configuring\n===================\n\nTo get started, do the following from different terminals:\n::\n\n    > etcd --data-dir=data/etcd\n    > ./patroni.py postgres0.yml\n    > ./patroni.py postgres1.yml\n\nYou will then see a high-availability cluster start up. Test different settings in the YAML files to see how the cluster’s behavior changes. Kill some of the components to see how the system behaves.\n\nAdd more ``postgres*.yml`` files to create an even larger cluster.\n\nPatroni provides an `HAProxy <http://www.haproxy.org/>`__ configuration, which will give your application a single endpoint for connecting to the cluster's leader. To configure,\nrun:\n\n::\n\n    > haproxy -f haproxy.cfg\n\n::\n\n    > psql --host 127.0.0.1 --port 5000 postgres\n\n===============\nYAML Configuration\n===============\n\nGo `here <https://github.com/zalando/patroni/blob/master/SETTINGS.rst>`__ for comprehensive information about settings for etcd, consul, and ZooKeeper. And for an example, see `postgres0.yml <https://github.com/zalando/patroni/blob/master/postgres0.yml>`__. \n\n===============\nReplication Choices\n===============\n\nPatroni uses Postgres' streaming replication, which is asynchronous by default. For more information, see the `Postgres documentation on streaming replication <http://www.postgresql.org/docs/current/static/warm-standby.html#STREAMING-REPLICATION>`__.\n\nPatroni's asynchronous replication configuration allows for ``maximum_lag_on_failover`` settings. This setting ensures failover will not occur if a follower is more than a certain number of bytes behind the follower. This setting should be increased or decreased based on business requirements.\n\nWhen asynchronous replication is not optimal for your use case, investigate Postgres's `synchronous replication <http://www.postgresql.org/docs/current/static/warm-standby.html#SYNCHRONOUS-REPLICATION>`__. Synchronous replication ensures consistency across a cluster by confirming that writes are written to a secondary before returning to the connecting client with a success. The cost of synchronous replication: reduced throughput on writes. This throughput will be entirely based on network performance. \n\nIn hosted datacenter environments (like AWS, Rackspace, or any network you do not control), synchronous replication significantly increases the variability of write performance. If followers become inaccessible from the leader, the leader effectively becomes read-only.\n\nTo enable a simple synchronous replication test, add the follow lines to the ``parameters`` section of your YAML configuration files:\n\n.. code:: YAML\n\n        synchronous_commit: \"on\"\n        synchronous_standby_names: \"*\"\n\nWhen using synchronous replication, use at least three Postgres data nodes to ensure write availability if one host fails.\n\nChoosing your replication schema is dependent on your business considerations. Investigate both async and sync replication, as well as other HA solutions, to determine which solution is best for you.\n\n===============================\nApplications Should Not Use Superusers\n===============================\n\nWhen connecting from an application, always use a non-superuser. Patroni requires access to the database to function properly. By using a superuser from an application, you can potentially use the entire connection pool, including the connections reserved for superusers, with the ``superuser_reserved_connections`` setting. If Patroni cannot access the Primary because the connection pool is full, behavior will be undesirable.\n\n================\nContributing\n================\nPatroni accepts contributions from the open-source community; see the `Issues Tracker <https://github.com/zalando/patroni/issues>`__ for current needs. \n\nBefore making a contribution, please let us know by posting a comment to the relevant issue. \nIf you would like to propose a new feature, please first file a new issue explaining the feature you’d like to create.\n\n.. |Build Status| image:: https://travis-ci.org/zalando/patroni.svg?branch=master\n   :target: https://travis-ci.org/zalando/patroni\n.. |Coverage Status| image:: https://coveralls.io/repos/zalando/patroni/badge.svg?branch=master\n   :target: https://coveralls.io/r/zalando/patroni?branch=master\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/opensource-by-default","private":false,"url":"https://github.com/UKHomeOffice/opensource-by-default","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# opensource-by-default","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-neo4j","private":false,"url":"https://github.com/UKHomeOffice/docker-neo4j","license":null,"readme":"## Running Clustered Neo4j on Kubernetes.\n\n#### Cluster the Nodes\n\nOnce you've decided how many nodes you want to have then first create your services for each of your nodes to join the cluster like so.\n\n```yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: neo4j-<cluster-number>\n  name: neo4j-<cluster-number>\nspec:\n  ports:\n    -\n      name: cluster\n      port: 5001\n      targetPort: 5001\n    -\n      name: transaction\n      port: 6001\n      targetPort: 6001\n  selector:\n    name: neo4j-<cluster-number>\n```\n\nThis will mean that each pod will have their own static ip.\n\nThen from there you can spin up your pods. \n\n```yaml\napiVersion: v1\nkind: ReplicationController\nmetadata:\n  labels:\n    app: neo4j-<cluster-number>\n  name: neo4j-<cluster-number>\nspec:\n  replicas: 1\n  selector:\n    name: neo4j-<cluster-number>\n  template:\n    metadata:\n      labels:\n        name: neo4j-<cluster-number>\n        app: neo4j-<cluster-number>\n    spec:\n      containers:\n        -\n          imagePullPolicy: Always\n          image: neo4j:3.0.2-enterprise\n          name: neo4j-<cluster-number>\n          resources:\n            limits:\n              memory: \"2G\"\n              cpu: \"500m\"\n          ports:\n          - containerPort: 7474\n            name: \"http\"\n          - containerPort: 5001\n            name: \"cluster\"\n          - containerPort: 6001\n            name: \"transaction\"\n          env:\n          - name: \"NEO4J_dbms_mode\"\n            value: \"HA\"\n          - name: NEO4J_ha_host_coordination\n            value: 0.0.0.0:5001\n          - name: NEO4J_ha_host_data\n            value: neo4j-1:6001\n          - name: \"NEO4J_HA_ADDRESS\"\n            value: \"0.0.0.0\"\n          - name: \"NEO4J_ha_serverId\"\n            value: \"<cluster-number>\"\n          - name: \"NEO4J_ha_initialHosts\"\n            value: \"neo4j-1:5001,neo4j-2:5001,neo4j-3:5001\"\n      restartPolicy: Always\n```\n\n\nNote the environment variables:\n\n* `NEO4J_HA_ADDRESS` must be 0.0.0.0 to allow the pods ip's in as they can be any ip. \n* `NEO4J_ha_initialHosts` a comma separated list of your nodes using the service ips, or dns names if you have them.\n* `NEO4J_ha_serverId` id of a server must be unique within a cluster.\n* `NEO4J_ha_host_coordination` same as `NEO4J_HA_ADDRESS` but with the port added.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/firearms-prototype","private":false,"url":"https://github.com/UKHomeOffice/firearms-prototype","license":null,"readme":"# Unofficial Static Government Digital Prototype kit\nSimple prototyping kit for GOV.UK service designers. This kit does not contain all of the functionality of the express kit, however, you will not need node.js or git experience, and you will not need to run anything in command line.\n\nCreated internally at Home Office Digital - not supported, not created by GDS, supplied as-is\n\nThis is not finished! It's Alpha Alpha!\n\n## Getting Started\n\n#### You will need:\n- A mac (sorry, this isn't tested on PCs yet)\n\n#### Nice to have:\n- _Some_ HTML knowledge\n\nFirst, either:\n\n- Download a zip of this repository from https://github.com/tjharrop/simple_prototype_kit/archive/master.zip and unzip it to your computer\n\n*- OR -*\n\n- If you're comfortable with git, either clone the repo in the git desktop client or via command line (`git clone https://github.com/tjharrop/simple_prototype_kit.git`)\n\nOnce you have the folder on your computer, you will see the index.html and example files. The example files contain demonstrations of various pieces of functionality. index.html has buttons to guide you through each page. Full instructions on each demo to follow.\n\n## Running the thing\n\nThere are 2 options here. You can either open index.html in Safari or Firefox directly or you can run a small script which will allow you to use chrome.\n\n#### Using Safari or Firefox\n1. Cmd + click index.html in Finder\n2. Open With\n3. Select Safari or Firefox\n\n#### Using Chrome (recommended)\n\n_You may see an unauthorised developer warning message. If you do, cmd + click and click \"open\" instead (thanks Joe)_\n\n1. Double click run.command (see above if you get a warning)\n2. In chrome, go to http://localhost:1987/index.html\n\n## Working on it\n\nA good place to start in index.html.\n\n1. Open this in your chosen HTML editor (if you don't have one, see https://atom.io/).\n2. Hack away! Change some content, add some buttons or form fields according to your design\n3. Press refresh in your browser.\n\n#### Changing the service name\n\nThere is a file called service-name.txt which looks like this:\n\n```Digital Service Name```\n\n1. Open it\n2. Change it to your service name\n3. Save it\n\n#TODO\n\n1. Full instructions on the examples pages\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-integration-stub","private":false,"url":"https://github.com/UKHomeOffice/evw-integration-stub","license":null,"readme":"# EVW Integration Stub\n\nA stub service to mock RESTful communication between Electronic Visa Waiver Customer and Caseworker applications. Built using [Dyson](https://www.npmjs.com/package/dyson)\n\n[![npm version](https://img.shields.io/npm/v/evw-integration-stub.svg?style=flat-square)](https://www.npmjs.com/package/evw-integration-stub)\n\n## Run\n\n```\nINTEGRATION_SERVICE_URL={$someURL} ./node_modules/.bin/evw-interation-stub\n```","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hof-template-partials","private":false,"url":"https://github.com/UKHomeOffice/hof-template-partials","license":null,"readme":"# HOF-template-partials\n\nHome Office Forms template partials is a collection of mustache partials commonly used in HOF applications.  It also contains a collection of i18n translations used within the template partials. All contents are designed to be extended in your individual applications.\n\n## installation\n\n```bash\n$ npm install --save hof-template-partials\n```\n\n## Usage\n\n### Template partials\n\n#### Standalone\n\nTemplate partials can be used by adding the route to the views directory to your express application views setting. You will need to be using the HTML view engine with Hogan and Mustache.\n\n```js\nvar app = require('express')();\n\napp.set('view engine', 'html');\napp.set('views', [\n  // your application shared views\n  path.resolve(__dirname, './path/to/views'),\n  // the module exports paths to views and translations directories\n  require('hof-template-partials').views\n]);\n```\n\nThe views are now available when calling `res.render('view-name')` from express.\n\n#### HOF Application\n\nWhen used in a hof application in conjunction with [express-partial-templates](https://github.com/UKHomeOffice/express-partial-templates) the contents of the views directory are added to `res.locals.partials`. These are added right to left so conflicting views are resolved from the left-most directory.\n\n```js\nvar app = require('express')();\n\napp.set('view engine', 'html');\napp.set('views', [\n  path.resolve(__dirname, './path/to/views'),\n  require('hof-template-partials').views\n]);\napp.use(require('express-partial-templates')(app));\n\napp.use(function (req, res, next) {\n  // res.locals.partials contains all views from the views dir in this repo\n  // which are extended by any local views in ./path/to/views\n  next();\n});\n```\n\n### Translations\n\n#### Standalone\n\nThe provided translations are designed to be used in conjunction with a translations library such as [i18n-future](https://github.com/lennym/i18n-future). The source files are compiled automatically post-install. If you need to re-compile run the following:\n\n```bash\n$ npm run transpile\n```\n\nThe compiled translations file can be found at `hof-template-partials/translations/{lang}/default.json.`\n\nTo use with i18n-future:\n\napp.js\n```js\nvar i18n = require('i18n-future')({\n  path: require('hof-template-partials').translations\n});\n\ni18n.on('ready', function () {\n  var lookedup = i18n.translate('key');\n});\n```\n\n#### HOF Application\n\nThe provided translations can be combined with your application shared and route specific translations by using [hof-transpiler](https://github.com/UKHomeOffice/hof-transpiler). You can run the following script:\n\n```bash\n$ npm install hof-transpiler\n$ ./node_modules/.bin/hof-transpiler path/to/translations/src -w --shared path/to/shared/translations/src --shared node_modules/hof-template-partials/translations/src\n```\n\nor add the following to `scripts` in `package.json`\n```json\n\"scripts\": {\n  \"transpile\": \"hof-transpiler path/to/translations/src -w --shared path/to/shared/translations/src --shared node_modules/hof-template-partials/translations/src\"\n}\n```\n\nand run with:\n\n```bash\n$ npm run transpile\n```\n\nThis will extend from right to left so any duplicate keys will be overwritten by the left-most source.\n\n### Rendering Terms & Conditions and Cookies\n\nThese templates are scoped to their respective translation files so you would render them in the following way:\n\napp.js\n```js\napp.get('/terms', function (req, res, next) {\n  i18n.on('ready', function () {\n    // express will look for a terms.html template in the\n    // directories defined earlier\n    res.render('terms', i18n.translate('terms'))\n  });\n});\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hof-boilerplate","private":false,"url":"https://github.com/UKHomeOffice/hof-boilerplate","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"HOF-Boilerplate\n---------------\n\nBoilerplate is a template for HOF services. Copy the repository, update the package and configure the forms.\n\n## Quick start\n\nGet it `git clone git@github.com:UKHomeOffice/hof-boilerplate.git`\n\nOpen `package.json` and edit the `name` and `description` and `repository` fields.\n\n__Hint__: Those fields need to describe elements of the service you are building.\n\nInstall everything: `npm install`\n\nOpen `app.js` in you editor of choice and start configuring your service.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/centralteam_ci","private":false,"url":"https://github.com/UKHomeOffice/centralteam_ci","license":null,"readme":"# centralteam_ci\nLooking at CI solutions centrally as a strategic goal for HO\n\n## Open source\n\n* [Buildbot](http://buildbot.net/) - Python-based toolkit for continuous integration.\n* [Drone](https://github.com/drone/drone) - Continuous integration server built on Docker and configured using YAML files.\n* [Go](http://www.go.cd/) - Open source continuous delivery server.\n* [Jenkins](http://jenkins-ci.org/) - An extendable open source continuous integration server.\n* [Concourse](https://concourse.ci) Rather than a myriad of checkboxes, pipelines are defined as a single declarative config file\n* [ElectricFlow](http://electric-cloud.com/products/electricflow/)  ElectricFlow/ElectricCommander gives distributed teams shared control and visibility into infrastructure, tool chains and processes. It accelerates and automates the software delivery process to enable agility, predictability and security across many build-test-deploy pipelines\n* [rundesk](http://rundeck.org) Rundeck features fine-grain access controls, a built-in job scheduler, and the ability to define workflows that dispatch commands and scripts to your nodes.\n* [strider](http://stridercd.com) Strider is an Open Source Continuous Deployment / Continuous Integration platform. It is written in Node.JS / JavaScript and uses MongoDB as a backing store.\n\n## Services\n\n* [Buildkite](https://buildkite.io/)\n* [CircleCI](https://circleci.com/)\n* [Cloudbees](http://www.cloudbees.com/)\n* [Codeship](https://codeship.io/)\n* [Drone.io](https://drone.io/)\n* [Shippable](http://www.shippable.com/)\n* [Snap-CI](https://www.snap-ci.com/)\n* [Travis-CI](https://travis-ci.org/)\n* [Wrecker](https://app.wercker.com/)\n* [Solano CI](https://www.solanolabs.com)  Faster Continuous Integration and Deployment with patented auto-parallelization. See results 10 to 80x faster. 14-day free trial. No credit card required.\n* [Teamcity](http://www.jetbrains.com/teamcity/index.html)  Ready to work, extensible\n* [bamboo](https://www.atlassian.com/software/bamboo)  Bamboo does more than just run builds and tests. It connects issues, commits, test results, and deploys so the whole picture is available to your entire product team and developer-friendly build server out of the box\n* [quickbuild](http://www.pmease.com/)  GitHub integration. Perforce shelve support. Coverity report rendering. Subversion external change retrieval. Resource access info. Display reasons for waiting steps. Custom build and request columns. Favorite dash board list. Inheritable environment variables.And much more...\n* [pulse](http://zutubi.com) no free version.\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx","license":null,"readme":"# docker-nginx\nMinimal bare nginx docker image\n\n\n### Configuration\nThere are two ways to pass nginx configuration.\n\n#### Config block via env variable\nRead in a config block preserving new lines, etc.\n\n```\nread -r -d '' NGINX_CONFIG <<'EOF'\nuser nginx;\nworker_processes auto;\nerror_log /dev/stderr error;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    server {\n        listen       80 default_server;\n        server_name  _;\n\n        location / {\n            default_type text/plain;\n            return 200 \"Everything is OK.\\n\";\n        }\n    }\n}\nEOF\n```\n\n```\nexport NGINX_CONFIG\ndocker run -ti --rm -e NGINX_CONFIG quay.io/ukhomeofficedigital/nginx:v0.0.1\n```\n\n#### Config file via env variable\nYou can provide a config file inside a container instead.\n\n```\ndocker run -ti --rm -e NGINX_CONFIG_FILE=/config/nginx.conf quay.io/ukhomeofficedigital/nginx:v0.0.1\n```\n\n\n### Extra Configs\n\nExtra config snippets can be found in [conf.d](conf.d) directory. You can\ninclude specific files or all by adding the following to the main `nginx.conf`\nfile:\n\n```\ninclude /etc/nginx/conf.d/logging.conf;\n\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drt-passenger-splits","private":false,"url":"https://github.com/UKHomeOffice/drt-passenger-splits","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"Voygage Passenger Splits\n====================\n\nService reads data from Advance Passenger Information (API) which is posted to an S3 bucket,\nperforms some data crunching, and then provides a rest query endpoint so that other parts of DRT can ask\n\n?) What is the paxSplit (passenger desk distribution) for flight BA123 @  2016-06-03 14:45 (i.e.\n  http://service:port/flight-pax-splits/port-LHR/BA123/scheduled-arrival-time-20160603T1445\n\n?) What are the paxSplits for flights a port, between 20160612T1231 and 201607T1830 (i.e.\n  http://service:port/flight-pax-splits/port-LHR?from=20160612T1231&to=2016071830\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-postgres-exec","private":false,"url":"https://github.com/UKHomeOffice/docker-postgres-exec","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Postgres executor\n\nDocker container for initialising and manipulating external postgres\ndatabases by executing postgres SQL scripts.\n\n## Usage\n\nTo use this image you will need to either mount in your SQL scripts when\nyou run this image or you will need to derive a new image from this one\nand copy your scripts across in your `Dockerfile`.\n\nThe scripts should be placed in `/docker-entrypoint-initdb.d/`.\n\nAn example of executing an image built in this way can be found below:\n\n```\ndocker run \\\n       -e POSTGRES_HOST=your-postgres-server \\\n       -e POSTGRES_DB=your-db-name \\\n       -e POSTGRES_USER=your-postgres-user \\\n       -e POSTGRES_PASSWORD=your-password \\\n       your-image\n```\n\nThe login credentials can also be mounted into the image rather than\nprovided as environment variables.\n\n### Environment Variables\n\nThe variables and the defaults are shown below.\n\n* `POSTGRES_HOST` The host to connect to.\n* `POSTGRES_PORT=5432` The port to connect to.\n* `POSTGRES_DB_SECRET=/etc/postgres/db` The location in which to look for the database name.\n* `POSTGRES_USER_SECRET=/etc/postgres/user` The location in which to look for the postgres username.\n* `POSTGRES_PASSWORD_SECRET=/etc/postgres/password` The location in which to look for the postgres password.\n* `POSTGRES_DB` The database name (overrides the secret).\n* `POSTGRES_USER` The postgres username (overrides the secret).\n* `POSTGRES_PASSWORD` The postgres password (overrides the secret).\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to discuss\nit in an issue first.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions\navailable, see the [tags on this repository](https://github.com/UKHomeOffice/docker-postgres-exec/tags).\n\n## Authors\n\n* **Daniel Martin** - *Initial work* - [Daniel A.C. Martin](https://github.com/daniel-ac-martin)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-taurus","private":false,"url":"https://github.com/UKHomeOffice/docker-taurus","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Gradle\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-taurus.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-taurus)\n\nBlazemeter Tuarus in a docker image, the version of the image / tag will match the version of Taurus and SemVer. \n\nFor more information on this please refer to: [Docker Tuarus](https://github.com/Blazemeter/taurus)\n\n## Getting Started\n\nThis is to provide the performance testing tool as part of a CI pipeline / local delivery development pipeline\nfor a service. It's to make sure that CI can operate in a complete containerised world.\n\nBlazemeter test yaml data is mounted into the container under /code where that becomes the WORKDIR and then bzt is run\nfrom that directory on the code\n\n### Environment Variables\n\n* `TAURUS_VERSION` - the version of Taurus BZT to pip install\n\n### Volumes\n\n* `/bzt` - This is where the blazmeter tests are mounted and is also the WORKDIR\n\n### Usage\n\ndocker run -v \"${PWD}\":/bzt quay.io/ukhomeofficedigital/taurus:v0.8.3\n\n## Contributing\n\nContributions are most certainly welcome. If you want to introduce a breaking\nchange or any other major change, please raise an issue first to discuss.\n\n## License\n\n[MIT](LICENSE)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-tuf","private":false,"url":"https://github.com/UKHomeOffice/docker-tuf","license":null,"readme":"# docker-tuf\nDocker The Update Framework\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-python","private":false,"url":"https://github.com/UKHomeOffice/docker-python","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Docker Gradle\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/docker-python.svg?branch=master)](https://travis-ci.org/UKHomeOffice/docker-python)\n\nThis is a docker python image with pip installed\n\n## Getting Started\n\nThis is a base image for python, this can be used by python projects as the base image\n\n### Environment Variables\n\n### Volumes\n\n### Other\n\n## Contributing\n\nContributions are most certainly welcome. If you want to introduce a breaking\nchange or any other major change, please raise an issue first to discuss.\n\n## License\n\n[MIT](LICENSE)\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-toolbox","private":false,"url":"https://github.com/UKHomeOffice/docker-toolbox","license":null,"readme":"# Docker Toolbox\n\n\n## Summary\n\nThis is a simple toolbox of tools for use within docker including sysdig.\n\n\n\n## Usage\n\nTo build this container or run it in your local environment use the Makefile by running:\n\n```\nmake build\n```\n\nor to run it do:\n\n```\nmake shell\n```\n\n\nTo run this container on a CoreOS node then you need to mount specific paths into the container and run it under priviledged mode to allow Sysdig to work correctly. This can be done with the following command:\n\n```\ndocker run -it --rm -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro --privileged --name NAME quay.io/ukhomeofficedigital/toolbox\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hmpo-enquiries","private":false,"url":"https://github.com/UKHomeOffice/hmpo-enquiries","license":null,"readme":"# hmpo-enquiries\nA form for HMPO Passport enquiries\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-acceptance","private":false,"url":"https://github.com/UKHomeOffice/pttg-acceptance","license":null,"readme":"pttg-acceptance\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/passports-prototype","private":false,"url":"https://github.com/UKHomeOffice/passports-prototype","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-prototype\n\nPassport journeys\n\n# Setup\n\nClone/download this repo and run `npm install` then `npm start`.\n\nVisit <a href=\"http://localhost:3001/\" target=\"_blank\">http://localhost:3000/</a> in your browser.\n\n# Development\n\nWatch for JS and Sass changes and automatically compile using `npm run watch:js` and `npm run watch:sass`.\n\n# Redis\n\nWhen Redis is running on localhost:6379 (standard settings) your session data won't be lost during app restarts. [Download Redis](http://redis.io/download).\n\n# View the prototype online\n\n<a href=\"http://passports-prototype.herokuapp.com/\" target=\"_blank\">http://passports-prototype.herokuapp.com/</a>\n\nIt may take a few seconds to load.\n\n# Deploying to Heroku\n\nGet yourself a Heroku account and get yourself added to the prototype app.\n\nAdd Heroku remote (that you will push to, to deploy) `heroku git:remote -a passports-prototype`\n\nUse `git push heroku master` to deploy the master branch. To deploy another branch use `git push heroku <branch-name>:master`, where <branch-name> is the branch you want to push.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-kubectl","private":false,"url":"https://github.com/UKHomeOffice/docker-kubectl","license":null,"readme":"# kubectl\nKubernetes kubectl\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-ip-fm-ui","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-ip-fm-ui","license":null,"readme":"# pttg-ip-fm-ui\nProving Things - Family Migration Income UI\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-angular","private":false,"url":"https://github.com/UKHomeOffice/pttg-angular","license":null,"readme":"# pttg-angular\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/sysdig-agent","private":false,"url":"https://github.com/UKHomeOffice/sysdig-agent","license":null,"readme":"# sysdig-agent\n\n---\n\n# local development\n\n## creating the local sysdig image\nTo build the image locally on your development laptop run.\n\nPay attention to the `VERSION` variable inside the `Makefile`, if you care about that version variable.\n```\nmake build\n```\n\n## update the image Version\nThe draios upstream dev image on the docker hub isn't properly tagged.\n\nWe must tag our version of the image to know what version of sysdig gets deployed in different environments.\n\nTo find out the version of sysdig running inside the dev image from upstream:\n\n- run the upstream container in interactive mode on your laptop\n```\nmake interactive-upstream\n```\n- run the `apt` command commented out in the `Makefile`, in the interactive-upstream task, to grab the version\n- grab the version and replace it in the `.drone.yml` file ( additional you can replace it in the `Makefile` too but that isn't strictly necessary )\n- commit and push and drone will build the image for you and tag it accordingly with the version of the sysdig agent and the git shasum.\n  - example upstream HOD sysdig-agent versioned image: `quay.io/ukhomeofficedigital/sysdig-agent:v0.99.2214dev-f423587`\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-scala-sbt","private":false,"url":"https://github.com/UKHomeOffice/docker-scala-sbt","license":null,"readme":"# docker-scala-sbt\n\nEnables build of Scala apps.\n\nThis has:\n- sbt\n- activator\n- OpenJDK\n- sonar-scanner\n\n### Usage\n\nThis image is to be used to build your scala apps. Below in an example of how you would do this in drone with caching enabled.\n\nContents of .drone.yml:\n```\npipeline:\n  drone_s3_cache_pull:\n     image: quay.io/ukhomeofficedigital/drone-s3cache:v0.1.0\n     drone_s3_cache_mode: \"pull\"\n\n  build:\n    commands:\n       - \"/root/entrypoint.sh 'sbt clean update test assembly'\"\n    image: quay.io/ukhomeofficedigital/scala-sbt:v0.2.0\n    when:\n      event:\n        - push\n        - pull_request\n\n  drone_s3_cache_push:\n    image: quay.io/ukhomeofficedigital/drone-s3cache:v0.1.0\n    drone_s3_cache_folders:\n      - .ivy2\n    drone_s3_cache_mode: \"push\"\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/so-acceptance","private":false,"url":"https://github.com/UKHomeOffice/so-acceptance","license":{"key":"gpl-2.0","name":"GNU General Public License v2.0","spdxId":"GPL-2.0","url":"https://api.github.com/licenses/gpl-2.0","featured":false},"readme":"# SO Acceptance\n\nSO Acceptance is a NodeJS acceptance testing framework build on top of [CodeceptJS](https://github.com/Codeception/CodeceptJS) and is designed to be used in SO applications\n\n## Installation\n\n```bash\n$ npm install so-acceptance --save-dev\n```\n\n## Application configuration\n\n### Simple usage\n\n#### Setup\n\nFor quickstart usage you can simply npm install the library and add the following script to your package.json.\n> note - this assumes you are using NPM@3. If you are using a previous version of NPM you will need to point to the relative path of the codeceptjs exectuable. This will be located at ./node_modules/so-acceptance/.bin/codeceptjs\n\npackage.json\n```json\n\"scripts\": {\n  \"test:acceptance\": \"codeceptjs run ./node_modules/so-acceptance --steps\"\n}\n```\n\nThe root of your acceptance tests will need to be located in a folder called `acceptance_tests` in the root of your app, features are located in a subdirectory named `features`.\n\n```\n<service name>\n  |__acceptance_tests/\n       |__features/\n          |__your tests go here.\n```\n\n#### Running\n\n```bash\n$ npm run test:acceptance\n```\n\n### Session Mocking\n\n#### Setup\n\nSO Acceptance comes with session mocking so you are able to test steps independently of one another. This assumes you are using  [hof-bootstrap](https://github.com/UKHomeOffice/hof-bootstrap/) and redis for session storage.\n\n#### API\n\nThe `I` actor in CodeceptJS has been extended with the following session manipulation methods:\n\n* `getSession(route_name)`: returns the session data for the given route_name (defined in bootstrap config).\n* `setSessionData(route_name, {data})`: sets the key: value pairs in data to session for given route_name.\n* `setSessionSteps(route_name, [steps])`: sets the visited steps to session for given route name.\n\nAs these API methods all return promises, they should be used within generator functions to ensure code execution is paused while the session is manipulated:\n\n```js\nScenario('I set session steps', function *(I) {\n  yield I.setSessionSteps('journey-name', ['/', '/step-1']);\n  I.amOnPage('/step-2');\n});\n```\n\n### Extensions to the actor (`I`)\n\nThe following methods have been added to `I`:\n\n* `submitForm()`: clicks the submit button `input[type=\"submit\"]`\n* `visitPage(page, [journey], [prereqs])`: visits `'/'`, then page, prepending journey if present, and setting prereq steps. Page and Prereqs are expected to be [PageObjects](https://github.com/Codeception/CodeceptJS/blob/master/docs/pageobjects.md) with a `url` property.\n* `seeErrors(errors)`: accepts either an array of keys or a single key, and checks for validation errors related to the element.\n* `seeElements(elements)`: accepts either an array of selectors or a single selector and checks all elements are present on the page.\n* `refreshPage()`: refreshes the page - async, should be called within a generator.\n* `seeEach(texts)`: accepts an array of text and checks all texts are present on the page`.\n\n### Customisation\n\nYou can add any customisation options in `acceptance_tests/codecept.conf.js`. The default options are extended with overrides defined here.\n\ncodecept.conf.js\n```js\nvar path = require('path');\n\nmodule.exports = {\n  name: 'name of your app',\n  include: {\n    customPage: path.resolve(__dirname, './pages/custom.js')\n  }\n}\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drone-trigger","private":false,"url":"https://github.com/UKHomeOffice/drone-trigger","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# drone-trigger\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/drone-trigger.svg?branch=master)](https://travis-ci.org/UKHomeOffice/drone-trigger) [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/drone-trigger/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/drone-trigger)\n\nDrone plugin for triggering downstream builds with custom parameters\n\nThis plugin allows for triggering remote or local builds. You can specify\nvarious filters, like `tag`, `branch`, `number`, `commit`, etc. It will find an\nexisting build which matches specified filters and trigger the build restart or\ndeployment, in addition, custom parameters can also be set.\n\n## Build\n\nDependencies are located in the vendor directory and managed using\n[govendor](https://github.com/kardianos/govendor) cli tool.\n\n```\ngo test -v -cover\n\nmkdir -p bin\nGOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags \"-X main.Version=dev+git\" -o bin/drone-trigger_linux_amd64\n```\n\n## Configuration\n\nThe following parameters are used to configure the plugin:\n\n- `drone_server`: full URL to the drone server, it can be a remote drone server as well\n- `drone_token` or `${DRONE_TOKEN}`: drone user secret token. Just create a `DRONE_TOKEN` secret, the plugin will pick it up\n- `repo`: git repository in owner/name format\n- `status`: build status filter, default is `success`\n- `event`: build event type filter. If unset, no event filter will be done\n- `deploy_to`: sends a deployment trigger, which also sets a `DRONE_DEPLOY_TO` environment variable in the target job\n- `params`: list of custom parameters that will be passed into a build environment as environment variables\n- `fork`: create a new build and a build number instead of restarting an existing build. Please note that a deployment trigger always spawns a new build\n- `verbose`: displays a more verbose output\n\nOnly one filter from the below list can be specified.\n- `number`: filter by specific build number\n- `commit`: filter by long commit sha\n- `branch`: filter by branch name\n- `tag`: filter by tag name. Please note that event type will be `tag`.\n\n\n### Drone configuration\n\n```yaml\npipeline:\n  build:\n    image: golang\n    commands:\n      - go get -v\n      - ...\n\n  docker_build:\n    image: docker:1.11\n    commands:\n      - docker login ...\n      - docker build -t foo/bar:${DRONE_COMMIT_SHA} .\n      - docker push foo/bar:${DRONE_COMMIT_SHA}\n\n  trigger_deploy:\n    image: quay.io/ukhomeofficedigital/drone-trigger:latest\n    drone_server: https://drone.example.com\n    repo: owner/go-deploy-scripts\n    branch: master\n    deploy_to: prod\n    params: \"IMAGE_NAME=foo/bar:${DRONE_COMMIT_SHA},APP_ID=123\"\n```\n\n\nSince drone-trigger can be run as a standalone tool, configuration can be\nprovided via cli flags and arguments as well as environment variables.\n\n```bash\ndrone-trigger --help\nNAME:\n   drone-trigger - trigger drone builds or deployments\n\nUSAGE:\n   drone-trigger_linux_amd64 [global options] command [command options] [arguments...]\n\nCOMMANDS:\n     help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --verbose                      verbose output [$VERBOSE, $PLUGIN_VERBOSE]\n   --fork                         fork an existing build - drone assigns a new build number [$FORK, $PLUGIN_FORK]\n   --drone-server URL, -s URL     drone server URL [$DRONE_SERVER, $PLUGIN_DRONE_SERVER]\n   --drone-token TOKEN, -t TOKEN  drone auth TOKEN [$DRONE_TOKEN, $PLUGIN_DRONE_TOKEN]\n   --repo REPO, -r REPO           REPO, eg. foo/bar [$REPO, $PLUGIN_REPO]\n   --commit value, -c value       filter by commit sha [$FILTER_COMMIT, $PLUGIN_COMMIT]\n   --tag value                    filter by tag [$FILTER_TAG, $PLUGIN_TAG]\n   --branch value, -b value       filter by branch [$FILTER_BRANCH, $PLUGIN_BRANCH]\n   --status value                 filter by build status (default: \"success\") [$FILTER_STATUS, $PLUGIN_STATUS]\n   --number value                 filter by build number (default: 0) [$FILTER_NUMBER, $PLUGIN_NUMBER]\n   --event value                  filter by trigger event [$FILTER_EVENT, $PLUGIN_EVENT]\n   --deploy-to value, -d value    environment to deploy to, if set a deployment event will be triggered [$DEPLOY_TO, $PLUGIN_DEPLOY_TO]\n   --param value, -p value        custom parameters to include in the trigger in KEY=value format [$PARAMS, $PLUGIN_PARAMS]\n   --help, -h                     show help\n   --version, -v                  print the version\n\n```\n\n## Release process\n\nPush / Merge to master will produce a docker\n[image](https://quay.io/repository/ukhomeofficedigital/drone-trigger?tab=tags) with a tag `latest`.\n\nTo create a new release, just create a new tag off master.\n\n## Contributing\n\nWe welcome pull requests. Please check issues and existing PRs before submitting a patch.\n\n## Author\n\nVaidas Jablonskis [vaijab](https://github.com/vaijab)\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/court-flagging","private":false,"url":"https://github.com/UKHomeOffice/court-flagging","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"<<<<<<< HEAD\n# CFN (Court Flagging Notification)\n\n## Getting Started\n\n### Prerequisities\n\n- [Node.js](https://nodejs.org/en/) - Tested against LTS\n- NPM (installed with Node.js) - Works with versions 2 and 3.\n- [Redis server](http://redis.io/download) running on the default port\n\n### Up & Running\n\n```bash\n$ cd cfn\n$ npm install\n$ npm run dev\n```\n\nThen visit: [http://localhost:8080/](http://localhost:8080/)\n\n## Testing\n\n### Acceptance Tests\nWith the server running in development mode (`npm run dev`), start the acceptance tests:\n\n```bash\n$ npm run test:acceptance\n```\nPhantomjs is required to run the acceptance tests (`npm install phantomjs`), or alternatively, export `IN_BROWSER=true` to run the tests in Firefox.\n\n### Unit Tests\n```bash\n$ npm t\n```\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\n## License\n\nThis project is licensed under the GPLv2 License - see the [LICENSE.md](LICENSE.md) file for details\n=======\n# court-flagging\nWeb service for Court Flag Notifications\n>>>>>>> 85953f3c21d587096fbb21dfa64aa043b1625ed2\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and \nwelcoming community, we pledge to respect all people who contribute through reporting issues, \nposting feature requests, updating documentation, submitting pull requests or patches, and other \nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, \nregardless of level of experience, gender, gender identity and expression, sexual orientation, \ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, \ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By \nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently \napplying these principles to every aspect of managing this project. Project maintainers who do not \nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is \nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an \nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), \nversion 1.2.0, available at \n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/rtp-monitoring-metrics","private":false,"url":"https://github.com/UKHomeOffice/rtp-monitoring-metrics","license":null,"readme":"# RTP monitoring and metrics\n\nThis module is intended to be used with node.js web apps using Express. It exports an express router which provides useful endpoints.\n \n### Endpoints provided\n\nThe following endpoints are provided:\n\n##### GET `/metrics`\n\nThis will return metrics in the following JSON format, with HTTP 200:\n\n``` json\n{\n  \"cpu\": 5.5,\n  \"memory\": {\n    \"rss\": 92643328,\n    \"heapTotal\": 71131392,\n    \"heapUsed\": 40280776\n  }\n}\n```\n\n*Note: if an error occurs attempting to generate the metrics HTTP 500 will be returned with JSON containing the error*\n\n##### GET `/healthz`\n\nThis will check that a session store is available and return HTTP 200 all is ok. The JSON response will be in the following format:\n \n``` json\n{\n  \"app\": \"OK\",\n  \"session\": \"OK\"\n}\n```\n\nIf the request to the endpoint times out then the app is not alive. Also if there is not a session store available HTTP 500 will be returned and it will state \"unavailable\".\n\n##### GET `/readiness`\n\nThe readiness endpoint operates exactly the same as the `/healthz` endpoint.\n\n### How to use\n\n1. Add this module to your application using `npm install --save rtp-monitoring-metrics`\n2. Add the exported router to you app: `app.use(require('rtp-monitoring-metrics'));`\n\n### Additional configuration\n\nIf you would like to mount the middleware functions under a sub-route, you can do so using express out the box\n\n```\napp.use('/path-to-mount-at', require('rtp-monitoring-metrics'));\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-fs-ui","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-fs-ui","license":null,"readme":"# kube-pttg-fs-ui\nFinanical Status service UI\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-fs-stub","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-fs-stub","license":null,"readme":"## Proving Things - Income Barclays stub -  Kubernetes Resources\n\n### Kubernetes Deployment\n\nThis is the kubernetes deployment files for Proving Things Financial Status Barclays Stub\n\nrun deployment\n\n\t./scripts/deploy_kd\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kube-pttg-fs-api","private":false,"url":"https://github.com/UKHomeOffice/kube-pttg-fs-api","license":null,"readme":"## Proving Things - Income API -  Kubernetes Resources\n\n### Kubernetes Deployment\n\nThis is the kubernetes deployment files for Proving Things Financial Status API\n\nrun deployment\n\n\t./scripts/deploy_kd\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kd","private":false,"url":"https://github.com/UKHomeOffice/kd","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# kd - Kubernetes resources deployment tool\n\n[![Build Status](https://travis-ci.org/UKHomeOffice/kd.svg?branch=master)](https://travis-ci.org/UKHomeOffice/kd) [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/kd/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/kd)\n\nThis is a very minimalistic tool for deploying kubernetes resources.\n\n## Features\n\n- Go template engine support\n- Supports any kubernetes resource type\n- Polls deployment resources for completion\n\n## Running with Docker\nNote that kd can be run with docker, [check here for the latest image tags](https://quay.io/repository/ukhomeofficedigital/kd?tab=tags)\n\n```bash\ndocker run quay.io/ukhomeofficedigital/kd:latest --help\n```\n\n## Getting Started\n\nThe is only requirement and that is a kubectl binary in your `${PATH}`. You\ncan use the docker image or download the binary for your OS from\n[releases](https://github.com/UKHomeOffice/kd/releases) page.\n\nFirst, let's create a simple deployment template. Templating data comes from\nthe environment, so in this example we'll use `NGINX_IMAGE_TAG` environment\nvariable to set nginx image tag.\n\nCreate a `nginx-deployment.yaml` with the following content:\n\n```yaml\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 5\n  template:\n    metadata:\n      labels:\n        name: nginx\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:{{.NGINX_IMAGE_TAG}}\n          ports:\n            - containerPort: 80\n          resources:\n            limits:\n              cpu: \"0.1\"\n          livenessProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 10\n            timeoutSeconds: 1\n```\n\n```bash\n$ export NGINX_IMAGE_TAG=1.11-alpine\n$ kd --context=mykube --namespace=testing --file nginx-deployment.yaml\n[INFO] 2016/09/21 14:06:37 main.go:153: deploying deployment/nginx\n[INFO] 2016/09/21 14:06:38 main.go:157: deployment \"nginx\" submitted\n[INFO] 2016/09/21 14:06:41 main.go:194: deployment \"nginx\" in progress. Unavailable replicas: 5.\n[INFO] 2016/09/21 14:06:56 main.go:194: deployment \"nginx\" in progress. Unavailable replicas: 5.\n[INFO] 2016/09/21 14:07:11 main.go:190: deployment \"nginx\" is complete. Available replicas: 5\n```\n\nYou can fail an ongoing deployment if there's been a new deployment by adding `--fail-superseded` flag.\n\n## Configuration\n\nConfiguration can be provided via cli flags and arguments as well as\nenvironment variables.\n\n```bash\n$ kd --help\n\nNAME:\n   kd - simple kubernetes resources deployment tool\n\nUSAGE:\n   kd [global options] command [command options] [arguments...]\n   \nVERSION:\n   v0.2.0\n\nAUTHOR(S):\n   Vaidas Jablonskis <jablonskis@gmail.com> \n   \nCOMMANDS:\n     help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --debug                              debug output [$DEBUG, $PLUGIN_DEBUG]\n   --insecure-skip-tls-verify           if true, the server's certificate will not be checked for validity [$INSECURE_SKIP_TLS_VERIFY, $PLUGIN_INSECURE_SKIP_TLS_VERIFY]\n   --kube-server URL, -s URL            kubernetes api server URL [$KUBE_SERVER, $PLUGIN_KUBE_SERVER]\n   --kube-token TOKEN, -t TOKEN         kubernetes auth TOKEN [$KUBE_TOKEN, $PLUGIN_KUBE_TOKEN]\n   --context CONTEXT, -c CONTEXT        kube config CONTEXT [$KUBE_CONTEXT, $PLUGIN_CONTEXT]\n   --namespace NAMESPACE, -n NAMESPACE  kubernetes NAMESPACE [$KUBE_NAMESPACE, $PLUGIN_KUBE_NAMESPACE]\n   --fail-superseded                    fail deployment if it has been superseded by another deployment. WARNING: there are some bugs in kubernetes. [$FAIL_SUPERSEDED, $PLUGIN_FAIL_SUPERSEDED]\n   --file value, -f value               list of kubernetes resources FILE [$FILES, $PLUGIN_FILES]\n   --retries value                      number of deployment status check retries (default: 10) [$RETRIES, $PLUGIN_RETRIES]\n   --check-interval value               deployment status check interval (default: 15s) [$CHECK_INTERVAL, $PLUGIN_CHECK_INTERVAL]\n   --help, -h                           show help\n   --version, -v                        print the version\n```\n\n\n## Build\n\nDependencies are located in the vendor directory and managed using\n[govendor](https://github.com/kardianos/govendor) cli tool.\n\n```\ngo test -v -cover\n\nmkdir -p bin\nGOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags \"-X main.Version=dev+git\" -o bin/kd_linux_amd64\n```\n\n\n## Release process\n\nPush / Merge to master will produce a docker\n[image](https://quay.io/repository/ukhomeofficedigital/kd?tab=tags) with a tag `latest`.\n\nTo create a new release, just create a new tag off master.\n\n\n## Contributing\n\nWe welcome pull requests. Please raise an issue to discuss your changes before\nsubmitting a patch.\n\n\n## Author\n\nVaidas Jablonskis [vaijab](https://github.com/vaijab)\n\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-pentest","private":false,"url":"https://github.com/UKHomeOffice/docker-pentest","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/sheff-hub-dev-wiki","private":false,"url":"https://github.com/UKHomeOffice/sheff-hub-dev-wiki","license":null,"readme":false,"travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-versions","private":false,"url":"https://github.com/UKHomeOffice/evw-versions","license":null,"readme":"# evw-versions\nA way of generating a dashboard of all deployed evw software\n\n### install\n\n`npm i`\n\n### collect\n\n`node index.js`\n\n### run\n\nuse something like [supervisor](https://github.com/petruisfan/node-supervisor)\n\n```\nsupervisor -e js,hbs app.js\n```\n\n### aspirations\n\n* [x] collect versions from application published endpoints\n* [x] enqueue all http requests using e.g. [async parallel](http://caolan.github.io/async/docs.html#.parallel)\n* [ ] loudly highlight when versions mismatch between machines\n* [ ] less loudly highlight differences between environments\n* [ ] check versions of `rtp-worldpay-stub` and `mock-integration-service`\t\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drt-scalajs-spa-exploration","private":false,"url":"https://github.com/UKHomeOffice/drt-scalajs-spa-exploration","license":{"key":"apache-2.0","name":"Apache License 2.0","spdxId":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","featured":true},"readme":"# Scala.js SPA-tutorial\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/ochrons/scalajs-spa-tutorial?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![Scala.js](https://www.scala-js.org/assets/badges/scalajs-0.6.8.svg)](https://www.scala-js.org)\n\nTutorial for creating a simple (but potentially complex!) Single Page Application with\n[Scala.js](http://www.scala-js.org/) and [Play](https://www.playframework.com/).\n\n## Purpose\n\nThis project demonstrates typical design patterns and practices for developing SPAs with Scala.js with special focus on\nbuilding a complete application. It started as a way to learn more about Scala.js and related libraries, but then I\ndecided to make it more tutorial-like for the greater good :)\n\nThe code covers typical aspects of building a SPA using Scala.js but it doesn't try to be an all-encompassing example\nfor all the things possible with Scala.js. Before going through this tutorial, it would be helpful if you already know\nthe basics of Scala.js and have read through the official [Scala.js tutorial](http://www.scala-js.org/doc/tutorial.html)\nand the great e-book [Hands-on Scala.js](http://lihaoyi.github.io/hands-on-scala-js/#Hands-onScala.js) by \n[Li Haoyi (@lihaoyi)](https://github.com/lihaoyi).\n\n# Documentation\n\nTutorial [documentation](https://ochrons.github.io/scalajs-spa-tutorial) is now presented as a GitBook.\n\nあなたは日本語を話せますか？Scala.js is Big in Japan, so I'm looking for help to translate the tutorial documentation into Japanese.\nContact me on twitter (@ochrons) or via email (otto@chrons.me) if you're interested!\n\n# Scala IDE users\n\nIf you are using Scala IDE, you need to set additional settings to get your Eclipse project exported from SBT.\n\n```\nset EclipseKeys.skipParents in ThisBuild := false\neclipse\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/home-office-pattern-library","private":false,"url":"https://github.com/UKHomeOffice/home-office-pattern-library","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# GOV.UK Prototype kit\n\n## News\n\n**Upgrading from version 1 to 2:** the latest version of the kit (2.0.0 and later) is not compatible with previous versions. If you update your old prototypes you'll need to [convert them as well](https://github.com/alphagov/govuk_prototype_kit/blob/master/docs/updating-the-kit.md).\n\n## About the prototype kit\n\nThe prototype kit provides a simple way to make interactive prototypes that look like pages on GOV.UK. These prototypes can be used to show ideas to people you work with, and to do user research.\n\nRead the [project principles](docs/principles.md).\n\n## Security\n\nIf you publish your prototypes online, they **must** be protected by a [username and password](docs/guides/publishing-on-heroku.md). This is to prevent members of the public finding prototypes and thinking they are real services.\n\nYou must protect user privacy at all times, even when using prototypes. Prototypes made with the kit look like GOV.UK, but do not have the same security provisions. Always make sure you are handling user data appropriately. \n\n## Installation instructions\n\n- [Installation guide for new users (non technical)](docs/install/introduction.md)\n- [Installation guide for developers (technical)](docs/developer-install-instructions.md)\n\n## Guides\n\n1. [Setting up git](docs/guides/setting-up-git.md)\n2. [Publishing on the web (Heroku)](docs/guides/publishing-on-heroku.md)\n3. [Using GOV.UK Verify](docs/guides/using-verify.md)\n\n## Other documentation\n\n- [Prototype kit principles](docs/principles.md)\n- [Making pages](docs/making-pages.md)\n- [Writing CSS](docs/writing-css.md)\n- [Updating the kit to the latest version](docs/updating-the-kit.md)\n- [Tips and tricks](docs/tips-and-tricks.md)\n- [Creating routes (server-side programming)](docs/creating-routes.md)\n\n## Community\n\nWe have two Slack channels for the Prototype kit. You'll need a government email address to join them.\n\n* [Slack channel for users of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit/)\n* [Slack channel for developers of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit-dev/)\n","travis":false,"contributing":"# Contribution guidelines\n\nWe really like contributions and bug reports, in fact the project wouldn't have got to this stage without them.\nWe do have a few guidelines to bear in mind.\n\n## Community\n\nWe have two Slack channels for the Prototype kit. You'll need a government email address to join them.\n\n* [Slack channel for users of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit/)\n* [Slack channel for developers of the prototype kit](https://ukgovernmentdigital.slack.com/messages/prototype-kit-dev/)\n\n## Raising bugs\n\nWhen raising bugs please explain the issue in good detail and provide a guide to how to replicate it.\nWhen describing the bug it's useful to follow the format:\n\n- what you did\n- what you expected to happen\n- what happened\n\n## Suggesting features\n\nPlease raise feature requests as issues before contributing any code.\n\nThis ensures they are discussed properly before any time is spent on them.\n\n## GOV.UK Elements\n\nThe project contains code taken from the [GOV.UK Elements](https://github.com/alphagov/govuk_elements/) project.\nPlease check that any issues related to that code are raised with that project, not this one.\n\n## Contributing code\n\n### Indentation and whitespace\n\n2-space, soft-tabs only please. No trailing whitespace.\n\n### Versioning\n\nFollow the guidelines on [semver.org](http://semver.org/) for assigning version\nnumbers.\n\nVersions should only be changed in a commit of their own, in a pull request of\ntheir own. This alerts team members to the new version and allows for\nlast-minute scrutiny before the new version is released. Also, by raising a\nseparate pull request, we avoid version number conflicts between feature\nbranches.\n\n### Commit hygiene\n\nPlease see our [git style guide](https://github.com/alphagov/styleguides/blob/master/git.md)\nwhich describes how we prefer git history and commit messages to read.\n","masterBranchProtection":false},{"name":"UKHomeOffice/technical-service-requirements","private":false,"url":"https://github.com/UKHomeOffice/technical-service-requirements","license":null,"readme":"# Technical Service Requirements\n\n### Overview\n\nThe aim of this living documentation is to provide an expectation of what is required of our services in terms\nof the technical implementation. This is broken up into several documents to clearly document how we want to monitor,\niterate, continuously integrate / deploy and debug our services.\n\n### Contributing\n\nIf you feel that there is anything we have missed / incorrectly highlighted, please feel free to change the documentation\nand raise a PR for this to be amended.\n\n### Technical Service Standards\n\n* [Configuration](docs/configuration.md)\n* [Monitoring and Metrics](docs/monitoring_metrics.md)\n* [Logging](docs/logging.md)\n* [Service Discovery](docs/service_discovery.md)\n* [Continuous Integration](docs/ci.md)\n* [Continuous Deployment](docs/cd.md)\n* [Security](docs/security.md)\n* [Performance](docs/performance.md)\n* [Reusability Criteria](docs/reusability.md)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/lev-api-mock","private":false,"url":"https://github.com/UKHomeOffice/lev-api-mock","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# lev-api-mock\nA mock version of the LEV API (and downstream) backend systems\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-drone","private":false,"url":"https://github.com/UKHomeOffice/docker-drone","license":null,"readme":"# Drone docker image\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/drone/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/drone)\n\nThis image trusts [DSP CA](https://github.com/UKHomeOffice/dsp-root-ca).\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/dsp-root-ca","private":false,"url":"https://github.com/UKHomeOffice/dsp-root-ca","license":null,"readme":"# Digital Services Platform Public CA certificates\n\nThis repository contains Root and Intermediate CA certificates for DSP platform.\n\n\n## How to install\n\n### Alpine Linux\n\n```bash\napk add ca-certificates curl\ncurl -s https://raw.githubusercontent.com/UKHomeOffice/dsp-root-ca/master/root-ca.pem > /usr/local/share/ca-certificates/dsp_root_ca.crt\ncurl -s https://raw.githubusercontent.com/UKHomeOffice/dsp-root-ca/master/intermediate-ca.pem > /usr/local/share/ca-certificates/dsp_intermediate_ca.crt\nupdate-ca-certificates\n```\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/scala-skeleton-project","private":false,"url":"https://github.com/UKHomeOffice/scala-skeleton-project","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# scala-skeleton-project\nSkeleton project used for scala programming exercises\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/api-guide-for-developers","private":false,"url":"https://github.com/UKHomeOffice/api-guide-for-developers","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"Home Office API Guide for Developers\n====================================\n:toc:\n:numbered:\n:toc-placement!:\n\ntoc::[]\n\n== Introduction\nThis document is intended to help developers in the Home Office understand our current and recommended approaches for developing APIs\n\n== Authentication\nHow consumers authenticate with an API is important for many APIs. Whilst we've not settled on a standard the following approaches have been tried.\n\n=== Mutual TLS\nMutual TLS means that connecting clients need to have a client certificate before using the service. Typically the system terminating the mutual TLS will add headers to identify the client. The could allow your application to use these for example for granular permissions.\n\n.Pros and Cons of Mutual TLS\n|===\n|Pros | Cons\n|Can use standard nginx or similar for this purpose, so your application doesn't need to worry about auth\n|Client certificates will expire, and hence need to recreate these for all clients periodically, which introduces a lot of overhead and potential for errors\n\n|\n|Have to maintain a CA for signing client certs\n|===\n\n=== OAuth2 with keycloak\nOAuth2 is very commonly used for user authentication, but less frequently for API authentication. This is reflected by fewer client auth libraries available than you may expect. However the logic is trivial to implement.\n\nWe can implement OAuth2 authentication trivially using keycloak-proxy in front of an API, authenticating to a centralised keycloak server. This is especially beneficial as keycloak-proxy combined with a centralised keycloak give many capabilities for free such as role and user management, brute force prevention.\n\n.Pros and Cons of OAuth2 with keycloak\n|===\n|Pros | Cons\n|Can implement trivially using keycloak-proxy and keycloak\n|Client auth is slightly more complicated\n\n|Get a lot of capabilities for free with keycloak\n|\n\n|Possibility for consumers to rotate their own credentials, reducing administrative overhead\n|\n\n|Creds are only sent to the system on first auth or when the authentication token expires\n|===\n\n=== Basic HTTP Auth with username and password\nBasic HTTP auth requires a username and password to be sent with every request.\n\n.Pros and Cons of Basic HTTP Auth\n|===\n|Pros | Cons\n|Very simple to set up initially\n|Doing anything beyond basic auth is difficult\n\n|\n|User accounts have to be managed by your application, introducing complexity\n|===\n\n== Acceptance tests, documentation, and creating a mock of your API\nThese topics all go hand in hand - frequently one document can be the basis for tests, documentation, and for generating a mock. Here we will cover the common approaches we favour, and when each is appropriate.\n\n=== Recommended approach - Rest-assured tests with Spring RestDocs (you don't need Spring!), and Wiremock\n\n*Why we like this approach*\n\n* It enables one set of tests to generate docs and mock, helping to make sure everything ties together\n* The mock generated is flexible - it can have multiple canned responses per endpoint depending on the request params, whereas many other automatically generated mocks only allow one canned response per endpoint\n* The docs generated are flexible - A person writes the overall documentation, meaning it can be structured however makes most sense for your API, with as much detail as you like. The generated snippets then give real examples that you can embed into sections. This allows you to put much more context around the documentation than you may otherwise have been able to do\n* Allows testing and documentation of a json schema for your API\n\n*Example application using this approach* +\nhttps://ukhomeoffice.github.io/lev-api-docs/[Example docs] and https://github.com/UKHomeOffice/lev-api-docs/tree/master/mock[mock] for the LEV project are available here.\n\nhttps://gitlab.digital.homeoffice.gov.uk/lev/lev-api-scala[Code] is available here (you may need to ask a member of the LEV team for access).\n\nIf you have any questions ask in the developers slack channel and one of us will get back to you.\n\n*https://github.com/rest-assured/rest-assured[Rest-assured]* +\nRest assured is a library designed for making testing APIs straightforward. We recommend it here as it works out the box with Spring RestDocs.\n\n*http://projects.spring.io/spring-restdocs/[Spring Restdocs]* +\nSpring Restdocs allows you to generate documentation snippets for each of your tests. It records the request and the response and creates snippets for each of these. You can then embed these snippets into a master document that describes your whole API.\n\nDocumentation snippets are recorded in asciidoctor format, which is like a more advanced version of markdown. The main readme asciidoc file can then embed snippets from other files\n\n*http://wiremock.org/[Wiremock]* +\nWiremock is a mock API that allows you to record a series of requests and responses (by proxying requests through wiremock). When running your rest-assured tests you should proxy requests through a wiremock instance in record mode. It will then generate a number of files that represent the requests and responses. These files can then be used to run wiremock as a mock, where it will then respond with the recorded responses.\n\n=== Alternative approach - http://swagger.io/[Swagger]\nSwagger is a very common way to document APIs. It does a reasonable job of getting some API documentation available. The shortcomings are that it can become out of sync (it relies heavily on annotations which can get out of date), the mock you can generate from a swagger spec is very inflexible, and the docs are also very inflexible. The major benefits are that it is a common format that you can put together very quickly.\n\n=== Alternative approach - https://apiblueprint.org/[API Blueprint]\nAPI blueprint allows you to have one markdown file which is a specification of your API. From this file you can generate html docs, run tests, and generate a mock version of your API. The shortcomings are that the mock you can generate from an API Blueprint is very inflexible, and the docs are also very inflexible. The major benefits are that it is a common format that you can put together very quickly.\n\n== Technologies for building APIs\nThis will never be a conclusive list, but just says what technologies we have found good and bad for building APIs, and when we would recommend each of them.\n\n== API Versioning\nThis section will detail our approach to API versioning. Please note though having to version an API is never a desirable thing and should be avoided if possible using the strategy of expanding and contracting APIs (contracting once all clients have migrated away from old functionality).\n\n== API Gateways\nCurrently still something we are looking into, so consider this a placeholder for thoughts on API Gateways\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/application-pattern-library","private":false,"url":"https://github.com/UKHomeOffice/application-pattern-library","license":null,"readme":"# Application Pattern Library\n\nA library of patterns for a Home Office application. Created by researchers, designers and developers in Home Office Digital, Data and Technology.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-nginx-proxy-govuk","private":false,"url":"https://github.com/UKHomeOffice/docker-nginx-proxy-govuk","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# GovUK-branded NGINX reverse proxy\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/nginx-proxy-govuk/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/nginx-proxy-govuk)\n\nSimply a version of [docker-nginx-proxy] with GovUK-branded error\npages. - Please read [the documentation for that image].\n\n**Warning:** This also adds debugging information to 418 (Teapot) pages.\n             You might not want this if you want to take the small\n             advantage of 'security through obscurity'. Feel free to\n             mount in your own SSI 'partial' to remove this information.\n\n## Find Us\n\n* [GitHub]\n* [Quay.io]\n\n## Versioning\n\nThis image will be versioned alongside the version of\n[docker-nginx-proxy] it consumes, with a minor build number taggen on\nthe end. For the versions available, see the [tags on this repository].\n\n## Authors\n\n* **Daniel A.C. Martin** - *Initial work* - [daniel-ac-martin]\n\nSee also the list of [contributors] who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md]\nfile for details.\n\n[contributors]:                     https://github.com/UKHomeOffice/docker-nginx-proxy-govuk/graphs/contributors\n[daniel-ac-martin]:                 https://github.com/daniel-ac-martin\n[docker-nginx-proxy]:               https://github.com/UKHomeOffice/docker-nginx-proxy\n[GitHub]:                           https://github.com/UKHomeOffice/docker-nginx-proxy-govuk\n[LICENSE.md]:                       LICENSE.md\n[Quay.io]:                          https://quay.io/repository/ukhomeofficedigital/nginx-proxy-govuk\n[tags on this repository]:          https://github.com/UKHomeOffice/docker-nginx-proxy-govuk/tags\n[the documentation for that image]: https://github.com/UKHomeOffice/docker-nginx-proxy/blob/master/README.md\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/evw-validation-rules","private":false,"url":"https://github.com/UKHomeOffice/evw-validation-rules","license":null,"readme":"# evw-validation-rules\n\nA collection of validation rules for all Electronic Visa Wavier applications to use","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-node-hello-world","private":false,"url":"https://github.com/UKHomeOffice/docker-node-hello-world","license":null,"readme":"# Docker + Node \"Hello World\" Example\n\n\nThis repository gives you a quick introduction to getting docker running with Node. It is intended for the Docker beginner.\n\nYou can adapt the same approach to other languages but I chose Node because it's what I use most often.\n\n\n## Setup\n\nFirst, checkout this project locally and then follow these steps:\n\n0. Go through the Docker [installation](https://docs.docker.com/installation/) and [getting started guide](https://docs.docker.com/mac/started/) before you start.\n1. Install the [Docker Toolbox](https://www.docker.com/docker-toolbox).\n2. Start a \"Quickstart Terminal\" session (see the getting started guide).\n3. Build the Docker image: `docker build -t hello-world .`\n4. Run the image in a container: `docker run -d -p 4001:4000 hello-world`\n  - The `-d` flag says to run the container in the background (daemon mode).\n  - The `-p` flag maps port 4000 from the container to port 4001 on the docker machine.\n5. View your new container: `docker ps -a`\n6. Check the logs for your container: `docker logs <container-id>`\n7. Check the port of the container: `docker port <container-id>`\n8. Open the app running on the docker machine: `open http://$(docker-machine ip default):4001`\n\n\n\n## Notes & Tips\n\n- If you make changes to your application, you will need to rebuild your image and restart your container.\n- The `docker-machine` command controls the virtual machine that is running Docker on your machine.\n- View logs for a docker container: `docker logs <container-id>`\n- List the running containers: `docker ps -a`\n- List all local images: `docker images`\n- Remove an image: `docker rmi <image-id>`\n- Remove a container: `docker rm <container-id>`\n\n\n## Further Reading\n\n- Checkout [Tutum](http://tutum.co) for hosting private docker registries and managing your infrastructure.\n  - Check out the [Tutum CLI](https://github.com/tutumcloud/cli): `brew install tutum`\n- Check out this [Docker + Tutum hello world repo](https://github.com/tutumcloud/hello-world)\n\n\n## Credits and License\n\nPut together by [Dana Woodman](mailto:dana@danawoodman.com) and released under the MIT license. Have fun!\n\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/scala-hello-world","private":false,"url":"https://github.com/UKHomeOffice/scala-hello-world","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"Hello World with Scala Play\n===========================\n\nThis is a vanilla Scala Play application for demo purposes.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/survey_tool_investigations","private":false,"url":"https://github.com/UKHomeOffice/survey_tool_investigations","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# survey_tool_investigations\nInvestigations into using the API of a variety of survey tools\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/drone-s3cache","private":false,"url":"https://github.com/UKHomeOffice/drone-s3cache","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# drone-s3cache [![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/drone-s3cache/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/drone-s3cache)\n\nDrone plugin for caching build artifacts in S3 \n\n\nThis plugin allows for caching build artifact directories containing external libraries, packages, etc in S3 which should speed up build process. Cache is currently keyed by repository name e.g. `UKHomeOffice/<project_name>`. This should suffice in most cases. S3 cache automatically expires after 7 days.  \n\n## Configuration\n\nThe following parameters are used to configure the plugin:\n\n- `drone_s3_cache_mode`: defines the mode of operation. Possible values `pull`, `push`.\n- `drone_s3_cache_folders`: list of local project directories to be cached in S3, e.g.:\n```\ndrone_s3_cache_folders: \n  - .bundle\n  - folder1\n  - folder2/foo\n```\n\n- `drone_s3_cache_bucket_name`: S3 bucket name. This can be configured in drone secrets as `DRONE_S3_CACHE_BUCKET_NAME`. Ensure drone has permissions to `get` and `put` objects in that bucket.\n\nAWS credentials need to be present in drone secrets (preferred!) as `DRONE_S3_CACHE_AWS_ACCESS_KEY_ID`, `DRONE_S3_CACHE_AWS_SECRET_ACCESS_KEY` or passed to the container via environment variables (local testing!) as `AWS_SECRET_KEY_ID`, `AWS_SECRET_ACCESS_KEY`\n\n\n### Drone configuration example\n\n```yaml\npipeline:\n  drone_s3_cache_pull:\n    image: quay.io/ukhomeofficedigital/drone-s3cache:latest\n    drone_s3_cache_mode: \"pull\"\n\n  build:\n    image: ruby:2.3.1-alpine\n    commands:\n      - bundle install --path .bundle\n    when:\n      event: [push, pull_request]\n\n  drone_s3_cache_push:\n    image: quay.io/ukhomeofficedigital/drone-s3cache:latest\n    drone_s3_cache_folders: \".bundle\"\n    drone_s3_cache_mode: \"push\"\n```\n\n## Release process\n\nPush / Merge to master will produce a docker\n[image](https://quay.io/repository/ukhomeofficedigital/drone-s3cache?tab=tags) with a tag `latest`.\n\nTo create a new release, just create a new tag off master.\n\n## Contributing\n\nWe welcome pull requests. Please check issues and existing PRs before submitting a patch.\n\n## Author\n\nMarcin Ciszak [marcinc](https://github.com/marcinc)\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/github-org-team-creator","private":false,"url":"https://github.com/UKHomeOffice/github-org-team-creator","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"This will be a tool to add all users from a github org to a team within that github org\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-rpm-builder","private":false,"url":"https://github.com/UKHomeOffice/docker-rpm-builder","license":null,"readme":"# Docker RPM Builder\n\nA Docker image to build rpms, includes ruby, fpm and rpmbuild.\n\n### Usage\n\ndocker run -it -v ${PWD}:${PWD} -w ${PWD} quay.io/ukhomeofficedigital/rpm-builder:v0.1 <build rpm script>\n\n## Contributing\n\nContributions are most certainly welcome. If you want to introduce a breaking\nchange or any other major change, please raise an issue first to discuss.\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/hof-emailer","private":false,"url":"https://github.com/UKHomeOffice/hof-emailer","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# HOF Emailer\n\nAn emailer service for HOF applications.\n\n## Installation\n\n```bash\n$ npm install hof-emailer --save\n```\n\n## Usage\n\nHOF Emailer exports a class which should be initialised with an options object containing the following config:\n\n* steps <Object>: your step config\n* fields <Object>: your field config\n* data <Object>: a hash of field names and values\n* groupBySection <Boolean>: group fields into sections\n* subject <String>: the email subject\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit\n  permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org),\nversion 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/passports-keystore","private":false,"url":"https://github.com/UKHomeOffice/passports-keystore","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# passports-keystore\nStore and retrieve named objects an express session\n\n## Usage\n\n```\nconst Keystore = require('hmpo-keystore');\n\nkeystore = new Keystore(req, 'name');\n\nkeystore.setValue({ object: 'value' });\nlet obj = keystore.getValue();\nkeystore.clear();\n\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/docker-neo4j-haproxy","private":false,"url":"https://github.com/UKHomeOffice/docker-neo4j-haproxy","license":{"key":"other","name":"Other","spdxId":null,"url":null,"featured":false},"readme":"# docker-neo4j-haproxy\n\n## Instructions For Use\n\nJust simply run:\n\n`docker run -ti -e AUTH=<user:pass> -e proxy='proxy1;proxy2;proxy3' quay.io/ukhomeofficedigital/neo4j-haproxy:v0.0.1`\n\n##Environment Variables\n\nAUTH :- Either the colon delineated pair like this: `user:pass` or a base64 encoded string like this: `dXNlcjpwYXNz`\n\nPROXY :- Submit a full semicolon delineated string like this: `neo4j-1:7474;neo4j-2:7474;neo4j-3:7474`\n\n## Acknowledgements\n\nMost of the hard work was already done by Stefan Armbruster in his blog post here: http://blog.armbruster-it.de/2015/08/neo4j-and-haproxy-some-best-practices-and-tricks/\n\n## Find Us\n\n* [GitHub](https://github.com/UKHomeOffice/docker-neo4j-haproxy)\n* [Quay.io](https://quay.io/repository/ukhomeofficedigital/nginx-proxy)\n\n## Contributing\n\nFeel free to submit pull requests and issues. If it's a particularly large PR, you may wish to \ndiscuss it in an issue first.\n\nPlease note that this project is released with a [Contributor Code of Conduct](CONTRIBUTING.md). \nBy participating in this project you agree to abide by its terms.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for the version tags available See the tags on this repository. \n\n## Authors\n\n* **Giles Hinchcliff** - *Initial work* - [gileshinchcliff](https://github.com/gileshinchcliff)\n\nSee also the list of \n[contributors](https://github.com/UKHomeOffice/docker-nginx-proxy/graphs/contributors) who \nparticipated in this project.\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n","masterBranchProtection":false},{"name":"UKHomeOffice/hello-peeps","private":false,"url":"https://github.com/UKHomeOffice/hello-peeps","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# hello-peeps\ntesting for drone on this simple application\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/end-tenancy","private":false,"url":"https://github.com/UKHomeOffice/end-tenancy","license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdxId":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0","featured":true},"readme":"# End Tenancy\n\n[![Docker Repository on Quay.io](https://quay.io/repository/ukhomeofficedigital/end-tenancy/status \"Docker Repository on Quay.io\")](https://quay.io/repository/ukhomeofficedigital/end-tenancy) [![Build Status](https://travis-ci.org/UKHomeOffice/end-tenancy.svg?branch=master)](https://travis-ci.org/UKHomeOffice/end-tenancy)\n\nThis project is built with [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap) and uses [Docker](https://www.docker.com/).\n\n## Getting started\n\nGet the project from Github\n```bash\n$ git clone git@github.com:UKHomeOffice/end-tenancy.git && cd end-tenancy\n```\n\nInstall the dependencies and build the project resources\n```bash\n$ npm install\n```\n\n[Install Docker Compose](https://docs.docker.com/compose/install/)\n\nRun the services locally with Docker Compose\n```bash\n$ docker-compose up\n```\n\nGetting your hands dirty (You'll need [Redis](http://redis.io/) for this)\n```bash\n$ npm run dev\n```\n\nFor anything else end-tenancy-related, look in [package.json](./package.json) for a full list of scripts etc, and\n[config.js](./config.js) for environment variables.\n\nOtherwise, see [HOF-Bootstrap](https://github.com/UKHomeOffice/hof-bootstrap).\n","travis":true,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/keycloak-utils","private":false,"url":"https://github.com/UKHomeOffice/keycloak-utils","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Keycloak Utils\n\n## [import-users.sh](./import-users.sh) - Administer Keycloak accounts from the command-line\nSee [users.csv](./users.csv) for example format.\n### Prerequisites in the Keycloak realm:\n1. Create client (eg. keycloak_acct_admin) for this script. Access Type: public.\n1. Add the realm admin user (eg. realm_admin) to the realm\n1. In the realm admin user's settings > Client Role > \"realm-management\", assign it all available roles\n1. In realm, enable Direct Grant API at Settings > Login\n\n### Import users found in csv\n```sh\n$ ./import-users.sh --import users.csv\n```\n\n### Delete users found in csv\n```sh\n$ ./import-users.sh --import users.csv\n```\n","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/pttg-fs-integration","private":false,"url":"https://github.com/UKHomeOffice/pttg-fs-integration","license":null,"readme":"# pttg-fs-integration","travis":false,"contributing":false,"masterBranchProtection":false},{"name":"UKHomeOffice/kubernetes-e2e-binaries","private":false,"url":"https://github.com/UKHomeOffice/kubernetes-e2e-binaries","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# kubernetes-e2e-binaries\n\n[![Docker Repository on Quay](https://quay.io/repository/ukhomeofficedigital/kubernetes-e2e-binaries/status \"Docker Repository on Quay\")](https://quay.io/repository/ukhomeofficedigital/kubernetes-e2e-binaries)\n\n# tldr\nIf you've seen the readme before and you're after the _tldr_ version of how to build and contribute then go straight to the *Release process* section.\n\n# What is this software and what does it do\nThe purpose of this repository is to create an immutable artifact with pre-baked and compiled kubernetes binaries for the version of kubernetes that needs to be tested.\n\nThe artifact created from this repo can be used to import into a working kubernetes cluster code ( works even for a git checkout of the kubernetes source code with a matching tag ) the kubernetes upstream binaries including the binaries needed for end-to-end testing.\n\nThis way you get kubernetes compiled and versioned binaries, without having to wait the long time needed to compile them.\nThis will save additional time when testing against a kubernetes cluster in your continuous integration software !\n\n# How to use the software\nThis software is geared to be included by your CI in your custom build steps.\n\nOne of your purpose built build steps will need to copy the `_output` kubernetes directory from this image , from the directory `/kubernetes/${KUBERNETES_VERSION}/_output`, into your CI checked out source code.\n\n`KUBERNETES_VERSION` tracks the kubernetes upstream release tags.\n\n\n# Release process\nThe release process is done using drone.\n\n## local testing\nApart from the push to the upstream container registry, all the CI build steps can be reproduced on your laptop/workstation.\n\nThis makes it easy to test your changes before pushing them to the CI system.\n\n## kubernetes version\nTo target a specific version of kubernetes you have to change a few things in the repository.\n- for the `Makefile` export the KUBERNETES_VERSION environment variable before running any make targets\n- for `.drone.yml` you have to change the KUBERNETES_VERSION environment variable in every build step before pushing to your CI. This works this way because at this time drone doesn't have support for setting global environment variables.\n\n\n# Licensing\nSee `LICENSE.md`\n\n# Raising issues\nUse the github issue functionality on this repository to raise issue against this project.\n\n# Contributing\nSee `CONTRIBUTING.md`\n","travis":false,"contributing":"# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a\n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment\n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you\n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","masterBranchProtection":false},{"name":"UKHomeOffice/ubuntu-pxe","private":false,"url":"https://github.com/UKHomeOffice/ubuntu-pxe","license":{"key":"mit","name":"MIT License","spdxId":"MIT","url":"https://api.github.com/licenses/mit","featured":true},"readme":"# Secure ISO and PXE Desktop Creation\n\nThis simple script will create an unattended Ubuntu ISO from start to finish and enable a PXE Server which will enable building of a semi hardened build of 16.04 Ubuntu.\n\n\n## Usage\n\n* From your command line, run the following commands:\n\n```\nmake vagrant\n```\n\n## What it does\n\nThis script does a bunch of stuff, here's the quick walk-through:\n\n* Downloads the appropriate Ubuntu original ISO straight from the Ubuntu servers; if a file with the exact name exists, it will use that instead (so it won't download it more than once if you are creating several unattended ISO's with different defaults)\n* Downloads the matching Ubuntu Netboot files to allow for PXE booting\n* Sets up DNSMasq as a local DHCP Server and PXE/Tftp Server\n* Sets up apt-proxy-ng as a local Apt Cache to save bandwidth when installing multiple machine.\n* Language/locale: en_GB\n* Keyboard layout: UK\n* Root login disabled (so make sure you write down your default usernames' password!)\n* Partitioning: LVM, full disk, with LUKS encryption following CIS partitioning layout guidelines\n* Install the mkpasswd program (part of the whois package) to generate a hashed version of your password\n* Install the genisoimage program to generate the new ISO file\n* Mount the downloaded ISO image to a temporary folder\n* Copy the contents of the original ISO to a working directory\n* Set the default installer language\n* Add/update the preseed file\n* Add the autoinstall option to the installation menu\n* Generate the new ISO file\n* Cleanup\n* Show a summary of what happended:\n\n### Steps to install ...\n\nTo install a new desktop or laptop, connect a network cable from the machine to an isolated network. The seed server must also have on interface on the isolated network (it can be a point to point link) but must also have an internet connection to fetch remote packages. \nOnce ready either set the machine to boot via PXE if this is an option or use a USB key with the image burnt as a preboot.\nNotes:\n- Upon first boot the system will ask for a few user details and a new LUKS password (choose something secure)\n- this allows you to either add a single shared login root user or create a bespoke end user who has root permissions (@molliver still true?)\n- The system will also run a couple of other hardening desktop settings as per the CESG desktop guidelines. \n- During the install you may be asked for a hostname but at this point you can use anything. \n- Once the install is complete the machine will reboot - at this point set the machine to not boot from the network or from USB in the BIOS and set a BIOS password.\n\n\n\n\n\n\n### Steps to Create ISO ...\n\n* Run the make as per above which will produce you an ISO image in the local directory.\n* Burn the ISO to a USB key or CD as a bootable image.\n\nTo do this on OSx you can do:\n\n```\ndiskutil list\ndiskutil unmountDisk /dev/disk4\ndiskutil list\n# check that disk is the one you intend to overwrite\nsudo dd if=${PWD}/xenial-custom-amd64.iso of=/dev/rdisk4 bs=1m\ndiskutil eject /dev/disk4\n```\n\n(where disk4 is the USB disk, if not change as appropriate)\n\n\n## Design\n\nThis repo is designed as a base for the CESG Guidelines, these design decisions, mitigations and process are viewable here [development_desktops](development_desktops.md)\n","travis":false,"contributing":false,"masterBranchProtection":false}]